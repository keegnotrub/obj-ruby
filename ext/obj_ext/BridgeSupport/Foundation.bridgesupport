<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct name='NSAffineTransformStruct' type64='{_NSAffineTransformStruct=&quot;m11&quot;d&quot;m12&quot;d&quot;m21&quot;d&quot;m22&quot;d&quot;tX&quot;d&quot;tY&quot;d}'/>
<struct name='NSDecimal' opaque='true' type64='{_NSDecimal=&quot;_exponent&quot;i&quot;_length&quot;I&quot;_isNegative&quot;I&quot;_isCompact&quot;I&quot;_reserved&quot;I&quot;_mantissa&quot;[8S]}'/>
<struct name='NSEdgeInsets' type64='{NSEdgeInsets=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'/>
<struct name='NSFastEnumerationState' type64='{_NSFastEnumerationState=&quot;state&quot;Q&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^Q&quot;extra&quot;[5Q]}'/>
<struct name='NSHashEnumerator' type64='{_NSHashEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}'/>
<struct name='NSHashTableCallBacks' type64='{_NSHashTableCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'/>
<struct name='NSMapEnumerator' type64='{_NSMapEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}'/>
<struct name='NSMapTableKeyCallBacks' type64='{_NSMapTableKeyCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?&quot;notAKeyMarker&quot;^v}'/>
<struct name='NSMapTableValueCallBacks' type64='{_NSMapTableValueCallBacks=&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'/>
<struct name='NSOperatingSystemVersion' type64='{_NSOperatingSystemVersion=&quot;majorVersion&quot;q&quot;minorVersion&quot;q&quot;patchVersion&quot;q}'/>
<struct name='NSPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<struct name='NSPointArray' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<struct name='NSPointPointer' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<struct name='NSRange' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}'/>
<struct name='NSRangePointer' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}'/>
<struct name='NSRect' type64='{CGRect=&quot;origin&quot;{CGPoint}&quot;size&quot;{CGSize}}'/>
<struct name='NSRectArray' type64='{CGRect=&quot;origin&quot;{CGPoint}&quot;size&quot;{CGSize}}'/>
<struct name='NSRectPointer' type64='{CGRect=&quot;origin&quot;{CGPoint}&quot;size&quot;{CGSize}}'/>
<struct name='NSSize' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
<struct name='NSSizeArray' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
<struct name='NSSizePointer' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
<struct name='NSSwappedDouble' type64='{_NSSwappedDouble=&quot;v&quot;Q}'/>
<struct name='NSSwappedFloat' type64='{_NSSwappedFloat=&quot;v&quot;I}'/>
<opaque name='NSAppleEventManagerSuspensionID' type64='^{__NSAppleEventManagerSuspension=}'/>
<opaque name='NSZone' type64='^{_NSZone=}'/>
<constant name='NSAMPMDesignation' type64='@'/>
<constant name='NSAlternateDescriptionAttributeName' type64='@'/>
<constant name='NSAppleEventManagerWillProcessFirstEventNotification' type64='@'/>
<constant name='NSAppleEventTimeOutDefault' type64='d'/>
<constant name='NSAppleEventTimeOutNone' type64='d'/>
<constant name='NSAppleScriptErrorAppName' type64='@'/>
<constant name='NSAppleScriptErrorBriefMessage' type64='@'/>
<constant name='NSAppleScriptErrorMessage' type64='@'/>
<constant name='NSAppleScriptErrorNumber' type64='@'/>
<constant name='NSAppleScriptErrorRange' type64='@'/>
<constant name='NSArgumentDomain' type64='@'/>
<constant name='NSAssertionHandlerKey' type64='@'/>
<constant name='NSAverageKeyValueOperator' type64='@'/>
<constant name='NSBuddhistCalendar' type64='@'/>
<constant name='NSBundleDidLoadNotification' type64='@'/>
<constant name='NSBundleResourceRequestLoadingPriorityUrgent' type64='d'/>
<constant name='NSBundleResourceRequestLowDiskSpaceNotification' type64='@'/>
<constant name='NSCalendarDayChangedNotification' type64='@'/>
<constant name='NSCalendarIdentifierBuddhist' type64='@'/>
<constant name='NSCalendarIdentifierChinese' type64='@'/>
<constant name='NSCalendarIdentifierCoptic' type64='@'/>
<constant name='NSCalendarIdentifierEthiopicAmeteAlem' type64='@'/>
<constant name='NSCalendarIdentifierEthiopicAmeteMihret' type64='@'/>
<constant name='NSCalendarIdentifierGregorian' type64='@'/>
<constant name='NSCalendarIdentifierHebrew' type64='@'/>
<constant name='NSCalendarIdentifierISO8601' type64='@'/>
<constant name='NSCalendarIdentifierIndian' type64='@'/>
<constant name='NSCalendarIdentifierIslamic' type64='@'/>
<constant name='NSCalendarIdentifierIslamicCivil' type64='@'/>
<constant name='NSCalendarIdentifierIslamicTabular' type64='@'/>
<constant name='NSCalendarIdentifierIslamicUmmAlQura' type64='@'/>
<constant name='NSCalendarIdentifierJapanese' type64='@'/>
<constant name='NSCalendarIdentifierPersian' type64='@'/>
<constant name='NSCalendarIdentifierRepublicOfChina' type64='@'/>
<constant name='NSCharacterConversionException' type64='@'/>
<constant name='NSChineseCalendar' type64='@'/>
<constant name='NSClassDescriptionNeededForClassNotification' type64='@'/>
<constant name='NSCocoaErrorDomain' type64='@'/>
<constant name='NSConnectionDidDieNotification' type64='@'/>
<constant name='NSConnectionDidInitializeNotification' type64='@'/>
<constant name='NSConnectionReplyMode' type64='@'/>
<constant name='NSCountKeyValueOperator' type64='@'/>
<constant name='NSCurrencySymbol' type64='@'/>
<constant name='NSCurrentLocaleDidChangeNotification' type64='@'/>
<constant name='NSDateFormatString' type64='@'/>
<constant name='NSDateTimeOrdering' type64='@'/>
<constant name='NSDeallocateZombies' type64='B'/>
<constant name='NSDebugDescriptionErrorKey' type64='@'/>
<constant name='NSDebugEnabled' type64='B'/>
<constant name='NSDecimalDigits' type64='@'/>
<constant name='NSDecimalNumberDivideByZeroException' type64='@'/>
<constant name='NSDecimalNumberExactnessException' type64='@'/>
<constant name='NSDecimalNumberOverflowException' type64='@'/>
<constant name='NSDecimalNumberUnderflowException' type64='@'/>
<constant name='NSDecimalSeparator' type64='@'/>
<constant name='NSDefaultRunLoopMode' type64='@'/>
<constant name='NSDestinationInvalidException' type64='@'/>
<constant name='NSDidBecomeSingleThreadedNotification' type64='@'/>
<constant name='NSDistinctUnionOfArraysKeyValueOperator' type64='@'/>
<constant name='NSDistinctUnionOfObjectsKeyValueOperator' type64='@'/>
<constant name='NSDistinctUnionOfSetsKeyValueOperator' type64='@'/>
<constant name='NSEarlierTimeDesignations' type64='@'/>
<constant name='NSEdgeInsetsZero' type64='{NSEdgeInsets=dddd}'/>
<constant name='NSErrorFailingURLStringKey' type64='@'/>
<constant name='NSExtensionHostDidBecomeActiveNotification' type64='@'/>
<constant name='NSExtensionHostDidEnterBackgroundNotification' type64='@'/>
<constant name='NSExtensionHostWillEnterForegroundNotification' type64='@'/>
<constant name='NSExtensionHostWillResignActiveNotification' type64='@'/>
<constant name='NSExtensionItemAttachmentsKey' type64='@'/>
<constant name='NSExtensionItemAttributedContentTextKey' type64='@'/>
<constant name='NSExtensionItemAttributedTitleKey' type64='@'/>
<constant name='NSExtensionItemsAndErrorsKey' type64='@'/>
<constant name='NSExtensionJavaScriptFinalizeArgumentKey' type64='@'/>
<constant name='NSExtensionJavaScriptPreprocessingResultsKey' type64='@'/>
<constant name='NSFTPPropertyActiveTransferModeKey' type64='@'/>
<constant name='NSFTPPropertyFTPProxy' type64='@'/>
<constant name='NSFTPPropertyFileOffsetKey' type64='@'/>
<constant name='NSFTPPropertyUserLoginKey' type64='@'/>
<constant name='NSFTPPropertyUserPasswordKey' type64='@'/>
<constant name='NSFailedAuthenticationException' type64='@'/>
<constant name='NSFileAppendOnly' type64='@'/>
<constant name='NSFileBusy' type64='@'/>
<constant name='NSFileCreationDate' type64='@'/>
<constant name='NSFileDeviceIdentifier' type64='@'/>
<constant name='NSFileExtensionHidden' type64='@'/>
<constant name='NSFileGroupOwnerAccountID' type64='@'/>
<constant name='NSFileGroupOwnerAccountName' type64='@'/>
<constant name='NSFileHFSCreatorCode' type64='@'/>
<constant name='NSFileHFSTypeCode' type64='@'/>
<constant name='NSFileHandleConnectionAcceptedNotification' type64='@'/>
<constant name='NSFileHandleDataAvailableNotification' type64='@'/>
<constant name='NSFileHandleNotificationDataItem' type64='@'/>
<constant name='NSFileHandleNotificationFileHandleItem' type64='@'/>
<constant name='NSFileHandleNotificationMonitorModes' type64='@'/>
<constant name='NSFileHandleOperationException' type64='@'/>
<constant name='NSFileHandleReadCompletionNotification' type64='@'/>
<constant name='NSFileHandleReadToEndOfFileCompletionNotification' type64='@'/>
<constant name='NSFileImmutable' type64='@'/>
<constant name='NSFileManagerUnmountDissentingProcessIdentifierErrorKey' type64='@'/>
<constant name='NSFileModificationDate' type64='@'/>
<constant name='NSFileOwnerAccountID' type64='@'/>
<constant name='NSFileOwnerAccountName' type64='@'/>
<constant name='NSFilePathErrorKey' type64='@'/>
<constant name='NSFilePosixPermissions' type64='@'/>
<constant name='NSFileProtectionComplete' type64='@'/>
<constant name='NSFileProtectionCompleteUnlessOpen' type64='@'/>
<constant name='NSFileProtectionCompleteUntilFirstUserAuthentication' type64='@'/>
<constant name='NSFileProtectionKey' type64='@'/>
<constant name='NSFileProtectionNone' type64='@'/>
<constant name='NSFileReferenceCount' type64='@'/>
<constant name='NSFileSize' type64='@'/>
<constant name='NSFileSystemFileNumber' type64='@'/>
<constant name='NSFileSystemFreeNodes' type64='@'/>
<constant name='NSFileSystemFreeSize' type64='@'/>
<constant name='NSFileSystemNodes' type64='@'/>
<constant name='NSFileSystemNumber' type64='@'/>
<constant name='NSFileSystemSize' type64='@'/>
<constant name='NSFileType' type64='@'/>
<constant name='NSFileTypeBlockSpecial' type64='@'/>
<constant name='NSFileTypeCharacterSpecial' type64='@'/>
<constant name='NSFileTypeDirectory' type64='@'/>
<constant name='NSFileTypeRegular' type64='@'/>
<constant name='NSFileTypeSocket' type64='@'/>
<constant name='NSFileTypeSymbolicLink' type64='@'/>
<constant name='NSFileTypeUnknown' type64='@'/>
<constant name='NSFoundationVersionNumber' type64='d'/>
<constant name='NSGenericException' type64='@'/>
<constant name='NSGlobalDomain' type64='@'/>
<constant name='NSGrammarCorrections' type64='@'/>
<constant name='NSGrammarRange' type64='@'/>
<constant name='NSGrammarUserDescription' type64='@'/>
<constant name='NSGregorianCalendar' type64='@'/>
<constant name='NSHTTPCookieComment' type64='@'/>
<constant name='NSHTTPCookieCommentURL' type64='@'/>
<constant name='NSHTTPCookieDiscard' type64='@'/>
<constant name='NSHTTPCookieDomain' type64='@'/>
<constant name='NSHTTPCookieExpires' type64='@'/>
<constant name='NSHTTPCookieManagerAcceptPolicyChangedNotification' type64='@'/>
<constant name='NSHTTPCookieManagerCookiesChangedNotification' type64='@'/>
<constant name='NSHTTPCookieMaximumAge' type64='@'/>
<constant name='NSHTTPCookieName' type64='@'/>
<constant name='NSHTTPCookieOriginURL' type64='@'/>
<constant name='NSHTTPCookiePath' type64='@'/>
<constant name='NSHTTPCookiePort' type64='@'/>
<constant name='NSHTTPCookieSameSiteLax' type64='@'/>
<constant name='NSHTTPCookieSameSitePolicy' type64='@'/>
<constant name='NSHTTPCookieSameSiteStrict' type64='@'/>
<constant name='NSHTTPCookieSecure' type64='@'/>
<constant name='NSHTTPCookieValue' type64='@'/>
<constant name='NSHTTPCookieVersion' type64='@'/>
<constant name='NSHTTPPropertyErrorPageDataKey' type64='@'/>
<constant name='NSHTTPPropertyHTTPProxy' type64='@'/>
<constant name='NSHTTPPropertyRedirectionHeadersKey' type64='@'/>
<constant name='NSHTTPPropertyServerHTTPVersionKey' type64='@'/>
<constant name='NSHTTPPropertyStatusCodeKey' type64='@'/>
<constant name='NSHTTPPropertyStatusReasonKey' type64='@'/>
<constant name='NSHebrewCalendar' type64='@'/>
<constant name='NSHelpAnchorErrorKey' type64='@'/>
<constant name='NSHourNameDesignations' type64='@'/>
<constant name='NSISO8601Calendar' type64='@'/>
<constant name='NSImageURLAttributeName' type64='@'/>
<constant name='NSInconsistentArchiveException' type64='@'/>
<constant name='NSIndianCalendar' type64='@'/>
<constant name='NSInflectionAlternativeAttributeName' type64='@'/>
<constant name='NSInflectionRuleAttributeName' type64='@'/>
<constant name='NSInlinePresentationIntentAttributeName' type64='@'/>
<constant name='NSIntHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSIntMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSIntMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSIntegerHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSIntegerMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSIntegerMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSInternalInconsistencyException' type64='@'/>
<constant name='NSInternationalCurrencyString' type64='@'/>
<constant name='NSInvalidArchiveOperationException' type64='@'/>
<constant name='NSInvalidArgumentException' type64='@'/>
<constant name='NSInvalidReceivePortException' type64='@'/>
<constant name='NSInvalidSendPortException' type64='@'/>
<constant name='NSInvalidUnarchiveOperationException' type64='@'/>
<constant name='NSInvocationOperationCancelledException' type64='@'/>
<constant name='NSInvocationOperationVoidResultException' type64='@'/>
<constant name='NSIsNilTransformerName' type64='@'/>
<constant name='NSIsNotNilTransformerName' type64='@'/>
<constant name='NSIslamicCalendar' type64='@'/>
<constant name='NSIslamicCivilCalendar' type64='@'/>
<constant name='NSItemProviderErrorDomain' type64='@'/>
<constant name='NSItemProviderPreferredImageSizeKey' type64='@'/>
<constant name='NSJapaneseCalendar' type64='@'/>
<constant name='NSKeepAllocationStatistics' type64='B'/>
<constant name='NSKeyValueChangeIndexesKey' type64='@'/>
<constant name='NSKeyValueChangeKindKey' type64='@'/>
<constant name='NSKeyValueChangeNewKey' type64='@'/>
<constant name='NSKeyValueChangeNotificationIsPriorKey' type64='@'/>
<constant name='NSKeyValueChangeOldKey' type64='@'/>
<constant name='NSKeyedArchiveRootObjectKey' type64='@'/>
<constant name='NSKeyedUnarchiveFromDataTransformerName' type64='@'/>
<constant name='NSLanguageIdentifierAttributeName' type64='@'/>
<constant name='NSLaterTimeDesignations' type64='@'/>
<constant name='NSLinguisticTagAdjective' type64='@'/>
<constant name='NSLinguisticTagAdverb' type64='@'/>
<constant name='NSLinguisticTagClassifier' type64='@'/>
<constant name='NSLinguisticTagCloseParenthesis' type64='@'/>
<constant name='NSLinguisticTagCloseQuote' type64='@'/>
<constant name='NSLinguisticTagConjunction' type64='@'/>
<constant name='NSLinguisticTagDash' type64='@'/>
<constant name='NSLinguisticTagDeterminer' type64='@'/>
<constant name='NSLinguisticTagIdiom' type64='@'/>
<constant name='NSLinguisticTagInterjection' type64='@'/>
<constant name='NSLinguisticTagNoun' type64='@'/>
<constant name='NSLinguisticTagNumber' type64='@'/>
<constant name='NSLinguisticTagOpenParenthesis' type64='@'/>
<constant name='NSLinguisticTagOpenQuote' type64='@'/>
<constant name='NSLinguisticTagOrganizationName' type64='@'/>
<constant name='NSLinguisticTagOther' type64='@'/>
<constant name='NSLinguisticTagOtherPunctuation' type64='@'/>
<constant name='NSLinguisticTagOtherWhitespace' type64='@'/>
<constant name='NSLinguisticTagOtherWord' type64='@'/>
<constant name='NSLinguisticTagParagraphBreak' type64='@'/>
<constant name='NSLinguisticTagParticle' type64='@'/>
<constant name='NSLinguisticTagPersonalName' type64='@'/>
<constant name='NSLinguisticTagPlaceName' type64='@'/>
<constant name='NSLinguisticTagPreposition' type64='@'/>
<constant name='NSLinguisticTagPronoun' type64='@'/>
<constant name='NSLinguisticTagPunctuation' type64='@'/>
<constant name='NSLinguisticTagSchemeLanguage' type64='@'/>
<constant name='NSLinguisticTagSchemeLemma' type64='@'/>
<constant name='NSLinguisticTagSchemeLexicalClass' type64='@'/>
<constant name='NSLinguisticTagSchemeNameType' type64='@'/>
<constant name='NSLinguisticTagSchemeNameTypeOrLexicalClass' type64='@'/>
<constant name='NSLinguisticTagSchemeScript' type64='@'/>
<constant name='NSLinguisticTagSchemeTokenType' type64='@'/>
<constant name='NSLinguisticTagSentenceTerminator' type64='@'/>
<constant name='NSLinguisticTagVerb' type64='@'/>
<constant name='NSLinguisticTagWhitespace' type64='@'/>
<constant name='NSLinguisticTagWord' type64='@'/>
<constant name='NSLinguisticTagWordJoiner' type64='@'/>
<constant name='NSLoadedClasses' type64='@'/>
<constant name='NSLocalNotificationCenterType' type64='@'/>
<constant name='NSLocaleAlternateQuotationBeginDelimiterKey' type64='@'/>
<constant name='NSLocaleAlternateQuotationEndDelimiterKey' type64='@'/>
<constant name='NSLocaleCalendar' type64='@'/>
<constant name='NSLocaleCollationIdentifier' type64='@'/>
<constant name='NSLocaleCollatorIdentifier' type64='@'/>
<constant name='NSLocaleCountryCode' type64='@'/>
<constant name='NSLocaleCurrencyCode' type64='@'/>
<constant name='NSLocaleCurrencySymbol' type64='@'/>
<constant name='NSLocaleDecimalSeparator' type64='@'/>
<constant name='NSLocaleExemplarCharacterSet' type64='@'/>
<constant name='NSLocaleGroupingSeparator' type64='@'/>
<constant name='NSLocaleIdentifier' type64='@'/>
<constant name='NSLocaleLanguageCode' type64='@'/>
<constant name='NSLocaleMeasurementSystem' type64='@'/>
<constant name='NSLocaleQuotationBeginDelimiterKey' type64='@'/>
<constant name='NSLocaleQuotationEndDelimiterKey' type64='@'/>
<constant name='NSLocaleScriptCode' type64='@'/>
<constant name='NSLocaleUsesMetricSystem' type64='@'/>
<constant name='NSLocaleVariantCode' type64='@'/>
<constant name='NSLocalizedDescriptionKey' type64='@'/>
<constant name='NSLocalizedFailureErrorKey' type64='@'/>
<constant name='NSLocalizedFailureReasonErrorKey' type64='@'/>
<constant name='NSLocalizedRecoveryOptionsErrorKey' type64='@'/>
<constant name='NSLocalizedRecoverySuggestionErrorKey' type64='@'/>
<constant name='NSMachErrorDomain' type64='@'/>
<constant name='NSMallocException' type64='@'/>
<constant name='NSMaximumKeyValueOperator' type64='@'/>
<constant name='NSMetadataItemAcquisitionMakeKey' type64='@'/>
<constant name='NSMetadataItemAcquisitionModelKey' type64='@'/>
<constant name='NSMetadataItemAlbumKey' type64='@'/>
<constant name='NSMetadataItemAltitudeKey' type64='@'/>
<constant name='NSMetadataItemApertureKey' type64='@'/>
<constant name='NSMetadataItemAppleLoopDescriptorsKey' type64='@'/>
<constant name='NSMetadataItemAppleLoopsKeyFilterTypeKey' type64='@'/>
<constant name='NSMetadataItemAppleLoopsLoopModeKey' type64='@'/>
<constant name='NSMetadataItemAppleLoopsRootKeyKey' type64='@'/>
<constant name='NSMetadataItemApplicationCategoriesKey' type64='@'/>
<constant name='NSMetadataItemAttributeChangeDateKey' type64='@'/>
<constant name='NSMetadataItemAudiencesKey' type64='@'/>
<constant name='NSMetadataItemAudioBitRateKey' type64='@'/>
<constant name='NSMetadataItemAudioChannelCountKey' type64='@'/>
<constant name='NSMetadataItemAudioEncodingApplicationKey' type64='@'/>
<constant name='NSMetadataItemAudioSampleRateKey' type64='@'/>
<constant name='NSMetadataItemAudioTrackNumberKey' type64='@'/>
<constant name='NSMetadataItemAuthorAddressesKey' type64='@'/>
<constant name='NSMetadataItemAuthorEmailAddressesKey' type64='@'/>
<constant name='NSMetadataItemAuthorsKey' type64='@'/>
<constant name='NSMetadataItemBitsPerSampleKey' type64='@'/>
<constant name='NSMetadataItemCFBundleIdentifierKey' type64='@'/>
<constant name='NSMetadataItemCameraOwnerKey' type64='@'/>
<constant name='NSMetadataItemCityKey' type64='@'/>
<constant name='NSMetadataItemCodecsKey' type64='@'/>
<constant name='NSMetadataItemColorSpaceKey' type64='@'/>
<constant name='NSMetadataItemCommentKey' type64='@'/>
<constant name='NSMetadataItemComposerKey' type64='@'/>
<constant name='NSMetadataItemContactKeywordsKey' type64='@'/>
<constant name='NSMetadataItemContentCreationDateKey' type64='@'/>
<constant name='NSMetadataItemContentModificationDateKey' type64='@'/>
<constant name='NSMetadataItemContentTypeKey' type64='@'/>
<constant name='NSMetadataItemContentTypeTreeKey' type64='@'/>
<constant name='NSMetadataItemContributorsKey' type64='@'/>
<constant name='NSMetadataItemCopyrightKey' type64='@'/>
<constant name='NSMetadataItemCountryKey' type64='@'/>
<constant name='NSMetadataItemCoverageKey' type64='@'/>
<constant name='NSMetadataItemCreatorKey' type64='@'/>
<constant name='NSMetadataItemDateAddedKey' type64='@'/>
<constant name='NSMetadataItemDeliveryTypeKey' type64='@'/>
<constant name='NSMetadataItemDescriptionKey' type64='@'/>
<constant name='NSMetadataItemDirectorKey' type64='@'/>
<constant name='NSMetadataItemDisplayNameKey' type64='@'/>
<constant name='NSMetadataItemDownloadedDateKey' type64='@'/>
<constant name='NSMetadataItemDueDateKey' type64='@'/>
<constant name='NSMetadataItemDurationSecondsKey' type64='@'/>
<constant name='NSMetadataItemEXIFGPSVersionKey' type64='@'/>
<constant name='NSMetadataItemEXIFVersionKey' type64='@'/>
<constant name='NSMetadataItemEditorsKey' type64='@'/>
<constant name='NSMetadataItemEmailAddressesKey' type64='@'/>
<constant name='NSMetadataItemEncodingApplicationsKey' type64='@'/>
<constant name='NSMetadataItemExecutableArchitecturesKey' type64='@'/>
<constant name='NSMetadataItemExecutablePlatformKey' type64='@'/>
<constant name='NSMetadataItemExposureModeKey' type64='@'/>
<constant name='NSMetadataItemExposureProgramKey' type64='@'/>
<constant name='NSMetadataItemExposureTimeSecondsKey' type64='@'/>
<constant name='NSMetadataItemExposureTimeStringKey' type64='@'/>
<constant name='NSMetadataItemFNumberKey' type64='@'/>
<constant name='NSMetadataItemFSContentChangeDateKey' type64='@'/>
<constant name='NSMetadataItemFSCreationDateKey' type64='@'/>
<constant name='NSMetadataItemFSNameKey' type64='@'/>
<constant name='NSMetadataItemFSSizeKey' type64='@'/>
<constant name='NSMetadataItemFinderCommentKey' type64='@'/>
<constant name='NSMetadataItemFlashOnOffKey' type64='@'/>
<constant name='NSMetadataItemFocalLength35mmKey' type64='@'/>
<constant name='NSMetadataItemFocalLengthKey' type64='@'/>
<constant name='NSMetadataItemFontsKey' type64='@'/>
<constant name='NSMetadataItemGPSAreaInformationKey' type64='@'/>
<constant name='NSMetadataItemGPSDOPKey' type64='@'/>
<constant name='NSMetadataItemGPSDateStampKey' type64='@'/>
<constant name='NSMetadataItemGPSDestBearingKey' type64='@'/>
<constant name='NSMetadataItemGPSDestDistanceKey' type64='@'/>
<constant name='NSMetadataItemGPSDestLatitudeKey' type64='@'/>
<constant name='NSMetadataItemGPSDestLongitudeKey' type64='@'/>
<constant name='NSMetadataItemGPSDifferentalKey' type64='@'/>
<constant name='NSMetadataItemGPSMapDatumKey' type64='@'/>
<constant name='NSMetadataItemGPSMeasureModeKey' type64='@'/>
<constant name='NSMetadataItemGPSProcessingMethodKey' type64='@'/>
<constant name='NSMetadataItemGPSStatusKey' type64='@'/>
<constant name='NSMetadataItemGPSTrackKey' type64='@'/>
<constant name='NSMetadataItemGenreKey' type64='@'/>
<constant name='NSMetadataItemHasAlphaChannelKey' type64='@'/>
<constant name='NSMetadataItemHeadlineKey' type64='@'/>
<constant name='NSMetadataItemISOSpeedKey' type64='@'/>
<constant name='NSMetadataItemIdentifierKey' type64='@'/>
<constant name='NSMetadataItemImageDirectionKey' type64='@'/>
<constant name='NSMetadataItemInformationKey' type64='@'/>
<constant name='NSMetadataItemInstantMessageAddressesKey' type64='@'/>
<constant name='NSMetadataItemInstructionsKey' type64='@'/>
<constant name='NSMetadataItemIsApplicationManagedKey' type64='@'/>
<constant name='NSMetadataItemIsGeneralMIDISequenceKey' type64='@'/>
<constant name='NSMetadataItemIsLikelyJunkKey' type64='@'/>
<constant name='NSMetadataItemIsUbiquitousKey' type64='@'/>
<constant name='NSMetadataItemKeySignatureKey' type64='@'/>
<constant name='NSMetadataItemKeywordsKey' type64='@'/>
<constant name='NSMetadataItemKindKey' type64='@'/>
<constant name='NSMetadataItemLanguagesKey' type64='@'/>
<constant name='NSMetadataItemLastUsedDateKey' type64='@'/>
<constant name='NSMetadataItemLatitudeKey' type64='@'/>
<constant name='NSMetadataItemLayerNamesKey' type64='@'/>
<constant name='NSMetadataItemLensModelKey' type64='@'/>
<constant name='NSMetadataItemLongitudeKey' type64='@'/>
<constant name='NSMetadataItemLyricistKey' type64='@'/>
<constant name='NSMetadataItemMaxApertureKey' type64='@'/>
<constant name='NSMetadataItemMediaTypesKey' type64='@'/>
<constant name='NSMetadataItemMeteringModeKey' type64='@'/>
<constant name='NSMetadataItemMusicalGenreKey' type64='@'/>
<constant name='NSMetadataItemMusicalInstrumentCategoryKey' type64='@'/>
<constant name='NSMetadataItemMusicalInstrumentNameKey' type64='@'/>
<constant name='NSMetadataItemNamedLocationKey' type64='@'/>
<constant name='NSMetadataItemNumberOfPagesKey' type64='@'/>
<constant name='NSMetadataItemOrganizationsKey' type64='@'/>
<constant name='NSMetadataItemOrientationKey' type64='@'/>
<constant name='NSMetadataItemOriginalFormatKey' type64='@'/>
<constant name='NSMetadataItemOriginalSourceKey' type64='@'/>
<constant name='NSMetadataItemPageHeightKey' type64='@'/>
<constant name='NSMetadataItemPageWidthKey' type64='@'/>
<constant name='NSMetadataItemParticipantsKey' type64='@'/>
<constant name='NSMetadataItemPathKey' type64='@'/>
<constant name='NSMetadataItemPerformersKey' type64='@'/>
<constant name='NSMetadataItemPhoneNumbersKey' type64='@'/>
<constant name='NSMetadataItemPixelCountKey' type64='@'/>
<constant name='NSMetadataItemPixelHeightKey' type64='@'/>
<constant name='NSMetadataItemPixelWidthKey' type64='@'/>
<constant name='NSMetadataItemProducerKey' type64='@'/>
<constant name='NSMetadataItemProfileNameKey' type64='@'/>
<constant name='NSMetadataItemProjectsKey' type64='@'/>
<constant name='NSMetadataItemPublishersKey' type64='@'/>
<constant name='NSMetadataItemRecipientAddressesKey' type64='@'/>
<constant name='NSMetadataItemRecipientEmailAddressesKey' type64='@'/>
<constant name='NSMetadataItemRecipientsKey' type64='@'/>
<constant name='NSMetadataItemRecordingDateKey' type64='@'/>
<constant name='NSMetadataItemRecordingYearKey' type64='@'/>
<constant name='NSMetadataItemRedEyeOnOffKey' type64='@'/>
<constant name='NSMetadataItemResolutionHeightDPIKey' type64='@'/>
<constant name='NSMetadataItemResolutionWidthDPIKey' type64='@'/>
<constant name='NSMetadataItemRightsKey' type64='@'/>
<constant name='NSMetadataItemSecurityMethodKey' type64='@'/>
<constant name='NSMetadataItemSpeedKey' type64='@'/>
<constant name='NSMetadataItemStarRatingKey' type64='@'/>
<constant name='NSMetadataItemStateOrProvinceKey' type64='@'/>
<constant name='NSMetadataItemStreamableKey' type64='@'/>
<constant name='NSMetadataItemSubjectKey' type64='@'/>
<constant name='NSMetadataItemTempoKey' type64='@'/>
<constant name='NSMetadataItemTextContentKey' type64='@'/>
<constant name='NSMetadataItemThemeKey' type64='@'/>
<constant name='NSMetadataItemTimeSignatureKey' type64='@'/>
<constant name='NSMetadataItemTimestampKey' type64='@'/>
<constant name='NSMetadataItemTitleKey' type64='@'/>
<constant name='NSMetadataItemTotalBitRateKey' type64='@'/>
<constant name='NSMetadataItemURLKey' type64='@'/>
<constant name='NSMetadataItemVersionKey' type64='@'/>
<constant name='NSMetadataItemVideoBitRateKey' type64='@'/>
<constant name='NSMetadataItemWhereFromsKey' type64='@'/>
<constant name='NSMetadataItemWhiteBalanceKey' type64='@'/>
<constant name='NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope' type64='@'/>
<constant name='NSMetadataQueryDidFinishGatheringNotification' type64='@'/>
<constant name='NSMetadataQueryDidStartGatheringNotification' type64='@'/>
<constant name='NSMetadataQueryDidUpdateNotification' type64='@'/>
<constant name='NSMetadataQueryGatheringProgressNotification' type64='@'/>
<constant name='NSMetadataQueryIndexedLocalComputerScope' type64='@'/>
<constant name='NSMetadataQueryIndexedNetworkScope' type64='@'/>
<constant name='NSMetadataQueryLocalComputerScope' type64='@'/>
<constant name='NSMetadataQueryNetworkScope' type64='@'/>
<constant name='NSMetadataQueryResultContentRelevanceAttribute' type64='@'/>
<constant name='NSMetadataQueryUbiquitousDataScope' type64='@'/>
<constant name='NSMetadataQueryUbiquitousDocumentsScope' type64='@'/>
<constant name='NSMetadataQueryUpdateAddedItemsKey' type64='@'/>
<constant name='NSMetadataQueryUpdateChangedItemsKey' type64='@'/>
<constant name='NSMetadataQueryUpdateRemovedItemsKey' type64='@'/>
<constant name='NSMetadataQueryUserHomeScope' type64='@'/>
<constant name='NSMetadataUbiquitousItemContainerDisplayNameKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadRequestedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadingErrorKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadingStatusCurrent' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadingStatusDownloaded' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadingStatusKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemDownloadingStatusNotDownloaded' type64='@'/>
<constant name='NSMetadataUbiquitousItemHasUnresolvedConflictsKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsDownloadedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsDownloadingKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsExternalDocumentKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsSharedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsUploadedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemIsUploadingKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemPercentDownloadedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemPercentUploadedKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemURLInLocalContainerKey' type64='@'/>
<constant name='NSMetadataUbiquitousItemUploadingErrorKey' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemCurrentUserRoleKey' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemOwnerNameComponentsKey' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemPermissionsReadOnly' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemPermissionsReadWrite' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemRoleOwner' type64='@'/>
<constant name='NSMetadataUbiquitousSharedItemRoleParticipant' type64='@'/>
<constant name='NSMinimumKeyValueOperator' type64='@'/>
<constant name='NSMonthNameArray' type64='@'/>
<constant name='NSMorphologyAttributeName' type64='@'/>
<constant name='NSMultipleUnderlyingErrorsKey' type64='@'/>
<constant name='NSNegateBooleanTransformerName' type64='@'/>
<constant name='NSNegativeCurrencyFormatString' type64='@'/>
<constant name='NSNetServicesErrorCode' type64='@'/>
<constant name='NSNetServicesErrorDomain' type64='@'/>
<constant name='NSNextDayDesignations' type64='@'/>
<constant name='NSNextNextDayDesignations' type64='@'/>
<constant name='NSNonOwnedPointerHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSNonOwnedPointerMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSNonOwnedPointerMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSNonOwnedPointerOrNullMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSNonRetainedObjectHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSNonRetainedObjectMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSNonRetainedObjectMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSOSStatusErrorDomain' type64='@'/>
<constant name='NSObjectHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSObjectInaccessibleException' type64='@'/>
<constant name='NSObjectMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSObjectMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSObjectNotAvailableException' type64='@'/>
<constant name='NSOldStyleException' type64='@'/>
<constant name='NSOperationNotSupportedForKeyException' type64='@'/>
<constant name='NSOwnedObjectIdentityHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSOwnedPointerHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSOwnedPointerMapKeyCallBacks' type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<constant name='NSOwnedPointerMapValueCallBacks' type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<constant name='NSPOSIXErrorDomain' type64='@'/>
<constant name='NSParseErrorException' type64='@'/>
<constant name='NSPersianCalendar' type64='@'/>
<constant name='NSPersonNameComponentDelimiter' type64='@'/>
<constant name='NSPersonNameComponentFamilyName' type64='@'/>
<constant name='NSPersonNameComponentGivenName' type64='@'/>
<constant name='NSPersonNameComponentKey' type64='@'/>
<constant name='NSPersonNameComponentMiddleName' type64='@'/>
<constant name='NSPersonNameComponentNickname' type64='@'/>
<constant name='NSPersonNameComponentPrefix' type64='@'/>
<constant name='NSPersonNameComponentSuffix' type64='@'/>
<constant name='NSPointerToStructHashCallBacks' type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<constant name='NSPortDidBecomeInvalidNotification' type64='@'/>
<constant name='NSPortReceiveException' type64='@'/>
<constant name='NSPortSendException' type64='@'/>
<constant name='NSPortTimeoutException' type64='@'/>
<constant name='NSPositiveCurrencyFormatString' type64='@'/>
<constant name='NSPresentationIntentAttributeName' type64='@'/>
<constant name='NSPriorDayDesignations' type64='@'/>
<constant name='NSProcessInfoPowerStateDidChangeNotification' type64='@'/>
<constant name='NSProcessInfoThermalStateDidChangeNotification' type64='@'/>
<constant name='NSProgressEstimatedTimeRemainingKey' type64='@'/>
<constant name='NSProgressFileAnimationImageKey' type64='@'/>
<constant name='NSProgressFileAnimationImageOriginalRectKey' type64='@'/>
<constant name='NSProgressFileCompletedCountKey' type64='@'/>
<constant name='NSProgressFileIconKey' type64='@'/>
<constant name='NSProgressFileOperationKindCopying' type64='@'/>
<constant name='NSProgressFileOperationKindDecompressingAfterDownloading' type64='@'/>
<constant name='NSProgressFileOperationKindDownloading' type64='@'/>
<constant name='NSProgressFileOperationKindDuplicating' type64='@'/>
<constant name='NSProgressFileOperationKindKey' type64='@'/>
<constant name='NSProgressFileOperationKindReceiving' type64='@'/>
<constant name='NSProgressFileOperationKindUploading' type64='@'/>
<constant name='NSProgressFileTotalCountKey' type64='@'/>
<constant name='NSProgressFileURLKey' type64='@'/>
<constant name='NSProgressKindFile' type64='@'/>
<constant name='NSProgressThroughputKey' type64='@'/>
<constant name='NSRangeException' type64='@'/>
<constant name='NSRecoveryAttempterErrorKey' type64='@'/>
<constant name='NSRegistrationDomain' type64='@'/>
<constant name='NSReplacementIndexAttributeName' type64='@'/>
<constant name='NSRepublicOfChinaCalendar' type64='@'/>
<constant name='NSRunLoopCommonModes' type64='@'/>
<constant name='NSSecureUnarchiveFromDataTransformerName' type64='@'/>
<constant name='NSShortDateFormatString' type64='@'/>
<constant name='NSShortMonthNameArray' type64='@'/>
<constant name='NSShortTimeDateFormatString' type64='@'/>
<constant name='NSShortWeekDayNameArray' type64='@'/>
<constant name='NSStreamDataWrittenToMemoryStreamKey' type64='@'/>
<constant name='NSStreamFileCurrentOffsetKey' type64='@'/>
<constant name='NSStreamNetworkServiceType' type64='@'/>
<constant name='NSStreamNetworkServiceTypeBackground' type64='@'/>
<constant name='NSStreamNetworkServiceTypeCallSignaling' type64='@'/>
<constant name='NSStreamNetworkServiceTypeVideo' type64='@'/>
<constant name='NSStreamNetworkServiceTypeVoIP' type64='@'/>
<constant name='NSStreamNetworkServiceTypeVoice' type64='@'/>
<constant name='NSStreamSOCKSErrorDomain' type64='@'/>
<constant name='NSStreamSOCKSProxyConfigurationKey' type64='@'/>
<constant name='NSStreamSOCKSProxyHostKey' type64='@'/>
<constant name='NSStreamSOCKSProxyPasswordKey' type64='@'/>
<constant name='NSStreamSOCKSProxyPortKey' type64='@'/>
<constant name='NSStreamSOCKSProxyUserKey' type64='@'/>
<constant name='NSStreamSOCKSProxyVersion4' type64='@'/>
<constant name='NSStreamSOCKSProxyVersion5' type64='@'/>
<constant name='NSStreamSOCKSProxyVersionKey' type64='@'/>
<constant name='NSStreamSocketSSLErrorDomain' type64='@'/>
<constant name='NSStreamSocketSecurityLevelKey' type64='@'/>
<constant name='NSStreamSocketSecurityLevelNegotiatedSSL' type64='@'/>
<constant name='NSStreamSocketSecurityLevelNone' type64='@'/>
<constant name='NSStreamSocketSecurityLevelSSLv2' type64='@'/>
<constant name='NSStreamSocketSecurityLevelSSLv3' type64='@'/>
<constant name='NSStreamSocketSecurityLevelTLSv1' type64='@'/>
<constant name='NSStringEncodingDetectionAllowLossyKey' type64='@'/>
<constant name='NSStringEncodingDetectionDisallowedEncodingsKey' type64='@'/>
<constant name='NSStringEncodingDetectionFromWindowsKey' type64='@'/>
<constant name='NSStringEncodingDetectionLikelyLanguageKey' type64='@'/>
<constant name='NSStringEncodingDetectionLossySubstitutionKey' type64='@'/>
<constant name='NSStringEncodingDetectionSuggestedEncodingsKey' type64='@'/>
<constant name='NSStringEncodingDetectionUseOnlySuggestedEncodingsKey' type64='@'/>
<constant name='NSStringEncodingErrorKey' type64='@'/>
<constant name='NSStringTransformFullwidthToHalfwidth' type64='@'/>
<constant name='NSStringTransformHiraganaToKatakana' type64='@'/>
<constant name='NSStringTransformLatinToArabic' type64='@'/>
<constant name='NSStringTransformLatinToCyrillic' type64='@'/>
<constant name='NSStringTransformLatinToGreek' type64='@'/>
<constant name='NSStringTransformLatinToHangul' type64='@'/>
<constant name='NSStringTransformLatinToHebrew' type64='@'/>
<constant name='NSStringTransformLatinToHiragana' type64='@'/>
<constant name='NSStringTransformLatinToKatakana' type64='@'/>
<constant name='NSStringTransformLatinToThai' type64='@'/>
<constant name='NSStringTransformMandarinToLatin' type64='@'/>
<constant name='NSStringTransformStripCombiningMarks' type64='@'/>
<constant name='NSStringTransformStripDiacritics' type64='@'/>
<constant name='NSStringTransformToLatin' type64='@'/>
<constant name='NSStringTransformToUnicodeName' type64='@'/>
<constant name='NSStringTransformToXMLHex' type64='@'/>
<constant name='NSSumKeyValueOperator' type64='@'/>
<constant name='NSSystemClockDidChangeNotification' type64='@'/>
<constant name='NSSystemTimeZoneDidChangeNotification' type64='@'/>
<constant name='NSTaskDidTerminateNotification' type64='@'/>
<constant name='NSTextCheckingAirlineKey' type64='@'/>
<constant name='NSTextCheckingCityKey' type64='@'/>
<constant name='NSTextCheckingCountryKey' type64='@'/>
<constant name='NSTextCheckingFlightKey' type64='@'/>
<constant name='NSTextCheckingJobTitleKey' type64='@'/>
<constant name='NSTextCheckingNameKey' type64='@'/>
<constant name='NSTextCheckingOrganizationKey' type64='@'/>
<constant name='NSTextCheckingPhoneKey' type64='@'/>
<constant name='NSTextCheckingStateKey' type64='@'/>
<constant name='NSTextCheckingStreetKey' type64='@'/>
<constant name='NSTextCheckingZIPKey' type64='@'/>
<constant name='NSThisDayDesignations' type64='@'/>
<constant name='NSThousandsSeparator' type64='@'/>
<constant name='NSThreadWillExitNotification' type64='@'/>
<constant name='NSThumbnail1024x1024SizeKey' type64='@'/>
<constant name='NSTimeDateFormatString' type64='@'/>
<constant name='NSTimeFormatString' type64='@'/>
<constant name='NSURLAddedToDirectoryDateKey' type64='@'/>
<constant name='NSURLApplicationIsScriptableKey' type64='@'/>
<constant name='NSURLAttributeModificationDateKey' type64='@'/>
<constant name='NSURLAuthenticationMethodClientCertificate' type64='@'/>
<constant name='NSURLAuthenticationMethodDefault' type64='@'/>
<constant name='NSURLAuthenticationMethodHTMLForm' type64='@'/>
<constant name='NSURLAuthenticationMethodHTTPBasic' type64='@'/>
<constant name='NSURLAuthenticationMethodHTTPDigest' type64='@'/>
<constant name='NSURLAuthenticationMethodNTLM' type64='@'/>
<constant name='NSURLAuthenticationMethodNegotiate' type64='@'/>
<constant name='NSURLAuthenticationMethodServerTrust' type64='@'/>
<constant name='NSURLCanonicalPathKey' type64='@'/>
<constant name='NSURLContentAccessDateKey' type64='@'/>
<constant name='NSURLContentModificationDateKey' type64='@'/>
<constant name='NSURLContentTypeKey' type64='@'/>
<constant name='NSURLCreationDateKey' type64='@'/>
<constant name='NSURLCredentialStorageChangedNotification' type64='@'/>
<constant name='NSURLCredentialStorageRemoveSynchronizableCredentials' type64='@'/>
<constant name='NSURLCustomIconKey' type64='@'/>
<constant name='NSURLDocumentIdentifierKey' type64='@'/>
<constant name='NSURLEffectiveIconKey' type64='@'/>
<constant name='NSURLErrorBackgroundTaskCancelledReasonKey' type64='@'/>
<constant name='NSURLErrorDomain' type64='@'/>
<constant name='NSURLErrorFailingURLErrorKey' type64='@'/>
<constant name='NSURLErrorFailingURLPeerTrustErrorKey' type64='@'/>
<constant name='NSURLErrorFailingURLStringErrorKey' type64='@'/>
<constant name='NSURLErrorKey' type64='@'/>
<constant name='NSURLErrorNetworkUnavailableReasonKey' type64='@'/>
<constant name='NSURLFileAllocatedSizeKey' type64='@'/>
<constant name='NSURLFileContentIdentifierKey' type64='@'/>
<constant name='NSURLFileProtectionComplete' type64='@'/>
<constant name='NSURLFileProtectionCompleteUnlessOpen' type64='@'/>
<constant name='NSURLFileProtectionCompleteUntilFirstUserAuthentication' type64='@'/>
<constant name='NSURLFileProtectionKey' type64='@'/>
<constant name='NSURLFileProtectionNone' type64='@'/>
<constant name='NSURLFileResourceIdentifierKey' type64='@'/>
<constant name='NSURLFileResourceTypeBlockSpecial' type64='@'/>
<constant name='NSURLFileResourceTypeCharacterSpecial' type64='@'/>
<constant name='NSURLFileResourceTypeDirectory' type64='@'/>
<constant name='NSURLFileResourceTypeKey' type64='@'/>
<constant name='NSURLFileResourceTypeNamedPipe' type64='@'/>
<constant name='NSURLFileResourceTypeRegular' type64='@'/>
<constant name='NSURLFileResourceTypeSocket' type64='@'/>
<constant name='NSURLFileResourceTypeSymbolicLink' type64='@'/>
<constant name='NSURLFileResourceTypeUnknown' type64='@'/>
<constant name='NSURLFileScheme' type64='@'/>
<constant name='NSURLFileSecurityKey' type64='@'/>
<constant name='NSURLFileSizeKey' type64='@'/>
<constant name='NSURLGenerationIdentifierKey' type64='@'/>
<constant name='NSURLHasHiddenExtensionKey' type64='@'/>
<constant name='NSURLIsAliasFileKey' type64='@'/>
<constant name='NSURLIsApplicationKey' type64='@'/>
<constant name='NSURLIsDirectoryKey' type64='@'/>
<constant name='NSURLIsExcludedFromBackupKey' type64='@'/>
<constant name='NSURLIsExecutableKey' type64='@'/>
<constant name='NSURLIsHiddenKey' type64='@'/>
<constant name='NSURLIsMountTriggerKey' type64='@'/>
<constant name='NSURLIsPackageKey' type64='@'/>
<constant name='NSURLIsPurgeableKey' type64='@'/>
<constant name='NSURLIsReadableKey' type64='@'/>
<constant name='NSURLIsRegularFileKey' type64='@'/>
<constant name='NSURLIsSparseKey' type64='@'/>
<constant name='NSURLIsSymbolicLinkKey' type64='@'/>
<constant name='NSURLIsSystemImmutableKey' type64='@'/>
<constant name='NSURLIsUbiquitousItemKey' type64='@'/>
<constant name='NSURLIsUserImmutableKey' type64='@'/>
<constant name='NSURLIsVolumeKey' type64='@'/>
<constant name='NSURLIsWritableKey' type64='@'/>
<constant name='NSURLKeysOfUnsetValuesKey' type64='@'/>
<constant name='NSURLLabelColorKey' type64='@'/>
<constant name='NSURLLabelNumberKey' type64='@'/>
<constant name='NSURLLinkCountKey' type64='@'/>
<constant name='NSURLLocalizedLabelKey' type64='@'/>
<constant name='NSURLLocalizedNameKey' type64='@'/>
<constant name='NSURLLocalizedTypeDescriptionKey' type64='@'/>
<constant name='NSURLMayHaveExtendedAttributesKey' type64='@'/>
<constant name='NSURLMayShareFileContentKey' type64='@'/>
<constant name='NSURLNameKey' type64='@'/>
<constant name='NSURLParentDirectoryURLKey' type64='@'/>
<constant name='NSURLPathKey' type64='@'/>
<constant name='NSURLPreferredIOBlockSizeKey' type64='@'/>
<constant name='NSURLProtectionSpaceFTP' type64='@'/>
<constant name='NSURLProtectionSpaceFTPProxy' type64='@'/>
<constant name='NSURLProtectionSpaceHTTP' type64='@'/>
<constant name='NSURLProtectionSpaceHTTPProxy' type64='@'/>
<constant name='NSURLProtectionSpaceHTTPS' type64='@'/>
<constant name='NSURLProtectionSpaceHTTPSProxy' type64='@'/>
<constant name='NSURLProtectionSpaceSOCKSProxy' type64='@'/>
<constant name='NSURLQuarantinePropertiesKey' type64='@'/>
<constant name='NSURLSessionDownloadTaskResumeData' type64='@'/>
<constant name='NSURLSessionTaskPriorityDefault' type64='f'/>
<constant name='NSURLSessionTaskPriorityHigh' type64='f'/>
<constant name='NSURLSessionTaskPriorityLow' type64='f'/>
<constant name='NSURLSessionTransferSizeUnknown' type64='q'/>
<constant name='NSURLTagNamesKey' type64='@'/>
<constant name='NSURLThumbnailDictionaryKey' type64='@'/>
<constant name='NSURLThumbnailKey' type64='@'/>
<constant name='NSURLTotalFileAllocatedSizeKey' type64='@'/>
<constant name='NSURLTotalFileSizeKey' type64='@'/>
<constant name='NSURLTypeIdentifierKey' type64='@'/>
<constant name='NSURLUbiquitousItemContainerDisplayNameKey' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadRequestedKey' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadingErrorKey' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadingStatusCurrent' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadingStatusDownloaded' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadingStatusKey' type64='@'/>
<constant name='NSURLUbiquitousItemDownloadingStatusNotDownloaded' type64='@'/>
<constant name='NSURLUbiquitousItemHasUnresolvedConflictsKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsDownloadedKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsDownloadingKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsExcludedFromSyncKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsSharedKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsUploadedKey' type64='@'/>
<constant name='NSURLUbiquitousItemIsUploadingKey' type64='@'/>
<constant name='NSURLUbiquitousItemPercentDownloadedKey' type64='@'/>
<constant name='NSURLUbiquitousItemPercentUploadedKey' type64='@'/>
<constant name='NSURLUbiquitousItemUploadingErrorKey' type64='@'/>
<constant name='NSURLUbiquitousSharedItemCurrentUserPermissionsKey' type64='@'/>
<constant name='NSURLUbiquitousSharedItemCurrentUserRoleKey' type64='@'/>
<constant name='NSURLUbiquitousSharedItemMostRecentEditorNameComponentsKey' type64='@'/>
<constant name='NSURLUbiquitousSharedItemOwnerNameComponentsKey' type64='@'/>
<constant name='NSURLUbiquitousSharedItemPermissionsReadOnly' type64='@'/>
<constant name='NSURLUbiquitousSharedItemPermissionsReadWrite' type64='@'/>
<constant name='NSURLUbiquitousSharedItemRoleOwner' type64='@'/>
<constant name='NSURLUbiquitousSharedItemRoleParticipant' type64='@'/>
<constant name='NSURLVolumeAvailableCapacityForImportantUsageKey' type64='@'/>
<constant name='NSURLVolumeAvailableCapacityForOpportunisticUsageKey' type64='@'/>
<constant name='NSURLVolumeAvailableCapacityKey' type64='@'/>
<constant name='NSURLVolumeCreationDateKey' type64='@'/>
<constant name='NSURLVolumeIdentifierKey' type64='@'/>
<constant name='NSURLVolumeIsAutomountedKey' type64='@'/>
<constant name='NSURLVolumeIsBrowsableKey' type64='@'/>
<constant name='NSURLVolumeIsEjectableKey' type64='@'/>
<constant name='NSURLVolumeIsEncryptedKey' type64='@'/>
<constant name='NSURLVolumeIsInternalKey' type64='@'/>
<constant name='NSURLVolumeIsJournalingKey' type64='@'/>
<constant name='NSURLVolumeIsLocalKey' type64='@'/>
<constant name='NSURLVolumeIsReadOnlyKey' type64='@'/>
<constant name='NSURLVolumeIsRemovableKey' type64='@'/>
<constant name='NSURLVolumeIsRootFileSystemKey' type64='@'/>
<constant name='NSURLVolumeLocalizedFormatDescriptionKey' type64='@'/>
<constant name='NSURLVolumeLocalizedNameKey' type64='@'/>
<constant name='NSURLVolumeMaximumFileSizeKey' type64='@'/>
<constant name='NSURLVolumeNameKey' type64='@'/>
<constant name='NSURLVolumeResourceCountKey' type64='@'/>
<constant name='NSURLVolumeSupportsAccessPermissionsKey' type64='@'/>
<constant name='NSURLVolumeSupportsAdvisoryFileLockingKey' type64='@'/>
<constant name='NSURLVolumeSupportsCasePreservedNamesKey' type64='@'/>
<constant name='NSURLVolumeSupportsCaseSensitiveNamesKey' type64='@'/>
<constant name='NSURLVolumeSupportsCompressionKey' type64='@'/>
<constant name='NSURLVolumeSupportsExclusiveRenamingKey' type64='@'/>
<constant name='NSURLVolumeSupportsExtendedSecurityKey' type64='@'/>
<constant name='NSURLVolumeSupportsFileCloningKey' type64='@'/>
<constant name='NSURLVolumeSupportsFileProtectionKey' type64='@'/>
<constant name='NSURLVolumeSupportsHardLinksKey' type64='@'/>
<constant name='NSURLVolumeSupportsImmutableFilesKey' type64='@'/>
<constant name='NSURLVolumeSupportsJournalingKey' type64='@'/>
<constant name='NSURLVolumeSupportsPersistentIDsKey' type64='@'/>
<constant name='NSURLVolumeSupportsRenamingKey' type64='@'/>
<constant name='NSURLVolumeSupportsRootDirectoryDatesKey' type64='@'/>
<constant name='NSURLVolumeSupportsSparseFilesKey' type64='@'/>
<constant name='NSURLVolumeSupportsSwapRenamingKey' type64='@'/>
<constant name='NSURLVolumeSupportsSymbolicLinksKey' type64='@'/>
<constant name='NSURLVolumeSupportsVolumeSizesKey' type64='@'/>
<constant name='NSURLVolumeSupportsZeroRunsKey' type64='@'/>
<constant name='NSURLVolumeTotalCapacityKey' type64='@'/>
<constant name='NSURLVolumeURLForRemountingKey' type64='@'/>
<constant name='NSURLVolumeURLKey' type64='@'/>
<constant name='NSURLVolumeUUIDStringKey' type64='@'/>
<constant name='NSUbiquitousKeyValueStoreChangeReasonKey' type64='@'/>
<constant name='NSUbiquitousKeyValueStoreChangedKeysKey' type64='@'/>
<constant name='NSUbiquitousKeyValueStoreDidChangeExternallyNotification' type64='@'/>
<constant name='NSUbiquitousUserDefaultsCompletedInitialSyncNotification' type64='@'/>
<constant name='NSUbiquitousUserDefaultsDidChangeAccountsNotification' type64='@'/>
<constant name='NSUbiquitousUserDefaultsNoCloudAccountNotification' type64='@'/>
<constant name='NSUbiquityIdentityDidChangeNotification' type64='@'/>
<constant name='NSUnarchiveFromDataTransformerName' type64='@'/>
<constant name='NSUndefinedKeyException' type64='@'/>
<constant name='NSUnderlyingErrorKey' type64='@'/>
<constant name='NSUndoManagerCheckpointNotification' type64='@'/>
<constant name='NSUndoManagerDidCloseUndoGroupNotification' type64='@'/>
<constant name='NSUndoManagerDidOpenUndoGroupNotification' type64='@'/>
<constant name='NSUndoManagerDidRedoChangeNotification' type64='@'/>
<constant name='NSUndoManagerDidUndoChangeNotification' type64='@'/>
<constant name='NSUndoManagerGroupIsDiscardableKey' type64='@'/>
<constant name='NSUndoManagerWillCloseUndoGroupNotification' type64='@'/>
<constant name='NSUndoManagerWillRedoChangeNotification' type64='@'/>
<constant name='NSUndoManagerWillUndoChangeNotification' type64='@'/>
<constant name='NSUnionOfArraysKeyValueOperator' type64='@'/>
<constant name='NSUnionOfObjectsKeyValueOperator' type64='@'/>
<constant name='NSUnionOfSetsKeyValueOperator' type64='@'/>
<constant name='NSUserActivityTypeBrowsingWeb' type64='@'/>
<constant name='NSUserDefaultsDidChangeNotification' type64='@'/>
<constant name='NSUserDefaultsSizeLimitExceededNotification' type64='@'/>
<constant name='NSUserNotificationDefaultSoundName' type64='@'/>
<constant name='NSWeekDayNameArray' type64='@'/>
<constant name='NSWillBecomeMultiThreadedNotification' type64='@'/>
<constant name='NSXMLParserErrorDomain' type64='@'/>
<constant name='NSYearMonthWeekDesignations' type64='@'/>
<constant name='NSZeroPoint' type64='{CGPoint=dd}'/>
<constant name='NSZeroRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<constant name='NSZeroSize' type64='{CGSize=dd}'/>
<constant name='NSZombieEnabled' type64='B'/>
<enum name='NSASCIIStringEncoding' value64='1'/>
<enum name='NSActivityAutomaticTerminationDisabled' value64='32768'/>
<enum name='NSActivityBackground' value64='255'/>
<enum name='NSActivityIdleDisplaySleepDisabled' value64='1099511627776'/>
<enum name='NSActivityIdleSystemSleepDisabled' value64='1048576'/>
<enum name='NSActivityLatencyCritical' value64='1095216660480'/>
<enum name='NSActivitySuddenTerminationDisabled' value64='16384'/>
<enum name='NSActivityUserInitiated' value64='16777215'/>
<enum name='NSActivityUserInitiatedAllowingIdleSystemSleep' value64='15728639'/>
<enum name='NSAdminApplicationDirectory' value64='4'/>
<enum name='NSAggregateExpressionType' value64='14'/>
<enum name='NSAlignAllEdgesInward' value64='15'/>
<enum name='NSAlignAllEdgesNearest' value64='983040'/>
<enum name='NSAlignAllEdgesOutward' value64='3840'/>
<enum name='NSAlignHeightInward' value64='32'/>
<enum name='NSAlignHeightNearest' value64='2097152'/>
<enum name='NSAlignHeightOutward' value64='8192'/>
<enum name='NSAlignMaxXInward' value64='4'/>
<enum name='NSAlignMaxXNearest' value64='262144'/>
<enum name='NSAlignMaxXOutward' value64='1024'/>
<enum name='NSAlignMaxYInward' value64='8'/>
<enum name='NSAlignMaxYNearest' value64='524288'/>
<enum name='NSAlignMaxYOutward' value64='2048'/>
<enum name='NSAlignMinXInward' value64='1'/>
<enum name='NSAlignMinXNearest' value64='65536'/>
<enum name='NSAlignMinXOutward' value64='256'/>
<enum name='NSAlignMinYInward' value64='2'/>
<enum name='NSAlignMinYNearest' value64='131072'/>
<enum name='NSAlignMinYOutward' value64='512'/>
<enum name='NSAlignRectFlipped' value64='9223372036854775808'/>
<enum name='NSAlignWidthInward' value64='16'/>
<enum name='NSAlignWidthNearest' value64='1048576'/>
<enum name='NSAlignWidthOutward' value64='4096'/>
<enum name='NSAllApplicationsDirectory' value64='100'/>
<enum name='NSAllDomainsMask' value64='65535'/>
<enum name='NSAllLibrariesDirectory' value64='101'/>
<enum name='NSAllPredicateModifier' value64='1'/>
<enum name='NSAnchoredSearch' value64='8'/>
<enum name='NSAndPredicateType' value64='1'/>
<enum name='NSAnyKeyExpressionType' value64='15'/>
<enum name='NSAnyPredicateModifier' value64='2'/>
<enum name='NSAppleEventSendAlwaysInteract' value64='48'/>
<enum name='NSAppleEventSendCanInteract' value64='32'/>
<enum name='NSAppleEventSendCanSwitchLayer' value64='64'/>
<enum name='NSAppleEventSendDefaultOptions' value64='35'/>
<enum name='NSAppleEventSendDontAnnotate' value64='65536'/>
<enum name='NSAppleEventSendDontExecute' value64='8192'/>
<enum name='NSAppleEventSendDontRecord' value64='4096'/>
<enum name='NSAppleEventSendNeverInteract' value64='16'/>
<enum name='NSAppleEventSendNoReply' value64='1'/>
<enum name='NSAppleEventSendQueueReply' value64='2'/>
<enum name='NSAppleEventSendWaitForReply' value64='3'/>
<enum name='NSApplicationDirectory' value64='1'/>
<enum name='NSApplicationScriptsDirectory' value64='23'/>
<enum name='NSApplicationSupportDirectory' value64='14'/>
<enum name='NSArgumentEvaluationScriptError' value64='3'/>
<enum name='NSArgumentsWrongScriptError' value64='6'/>
<enum name='NSAtomicWrite' value64='1'/>
<enum name='NSAttributedStringEnumerationLongestEffectiveRangeNotRequired' value64='1048576'/>
<enum name='NSAttributedStringEnumerationReverse' value64='2'/>
<enum name='NSAttributedStringFormattingApplyReplacementIndexAttribute' value64='2'/>
<enum name='NSAttributedStringFormattingInsertArgumentAttributesWithoutMerging' value64='1'/>
<enum name='NSAttributedStringMarkdownInterpretedSyntaxFull' value64='0'/>
<enum name='NSAttributedStringMarkdownInterpretedSyntaxInlineOnly' value64='1'/>
<enum name='NSAttributedStringMarkdownInterpretedSyntaxInlineOnlyPreservingWhitespace' value64='2'/>
<enum name='NSAttributedStringMarkdownParsingFailureReturnError' value64='0'/>
<enum name='NSAttributedStringMarkdownParsingFailureReturnPartiallyParsedIfPossible' value64='1'/>
<enum name='NSAutosavedInformationDirectory' value64='11'/>
<enum name='NSBackgroundActivityResultDeferred' value64='2'/>
<enum name='NSBackgroundActivityResultFinished' value64='1'/>
<enum name='NSBackwardsSearch' value64='4'/>
<enum name='NSBeginsWithComparison' value64='5'/>
<enum name='NSBeginsWithPredicateOperatorType' value64='8'/>
<enum name='NSBetweenPredicateOperatorType' value64='100'/>
<enum name='NSBinarySearchingFirstEqual' value64='256'/>
<enum name='NSBinarySearchingInsertionIndex' value64='1024'/>
<enum name='NSBinarySearchingLastEqual' value64='512'/>
<enum name='NSBlockExpressionType' value64='19'/>
<enum name='NSBundleErrorMaximum' value64='5119'/>
<enum name='NSBundleErrorMinimum' value64='4992'/>
<enum name='NSBundleExecutableArchitectureARM64' value64='16777228'/>
<enum name='NSBundleExecutableArchitectureI386' value64='7'/>
<enum name='NSBundleExecutableArchitecturePPC' value64='18'/>
<enum name='NSBundleExecutableArchitecturePPC64' value64='16777234'/>
<enum name='NSBundleExecutableArchitectureX86_64' value64='16777223'/>
<enum name='NSBundleOnDemandResourceExceededMaximumSizeError' value64='4993'/>
<enum name='NSBundleOnDemandResourceInvalidTagError' value64='4994'/>
<enum name='NSBundleOnDemandResourceOutOfSpaceError' value64='4992'/>
<enum name='NSByteCountFormatterCountStyleBinary' value64='3'/>
<enum name='NSByteCountFormatterCountStyleDecimal' value64='2'/>
<enum name='NSByteCountFormatterCountStyleFile' value64='0'/>
<enum name='NSByteCountFormatterCountStyleMemory' value64='1'/>
<enum name='NSByteCountFormatterUseAll' value64='65535'/>
<enum name='NSByteCountFormatterUseBytes' value64='1'/>
<enum name='NSByteCountFormatterUseDefault' value64='0'/>
<enum name='NSByteCountFormatterUseEB' value64='64'/>
<enum name='NSByteCountFormatterUseGB' value64='8'/>
<enum name='NSByteCountFormatterUseKB' value64='2'/>
<enum name='NSByteCountFormatterUseMB' value64='4'/>
<enum name='NSByteCountFormatterUsePB' value64='32'/>
<enum name='NSByteCountFormatterUseTB' value64='16'/>
<enum name='NSByteCountFormatterUseYBOrHigher' value64='65280'/>
<enum name='NSByteCountFormatterUseZB' value64='128'/>
<enum name='NSCachesDirectory' value64='13'/>
<enum name='NSCalculationDivideByZero' value64='4'/>
<enum name='NSCalculationLossOfPrecision' value64='1'/>
<enum name='NSCalculationNoError' value64='0'/>
<enum name='NSCalculationOverflow' value64='3'/>
<enum name='NSCalculationUnderflow' value64='2'/>
<enum name='NSCalendarCalendarUnit' value64='1048576'/>
<enum name='NSCalendarMatchFirst' value64='4096'/>
<enum name='NSCalendarMatchLast' value64='8192'/>
<enum name='NSCalendarMatchNextTime' value64='1024'/>
<enum name='NSCalendarMatchNextTimePreservingSmallerUnits' value64='512'/>
<enum name='NSCalendarMatchPreviousTimePreservingSmallerUnits' value64='256'/>
<enum name='NSCalendarMatchStrictly' value64='2'/>
<enum name='NSCalendarSearchBackwards' value64='4'/>
<enum name='NSCalendarUnitCalendar' value64='1048576'/>
<enum name='NSCalendarUnitDay' value64='16'/>
<enum name='NSCalendarUnitEra' value64='2'/>
<enum name='NSCalendarUnitHour' value64='32'/>
<enum name='NSCalendarUnitMinute' value64='64'/>
<enum name='NSCalendarUnitMonth' value64='8'/>
<enum name='NSCalendarUnitNanosecond' value64='32768'/>
<enum name='NSCalendarUnitQuarter' value64='2048'/>
<enum name='NSCalendarUnitSecond' value64='128'/>
<enum name='NSCalendarUnitTimeZone' value64='2097152'/>
<enum name='NSCalendarUnitWeekOfMonth' value64='4096'/>
<enum name='NSCalendarUnitWeekOfYear' value64='8192'/>
<enum name='NSCalendarUnitWeekday' value64='512'/>
<enum name='NSCalendarUnitWeekdayOrdinal' value64='1024'/>
<enum name='NSCalendarUnitYear' value64='4'/>
<enum name='NSCalendarUnitYearForWeekOfYear' value64='16384'/>
<enum name='NSCalendarWrapComponents' value64='1'/>
<enum name='NSCannotCreateScriptCommandError' value64='10'/>
<enum name='NSCaseInsensitivePredicateOption' value64='1'/>
<enum name='NSCaseInsensitiveSearch' value64='1'/>
<enum name='NSCloudSharingConflictError' value64='5123'/>
<enum name='NSCloudSharingErrorMaximum' value64='5375'/>
<enum name='NSCloudSharingErrorMinimum' value64='5120'/>
<enum name='NSCloudSharingNetworkFailureError' value64='5120'/>
<enum name='NSCloudSharingNoPermissionError' value64='5124'/>
<enum name='NSCloudSharingOtherError' value64='5375'/>
<enum name='NSCloudSharingQuotaExceededError' value64='5121'/>
<enum name='NSCloudSharingTooManyParticipantsError' value64='5122'/>
<enum name='NSCoderErrorMaximum' value64='4991'/>
<enum name='NSCoderErrorMinimum' value64='4864'/>
<enum name='NSCoderInvalidValueError' value64='4866'/>
<enum name='NSCoderReadCorruptError' value64='4864'/>
<enum name='NSCoderValueNotFoundError' value64='4865'/>
<enum name='NSCollectionChangeInsert' value64='0'/>
<enum name='NSCollectionChangeRemove' value64='1'/>
<enum name='NSCollectorDisabledOption' value64='2'/>
<enum name='NSCompressionErrorMaximum' value64='5503'/>
<enum name='NSCompressionErrorMinimum' value64='5376'/>
<enum name='NSCompressionFailedError' value64='5376'/>
<enum name='NSConditionalExpressionType' value64='20'/>
<enum name='NSConstantValueExpressionType' value64='0'/>
<enum name='NSContainerSpecifierError' value64='2'/>
<enum name='NSContainsComparison' value64='7'/>
<enum name='NSContainsPredicateOperatorType' value64='99'/>
<enum name='NSCoreServiceDirectory' value64='10'/>
<enum name='NSCustomSelectorPredicateOperatorType' value64='11'/>
<enum name='NSDataBase64DecodingIgnoreUnknownCharacters' value64='1'/>
<enum name='NSDataBase64Encoding64CharacterLineLength' value64='1'/>
<enum name='NSDataBase64Encoding76CharacterLineLength' value64='2'/>
<enum name='NSDataBase64EncodingEndLineWithCarriageReturn' value64='16'/>
<enum name='NSDataBase64EncodingEndLineWithLineFeed' value64='32'/>
<enum name='NSDataCompressionAlgorithmLZ4' value64='1'/>
<enum name='NSDataCompressionAlgorithmLZFSE' value64='0'/>
<enum name='NSDataCompressionAlgorithmLZMA' value64='2'/>
<enum name='NSDataCompressionAlgorithmZlib' value64='3'/>
<enum name='NSDataReadingMapped' value64='1'/>
<enum name='NSDataReadingMappedAlways' value64='8'/>
<enum name='NSDataReadingMappedIfSafe' value64='1'/>
<enum name='NSDataReadingUncached' value64='2'/>
<enum name='NSDataSearchAnchored' value64='2'/>
<enum name='NSDataSearchBackwards' value64='1'/>
<enum name='NSDataWritingAtomic' value64='1'/>
<enum name='NSDataWritingFileProtectionComplete' value64='536870912'/>
<enum name='NSDataWritingFileProtectionCompleteUnlessOpen' value64='805306368'/>
<enum name='NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication' value64='1073741824'/>
<enum name='NSDataWritingFileProtectionMask' value64='4026531840'/>
<enum name='NSDataWritingFileProtectionNone' value64='268435456'/>
<enum name='NSDataWritingWithoutOverwriting' value64='2'/>
<enum name='NSDateComponentUndefined' value64='9223372036854775807'/>
<enum name='NSDateComponentsFormatterUnitsStyleAbbreviated' value64='1'/>
<enum name='NSDateComponentsFormatterUnitsStyleBrief' value64='5'/>
<enum name='NSDateComponentsFormatterUnitsStyleFull' value64='3'/>
<enum name='NSDateComponentsFormatterUnitsStylePositional' value64='0'/>
<enum name='NSDateComponentsFormatterUnitsStyleShort' value64='2'/>
<enum name='NSDateComponentsFormatterUnitsStyleSpellOut' value64='4'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorDefault' value64='1'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorDropAll' value64='14'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorDropLeading' value64='2'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle' value64='4'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing' value64='8'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorNone' value64='0'/>
<enum name='NSDateComponentsFormatterZeroFormattingBehaviorPad' value64='65536'/>
<enum name='NSDateFormatterBehavior10_0' value64='1000'/>
<enum name='NSDateFormatterBehavior10_4' value64='1040'/>
<enum name='NSDateFormatterBehaviorDefault' value64='0'/>
<enum name='NSDateFormatterFullStyle' value64='4'/>
<enum name='NSDateFormatterLongStyle' value64='3'/>
<enum name='NSDateFormatterMediumStyle' value64='2'/>
<enum name='NSDateFormatterNoStyle' value64='0'/>
<enum name='NSDateFormatterShortStyle' value64='1'/>
<enum name='NSDateIntervalFormatterFullStyle' value64='4'/>
<enum name='NSDateIntervalFormatterLongStyle' value64='3'/>
<enum name='NSDateIntervalFormatterMediumStyle' value64='2'/>
<enum name='NSDateIntervalFormatterNoStyle' value64='0'/>
<enum name='NSDateIntervalFormatterShortStyle' value64='1'/>
<enum name='NSDayCalendarUnit' value64='16'/>
<enum name='NSDecimalMaxSize' value64='8'/>
<enum name='NSDecimalNoScale' value64='32767'/>
<enum name='NSDecodingFailurePolicyRaiseException' value64='0'/>
<enum name='NSDecodingFailurePolicySetErrorAndReturn' value64='1'/>
<enum name='NSDecompressionFailedError' value64='5377'/>
<enum name='NSDemoApplicationDirectory' value64='2'/>
<enum name='NSDesktopDirectory' value64='12'/>
<enum name='NSDeveloperApplicationDirectory' value64='3'/>
<enum name='NSDeveloperDirectory' value64='6'/>
<enum name='NSDiacriticInsensitivePredicateOption' value64='2'/>
<enum name='NSDiacriticInsensitiveSearch' value64='128'/>
<enum name='NSDirectPredicateModifier' value64='0'/>
<enum name='NSDirectoryEnumerationIncludesDirectoriesPostOrder' value64='8'/>
<enum name='NSDirectoryEnumerationProducesRelativePathURLs' value64='16'/>
<enum name='NSDirectoryEnumerationSkipsHiddenFiles' value64='4'/>
<enum name='NSDirectoryEnumerationSkipsPackageDescendants' value64='2'/>
<enum name='NSDirectoryEnumerationSkipsSubdirectoryDescendants' value64='1'/>
<enum name='NSDistributedNotificationDeliverImmediately' value64='1'/>
<enum name='NSDistributedNotificationPostToAllSessions' value64='2'/>
<enum name='NSDocumentDirectory' value64='9'/>
<enum name='NSDocumentationDirectory' value64='8'/>
<enum name='NSDownloadsDirectory' value64='15'/>
<enum name='NSEDGEINSETS_DEFINED' value64='1'/>
<enum name='NSEndsWithComparison' value64='6'/>
<enum name='NSEndsWithPredicateOperatorType' value64='9'/>
<enum name='NSEnergyFormatterUnitCalorie' value64='1793'/>
<enum name='NSEnergyFormatterUnitJoule' value64='11'/>
<enum name='NSEnergyFormatterUnitKilocalorie' value64='1794'/>
<enum name='NSEnergyFormatterUnitKilojoule' value64='14'/>
<enum name='NSEnumerationConcurrent' value64='1'/>
<enum name='NSEnumerationReverse' value64='2'/>
<enum name='NSEqualToComparison' value64='0'/>
<enum name='NSEqualToPredicateOperatorType' value64='4'/>
<enum name='NSEraCalendarUnit' value64='2'/>
<enum name='NSEvaluatedObjectExpressionType' value64='1'/>
<enum name='NSEverySubelement' value64='1'/>
<enum name='NSExecutableArchitectureMismatchError' value64='3585'/>
<enum name='NSExecutableErrorMaximum' value64='3839'/>
<enum name='NSExecutableErrorMinimum' value64='3584'/>
<enum name='NSExecutableLinkError' value64='3588'/>
<enum name='NSExecutableLoadError' value64='3587'/>
<enum name='NSExecutableNotLoadableError' value64='3584'/>
<enum name='NSExecutableRuntimeMismatchError' value64='3586'/>
<enum name='NSFeatureUnsupportedError' value64='3328'/>
<enum name='NSFileCoordinatorReadingForUploading' value64='8'/>
<enum name='NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly' value64='4'/>
<enum name='NSFileCoordinatorReadingResolvesSymbolicLink' value64='2'/>
<enum name='NSFileCoordinatorReadingWithoutChanges' value64='1'/>
<enum name='NSFileCoordinatorWritingContentIndependentMetadataOnly' value64='16'/>
<enum name='NSFileCoordinatorWritingForDeleting' value64='1'/>
<enum name='NSFileCoordinatorWritingForMerging' value64='4'/>
<enum name='NSFileCoordinatorWritingForMoving' value64='2'/>
<enum name='NSFileCoordinatorWritingForReplacing' value64='8'/>
<enum name='NSFileErrorMaximum' value64='1023'/>
<enum name='NSFileErrorMinimum' value64='0'/>
<enum name='NSFileLockingError' value64='255'/>
<enum name='NSFileManagerItemReplacementUsingNewMetadataOnly' value64='1'/>
<enum name='NSFileManagerItemReplacementWithoutDeletingBackupItem' value64='2'/>
<enum name='NSFileManagerUnmountAllPartitionsAndEjectDisk' value64='1'/>
<enum name='NSFileManagerUnmountBusyError' value64='769'/>
<enum name='NSFileManagerUnmountUnknownError' value64='768'/>
<enum name='NSFileManagerUnmountWithoutUI' value64='2'/>
<enum name='NSFileNoSuchFileError' value64='4'/>
<enum name='NSFileReadCorruptFileError' value64='259'/>
<enum name='NSFileReadInapplicableStringEncodingError' value64='261'/>
<enum name='NSFileReadInvalidFileNameError' value64='258'/>
<enum name='NSFileReadNoPermissionError' value64='257'/>
<enum name='NSFileReadNoSuchFileError' value64='260'/>
<enum name='NSFileReadTooLargeError' value64='263'/>
<enum name='NSFileReadUnknownError' value64='256'/>
<enum name='NSFileReadUnknownStringEncodingError' value64='264'/>
<enum name='NSFileReadUnsupportedSchemeError' value64='262'/>
<enum name='NSFileVersionAddingByMoving' value64='1'/>
<enum name='NSFileVersionReplacingByMoving' value64='1'/>
<enum name='NSFileWrapperReadingImmediate' value64='1'/>
<enum name='NSFileWrapperReadingWithoutMapping' value64='2'/>
<enum name='NSFileWrapperWritingAtomic' value64='1'/>
<enum name='NSFileWrapperWritingWithNameUpdating' value64='2'/>
<enum name='NSFileWriteFileExistsError' value64='516'/>
<enum name='NSFileWriteInapplicableStringEncodingError' value64='517'/>
<enum name='NSFileWriteInvalidFileNameError' value64='514'/>
<enum name='NSFileWriteNoPermissionError' value64='513'/>
<enum name='NSFileWriteOutOfSpaceError' value64='640'/>
<enum name='NSFileWriteUnknownError' value64='512'/>
<enum name='NSFileWriteUnsupportedSchemeError' value64='518'/>
<enum name='NSFileWriteVolumeReadOnlyError' value64='642'/>
<enum name='NSForcedOrderingSearch' value64='512'/>
<enum name='NSFormattingContextBeginningOfSentence' value64='4'/>
<enum name='NSFormattingContextDynamic' value64='1'/>
<enum name='NSFormattingContextListItem' value64='3'/>
<enum name='NSFormattingContextMiddleOfSentence' value64='5'/>
<enum name='NSFormattingContextStandalone' value64='2'/>
<enum name='NSFormattingContextUnknown' value64='0'/>
<enum name='NSFormattingError' value64='2048'/>
<enum name='NSFormattingErrorMaximum' value64='2559'/>
<enum name='NSFormattingErrorMinimum' value64='2048'/>
<enum name='NSFormattingUnitStyleLong' value64='3'/>
<enum name='NSFormattingUnitStyleMedium' value64='2'/>
<enum name='NSFormattingUnitStyleShort' value64='1'/>
<enum name='NSFoundationVersionNumber10_0' value64='397.400000'/>
<enum name='NSFoundationVersionNumber10_1' value64='425.000000'/>
<enum name='NSFoundationVersionNumber10_10' value64='1151.160000'/>
<enum name='NSFoundationVersionNumber10_10_1' value64='1151.160000'/>
<enum name='NSFoundationVersionNumber10_10_2' value64='1152.140000'/>
<enum name='NSFoundationVersionNumber10_10_3' value64='1153.200000'/>
<enum name='NSFoundationVersionNumber10_10_4' value64='1153.200000'/>
<enum name='NSFoundationVersionNumber10_10_5' value64='1154'/>
<enum name='NSFoundationVersionNumber10_10_Max' value64='1199'/>
<enum name='NSFoundationVersionNumber10_11' value64='1252'/>
<enum name='NSFoundationVersionNumber10_11_1' value64='1255.100000'/>
<enum name='NSFoundationVersionNumber10_11_2' value64='1256.100000'/>
<enum name='NSFoundationVersionNumber10_11_3' value64='1256.100000'/>
<enum name='NSFoundationVersionNumber10_11_4' value64='1258'/>
<enum name='NSFoundationVersionNumber10_11_Max' value64='1299'/>
<enum name='NSFoundationVersionNumber10_1_1' value64='425.000000'/>
<enum name='NSFoundationVersionNumber10_1_2' value64='425.000000'/>
<enum name='NSFoundationVersionNumber10_1_3' value64='425.000000'/>
<enum name='NSFoundationVersionNumber10_1_4' value64='425.000000'/>
<enum name='NSFoundationVersionNumber10_2' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_1' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_2' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_3' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_4' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_5' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_6' value64='462.000000'/>
<enum name='NSFoundationVersionNumber10_2_7' value64='462.700000'/>
<enum name='NSFoundationVersionNumber10_2_8' value64='462.700000'/>
<enum name='NSFoundationVersionNumber10_3' value64='500.000000'/>
<enum name='NSFoundationVersionNumber10_3_1' value64='500.000000'/>
<enum name='NSFoundationVersionNumber10_3_2' value64='500.300000'/>
<enum name='NSFoundationVersionNumber10_3_3' value64='500.540000'/>
<enum name='NSFoundationVersionNumber10_3_4' value64='500.560000'/>
<enum name='NSFoundationVersionNumber10_3_5' value64='500.560000'/>
<enum name='NSFoundationVersionNumber10_3_6' value64='500.560000'/>
<enum name='NSFoundationVersionNumber10_3_7' value64='500.560000'/>
<enum name='NSFoundationVersionNumber10_3_8' value64='500.560000'/>
<enum name='NSFoundationVersionNumber10_3_9' value64='500.580000'/>
<enum name='NSFoundationVersionNumber10_4' value64='567.000000'/>
<enum name='NSFoundationVersionNumber10_4_1' value64='567.000000'/>
<enum name='NSFoundationVersionNumber10_4_10' value64='567.290000'/>
<enum name='NSFoundationVersionNumber10_4_11' value64='567.360000'/>
<enum name='NSFoundationVersionNumber10_4_2' value64='567.120000'/>
<enum name='NSFoundationVersionNumber10_4_3' value64='567.210000'/>
<enum name='NSFoundationVersionNumber10_4_4_Intel' value64='567.230000'/>
<enum name='NSFoundationVersionNumber10_4_4_PowerPC' value64='567.210000'/>
<enum name='NSFoundationVersionNumber10_4_5' value64='567.250000'/>
<enum name='NSFoundationVersionNumber10_4_6' value64='567.260000'/>
<enum name='NSFoundationVersionNumber10_4_7' value64='567.270000'/>
<enum name='NSFoundationVersionNumber10_4_8' value64='567.280000'/>
<enum name='NSFoundationVersionNumber10_4_9' value64='567.290000'/>
<enum name='NSFoundationVersionNumber10_5' value64='677.000000'/>
<enum name='NSFoundationVersionNumber10_5_1' value64='677.100000'/>
<enum name='NSFoundationVersionNumber10_5_2' value64='677.150000'/>
<enum name='NSFoundationVersionNumber10_5_3' value64='677.190000'/>
<enum name='NSFoundationVersionNumber10_5_4' value64='677.190000'/>
<enum name='NSFoundationVersionNumber10_5_5' value64='677.210000'/>
<enum name='NSFoundationVersionNumber10_5_6' value64='677.220000'/>
<enum name='NSFoundationVersionNumber10_5_7' value64='677.240000'/>
<enum name='NSFoundationVersionNumber10_5_8' value64='677.260000'/>
<enum name='NSFoundationVersionNumber10_6' value64='751.000000'/>
<enum name='NSFoundationVersionNumber10_6_1' value64='751.000000'/>
<enum name='NSFoundationVersionNumber10_6_2' value64='751.140000'/>
<enum name='NSFoundationVersionNumber10_6_3' value64='751.210000'/>
<enum name='NSFoundationVersionNumber10_6_4' value64='751.290000'/>
<enum name='NSFoundationVersionNumber10_6_5' value64='751.420000'/>
<enum name='NSFoundationVersionNumber10_6_6' value64='751.530000'/>
<enum name='NSFoundationVersionNumber10_6_7' value64='751.530000'/>
<enum name='NSFoundationVersionNumber10_6_8' value64='751.620000'/>
<enum name='NSFoundationVersionNumber10_7' value64='833.100000'/>
<enum name='NSFoundationVersionNumber10_7_1' value64='833.100000'/>
<enum name='NSFoundationVersionNumber10_7_2' value64='833.200000'/>
<enum name='NSFoundationVersionNumber10_7_3' value64='833.240000'/>
<enum name='NSFoundationVersionNumber10_7_4' value64='833.250000'/>
<enum name='NSFoundationVersionNumber10_8' value64='945.000000'/>
<enum name='NSFoundationVersionNumber10_8_1' value64='945.000000'/>
<enum name='NSFoundationVersionNumber10_8_2' value64='945.110000'/>
<enum name='NSFoundationVersionNumber10_8_3' value64='945.160000'/>
<enum name='NSFoundationVersionNumber10_8_4' value64='945.180000'/>
<enum name='NSFoundationVersionNumber10_9' value64='1056'/>
<enum name='NSFoundationVersionNumber10_9_1' value64='1056'/>
<enum name='NSFoundationVersionNumber10_9_2' value64='1056.130000'/>
<enum name='NSFoundationVersionWithFileManagerResourceForkSupport' value64='412'/>
<enum name='NSFunctionExpressionType' value64='4'/>
<enum name='NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES' value64='1'/>
<enum name='NSGrammaticalGenderFeminine' value64='1'/>
<enum name='NSGrammaticalGenderMasculine' value64='2'/>
<enum name='NSGrammaticalGenderNeuter' value64='3'/>
<enum name='NSGrammaticalGenderNotSet' value64='0'/>
<enum name='NSGrammaticalNumberNotSet' value64='0'/>
<enum name='NSGrammaticalNumberPlural' value64='3'/>
<enum name='NSGrammaticalNumberPluralFew' value64='5'/>
<enum name='NSGrammaticalNumberPluralMany' value64='6'/>
<enum name='NSGrammaticalNumberPluralTwo' value64='4'/>
<enum name='NSGrammaticalNumberSingular' value64='1'/>
<enum name='NSGrammaticalNumberZero' value64='2'/>
<enum name='NSGrammaticalPartOfSpeechAbbreviation' value64='14'/>
<enum name='NSGrammaticalPartOfSpeechAdjective' value64='6'/>
<enum name='NSGrammaticalPartOfSpeechAdposition' value64='7'/>
<enum name='NSGrammaticalPartOfSpeechAdverb' value64='4'/>
<enum name='NSGrammaticalPartOfSpeechConjunction' value64='10'/>
<enum name='NSGrammaticalPartOfSpeechDeterminer' value64='1'/>
<enum name='NSGrammaticalPartOfSpeechInterjection' value64='12'/>
<enum name='NSGrammaticalPartOfSpeechLetter' value64='3'/>
<enum name='NSGrammaticalPartOfSpeechNotSet' value64='0'/>
<enum name='NSGrammaticalPartOfSpeechNoun' value64='9'/>
<enum name='NSGrammaticalPartOfSpeechNumeral' value64='11'/>
<enum name='NSGrammaticalPartOfSpeechParticle' value64='5'/>
<enum name='NSGrammaticalPartOfSpeechPreposition' value64='13'/>
<enum name='NSGrammaticalPartOfSpeechPronoun' value64='2'/>
<enum name='NSGrammaticalPartOfSpeechVerb' value64='8'/>
<enum name='NSGreaterThanComparison' value64='4'/>
<enum name='NSGreaterThanOrEqualToComparison' value64='3'/>
<enum name='NSGreaterThanOrEqualToPredicateOperatorType' value64='3'/>
<enum name='NSGreaterThanPredicateOperatorType' value64='2'/>
<enum name='NSHPUXOperatingSystem' value64='4'/>
<enum name='NSHTTPCookieAcceptPolicyAlways' value64='0'/>
<enum name='NSHTTPCookieAcceptPolicyNever' value64='1'/>
<enum name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain' value64='2'/>
<enum name='NSHashTableCopyIn' value64='65536'/>
<enum name='NSHashTableObjectPointerPersonality' value64='512'/>
<enum name='NSHashTableStrongMemory' value64='0'/>
<enum name='NSHashTableWeakMemory' value64='5'/>
<enum name='NSHashTableZeroingWeakMemory' value64='1'/>
<enum name='NSHourCalendarUnit' value64='32'/>
<enum name='NSISO2022JPStringEncoding' value64='21'/>
<enum name='NSISO8601DateFormatWithColonSeparatorInTime' value64='512'/>
<enum name='NSISO8601DateFormatWithColonSeparatorInTimeZone' value64='1024'/>
<enum name='NSISO8601DateFormatWithDashSeparatorInDate' value64='256'/>
<enum name='NSISO8601DateFormatWithDay' value64='16'/>
<enum name='NSISO8601DateFormatWithFractionalSeconds' value64='2048'/>
<enum name='NSISO8601DateFormatWithFullDate' value64='275'/>
<enum name='NSISO8601DateFormatWithFullTime' value64='1632'/>
<enum name='NSISO8601DateFormatWithInternetDateTime' value64='1907'/>
<enum name='NSISO8601DateFormatWithMonth' value64='2'/>
<enum name='NSISO8601DateFormatWithSpaceBetweenDateAndTime' value64='128'/>
<enum name='NSISO8601DateFormatWithTime' value64='32'/>
<enum name='NSISO8601DateFormatWithTimeZone' value64='64'/>
<enum name='NSISO8601DateFormatWithWeekOfYear' value64='4'/>
<enum name='NSISO8601DateFormatWithYear' value64='1'/>
<enum name='NSISOLatin1StringEncoding' value64='5'/>
<enum name='NSISOLatin2StringEncoding' value64='9'/>
<enum name='NSInPredicateOperatorType' value64='10'/>
<enum name='NSIndexSubelement' value64='0'/>
<enum name='NSInlinePresentationIntentBlockHTML' value64='512'/>
<enum name='NSInlinePresentationIntentCode' value64='4'/>
<enum name='NSInlinePresentationIntentEmphasized' value64='1'/>
<enum name='NSInlinePresentationIntentInlineHTML' value64='256'/>
<enum name='NSInlinePresentationIntentLineBreak' value64='128'/>
<enum name='NSInlinePresentationIntentSoftBreak' value64='64'/>
<enum name='NSInlinePresentationIntentStrikethrough' value64='32'/>
<enum name='NSInlinePresentationIntentStronglyEmphasized' value64='2'/>
<enum name='NSInputMethodsDirectory' value64='16'/>
<enum name='NSInternalScriptError' value64='8'/>
<enum name='NSInternalSpecifierError' value64='5'/>
<enum name='NSIntersectSetExpressionType' value64='6'/>
<enum name='NSInvalidIndexSpecifierError' value64='4'/>
<enum name='NSItemProviderFileOptionOpenInPlace' value64='1'/>
<enum name='NSItemProviderItemUnavailableError' value64='-1000'/>
<enum name='NSItemProviderRepresentationVisibilityAll' value64='0'/>
<enum name='NSItemProviderRepresentationVisibilityGroup' value64='2'/>
<enum name='NSItemProviderRepresentationVisibilityOwnProcess' value64='3'/>
<enum name='NSItemProviderRepresentationVisibilityTeam' value64='1'/>
<enum name='NSItemProviderUnavailableCoercionError' value64='-1200'/>
<enum name='NSItemProviderUnexpectedValueClassError' value64='-1100'/>
<enum name='NSItemProviderUnknownError' value64='-1'/>
<enum name='NSItemReplacementDirectory' value64='99'/>
<enum name='NSJSONReadingAllowFragments' value64='4'/>
<enum name='NSJSONReadingFragmentsAllowed' value64='4'/>
<enum name='NSJSONReadingJSON5Allowed' value64='8'/>
<enum name='NSJSONReadingMutableContainers' value64='1'/>
<enum name='NSJSONReadingMutableLeaves' value64='2'/>
<enum name='NSJSONReadingTopLevelDictionaryAssumed' value64='16'/>
<enum name='NSJSONWritingFragmentsAllowed' value64='4'/>
<enum name='NSJSONWritingPrettyPrinted' value64='1'/>
<enum name='NSJSONWritingSortedKeys' value64='2'/>
<enum name='NSJSONWritingWithoutEscapingSlashes' value64='8'/>
<enum name='NSJapaneseEUCStringEncoding' value64='3'/>
<enum name='NSKeyPathExpressionType' value64='3'/>
<enum name='NSKeySpecifierEvaluationScriptError' value64='2'/>
<enum name='NSKeyValueChangeInsertion' value64='2'/>
<enum name='NSKeyValueChangeRemoval' value64='3'/>
<enum name='NSKeyValueChangeReplacement' value64='4'/>
<enum name='NSKeyValueChangeSetting' value64='1'/>
<enum name='NSKeyValueIntersectSetMutation' value64='3'/>
<enum name='NSKeyValueMinusSetMutation' value64='2'/>
<enum name='NSKeyValueObservingOptionInitial' value64='4'/>
<enum name='NSKeyValueObservingOptionNew' value64='1'/>
<enum name='NSKeyValueObservingOptionOld' value64='2'/>
<enum name='NSKeyValueObservingOptionPrior' value64='8'/>
<enum name='NSKeyValueSetSetMutation' value64='4'/>
<enum name='NSKeyValueUnionSetMutation' value64='1'/>
<enum name='NSKeyValueValidationError' value64='1024'/>
<enum name='NSLengthFormatterUnitCentimeter' value64='9'/>
<enum name='NSLengthFormatterUnitFoot' value64='1282'/>
<enum name='NSLengthFormatterUnitInch' value64='1281'/>
<enum name='NSLengthFormatterUnitKilometer' value64='14'/>
<enum name='NSLengthFormatterUnitMeter' value64='11'/>
<enum name='NSLengthFormatterUnitMile' value64='1284'/>
<enum name='NSLengthFormatterUnitMillimeter' value64='8'/>
<enum name='NSLengthFormatterUnitYard' value64='1283'/>
<enum name='NSLessThanComparison' value64='2'/>
<enum name='NSLessThanOrEqualToComparison' value64='1'/>
<enum name='NSLessThanOrEqualToPredicateOperatorType' value64='1'/>
<enum name='NSLessThanPredicateOperatorType' value64='0'/>
<enum name='NSLibraryDirectory' value64='5'/>
<enum name='NSLikePredicateOperatorType' value64='7'/>
<enum name='NSLinguisticTaggerJoinNames' value64='16'/>
<enum name='NSLinguisticTaggerOmitOther' value64='8'/>
<enum name='NSLinguisticTaggerOmitPunctuation' value64='2'/>
<enum name='NSLinguisticTaggerOmitWhitespace' value64='4'/>
<enum name='NSLinguisticTaggerOmitWords' value64='1'/>
<enum name='NSLinguisticTaggerUnitDocument' value64='3'/>
<enum name='NSLinguisticTaggerUnitParagraph' value64='2'/>
<enum name='NSLinguisticTaggerUnitSentence' value64='1'/>
<enum name='NSLinguisticTaggerUnitWord' value64='0'/>
<enum name='NSLiteralSearch' value64='2'/>
<enum name='NSLocalDomainMask' value64='2'/>
<enum name='NSLocaleLanguageDirectionBottomToTop' value64='4'/>
<enum name='NSLocaleLanguageDirectionLeftToRight' value64='1'/>
<enum name='NSLocaleLanguageDirectionRightToLeft' value64='2'/>
<enum name='NSLocaleLanguageDirectionTopToBottom' value64='3'/>
<enum name='NSLocaleLanguageDirectionUnknown' value64='0'/>
<enum name='NSMACHOperatingSystem' value64='5'/>
<enum name='NSMacOSRomanStringEncoding' value64='30'/>
<enum name='NSMachPortDeallocateNone' value64='0'/>
<enum name='NSMachPortDeallocateReceiveRight' value64='2'/>
<enum name='NSMachPortDeallocateSendRight' value64='1'/>
<enum name='NSMapTableCopyIn' value64='65536'/>
<enum name='NSMapTableObjectPointerPersonality' value64='512'/>
<enum name='NSMapTableStrongMemory' value64='0'/>
<enum name='NSMapTableWeakMemory' value64='5'/>
<enum name='NSMapTableZeroingWeakMemory' value64='1'/>
<enum name='NSMappedRead' value64='1'/>
<enum name='NSMassFormatterUnitGram' value64='11'/>
<enum name='NSMassFormatterUnitKilogram' value64='14'/>
<enum name='NSMassFormatterUnitOunce' value64='1537'/>
<enum name='NSMassFormatterUnitPound' value64='1538'/>
<enum name='NSMassFormatterUnitStone' value64='1539'/>
<enum name='NSMatchesPredicateOperatorType' value64='6'/>
<enum name='NSMatchingAnchored' value64='4'/>
<enum name='NSMatchingCompleted' value64='2'/>
<enum name='NSMatchingHitEnd' value64='4'/>
<enum name='NSMatchingInternalError' value64='16'/>
<enum name='NSMatchingProgress' value64='1'/>
<enum name='NSMatchingReportCompletion' value64='2'/>
<enum name='NSMatchingReportProgress' value64='1'/>
<enum name='NSMatchingRequiredEnd' value64='8'/>
<enum name='NSMatchingWithTransparentBounds' value64='8'/>
<enum name='NSMatchingWithoutAnchoringBounds' value64='16'/>
<enum name='NSMaxXEdge' value64='2'/>
<enum name='NSMaxYEdge' value64='3'/>
<enum name='NSMaximumStringLength' value64='2147483646'/>
<enum name='NSMeasurementFormatterUnitOptionsNaturalScale' value64='2'/>
<enum name='NSMeasurementFormatterUnitOptionsProvidedUnit' value64='1'/>
<enum name='NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit' value64='4'/>
<enum name='NSMiddleSubelement' value64='2'/>
<enum name='NSMinXEdge' value64='0'/>
<enum name='NSMinYEdge' value64='1'/>
<enum name='NSMinusSetExpressionType' value64='7'/>
<enum name='NSMinuteCalendarUnit' value64='64'/>
<enum name='NSMonthCalendarUnit' value64='8'/>
<enum name='NSMoviesDirectory' value64='17'/>
<enum name='NSMusicDirectory' value64='18'/>
<enum name='NSNEXTSTEPStringEncoding' value64='2'/>
<enum name='NSNetServiceListenForConnections' value64='2'/>
<enum name='NSNetServiceNoAutoRename' value64='1'/>
<enum name='NSNetServicesActivityInProgress' value64='-72003'/>
<enum name='NSNetServicesBadArgumentError' value64='-72004'/>
<enum name='NSNetServicesCancelledError' value64='-72005'/>
<enum name='NSNetServicesCollisionError' value64='-72001'/>
<enum name='NSNetServicesInvalidError' value64='-72006'/>
<enum name='NSNetServicesMissingRequiredConfigurationError' value64='-72008'/>
<enum name='NSNetServicesNotFoundError' value64='-72002'/>
<enum name='NSNetServicesTimeoutError' value64='-72007'/>
<enum name='NSNetServicesUnknownError' value64='-72000'/>
<enum name='NSNetworkDomainMask' value64='4'/>
<enum name='NSNoScriptError' value64='0'/>
<enum name='NSNoSpecifierError' value64='0'/>
<enum name='NSNoSubelement' value64='4'/>
<enum name='NSNoTopLevelContainersSpecifierError' value64='1'/>
<enum name='NSNonLossyASCIIStringEncoding' value64='7'/>
<enum name='NSNormalizedPredicateOption' value64='4'/>
<enum name='NSNotEqualToPredicateOperatorType' value64='5'/>
<enum name='NSNotFound' value64='-1'/>
<enum name='NSNotPredicateType' value64='0'/>
<enum name='NSNotificationCoalescingOnName' value64='1'/>
<enum name='NSNotificationCoalescingOnSender' value64='2'/>
<enum name='NSNotificationDeliverImmediately' value64='1'/>
<enum name='NSNotificationNoCoalescing' value64='0'/>
<enum name='NSNotificationPostToAllSessions' value64='2'/>
<enum name='NSNotificationSuspensionBehaviorCoalesce' value64='2'/>
<enum name='NSNotificationSuspensionBehaviorDeliverImmediately' value64='4'/>
<enum name='NSNotificationSuspensionBehaviorDrop' value64='1'/>
<enum name='NSNotificationSuspensionBehaviorHold' value64='3'/>
<enum name='NSNumberFormatterBehavior10_0' value64='1000'/>
<enum name='NSNumberFormatterBehavior10_4' value64='1040'/>
<enum name='NSNumberFormatterBehaviorDefault' value64='0'/>
<enum name='NSNumberFormatterCurrencyAccountingStyle' value64='10'/>
<enum name='NSNumberFormatterCurrencyISOCodeStyle' value64='8'/>
<enum name='NSNumberFormatterCurrencyPluralStyle' value64='9'/>
<enum name='NSNumberFormatterCurrencyStyle' value64='2'/>
<enum name='NSNumberFormatterDecimalStyle' value64='1'/>
<enum name='NSNumberFormatterNoStyle' value64='0'/>
<enum name='NSNumberFormatterOrdinalStyle' value64='6'/>
<enum name='NSNumberFormatterPadAfterPrefix' value64='1'/>
<enum name='NSNumberFormatterPadAfterSuffix' value64='3'/>
<enum name='NSNumberFormatterPadBeforePrefix' value64='0'/>
<enum name='NSNumberFormatterPadBeforeSuffix' value64='2'/>
<enum name='NSNumberFormatterPercentStyle' value64='3'/>
<enum name='NSNumberFormatterRoundCeiling' value64='0'/>
<enum name='NSNumberFormatterRoundDown' value64='2'/>
<enum name='NSNumberFormatterRoundFloor' value64='1'/>
<enum name='NSNumberFormatterRoundHalfDown' value64='5'/>
<enum name='NSNumberFormatterRoundHalfEven' value64='4'/>
<enum name='NSNumberFormatterRoundHalfUp' value64='6'/>
<enum name='NSNumberFormatterRoundUp' value64='3'/>
<enum name='NSNumberFormatterScientificStyle' value64='4'/>
<enum name='NSNumberFormatterSpellOutStyle' value64='5'/>
<enum name='NSNumericSearch' value64='64'/>
<enum name='NSOSF1OperatingSystem' value64='7'/>
<enum name='NSObjectAutoreleasedEvent' value64='3'/>
<enum name='NSObjectExtraRefDecrementedEvent' value64='5'/>
<enum name='NSObjectExtraRefIncrementedEvent' value64='4'/>
<enum name='NSObjectInternalRefDecrementedEvent' value64='7'/>
<enum name='NSObjectInternalRefIncrementedEvent' value64='6'/>
<enum name='NSOpenStepUnicodeReservedBase' value64='62464'/>
<enum name='NSOperationNotSupportedForKeyScriptError' value64='9'/>
<enum name='NSOperationNotSupportedForKeySpecifierError' value64='6'/>
<enum name='NSOperationQualityOfServiceBackground' value64='9'/>
<enum name='NSOperationQualityOfServiceUserInitiated' value64='25'/>
<enum name='NSOperationQualityOfServiceUserInteractive' value64='33'/>
<enum name='NSOperationQualityOfServiceUtility' value64='17'/>
<enum name='NSOperationQueueDefaultMaxConcurrentOperationCount' value64='-1'/>
<enum name='NSOperationQueuePriorityHigh' value64='4'/>
<enum name='NSOperationQueuePriorityLow' value64='-4'/>
<enum name='NSOperationQueuePriorityNormal' value64='0'/>
<enum name='NSOperationQueuePriorityVeryHigh' value64='8'/>
<enum name='NSOperationQueuePriorityVeryLow' value64='-8'/>
<enum name='NSOrPredicateType' value64='2'/>
<enum name='NSOrderedAscending' value64='-1'/>
<enum name='NSOrderedCollectionDifferenceCalculationInferMoves' value64='4'/>
<enum name='NSOrderedCollectionDifferenceCalculationOmitInsertedObjects' value64='1'/>
<enum name='NSOrderedCollectionDifferenceCalculationOmitRemovedObjects' value64='2'/>
<enum name='NSOrderedDescending' value64='1'/>
<enum name='NSOrderedSame' value64='0'/>
<enum name='NSPersonNameComponentsFormatterPhonetic' value64='2'/>
<enum name='NSPersonNameComponentsFormatterStyleAbbreviated' value64='4'/>
<enum name='NSPersonNameComponentsFormatterStyleDefault' value64='0'/>
<enum name='NSPersonNameComponentsFormatterStyleLong' value64='3'/>
<enum name='NSPersonNameComponentsFormatterStyleMedium' value64='2'/>
<enum name='NSPersonNameComponentsFormatterStyleShort' value64='1'/>
<enum name='NSPicturesDirectory' value64='19'/>
<enum name='NSPointerFunctionsCStringPersonality' value64='768'/>
<enum name='NSPointerFunctionsCopyIn' value64='65536'/>
<enum name='NSPointerFunctionsIntegerPersonality' value64='1280'/>
<enum name='NSPointerFunctionsMachVirtualMemory' value64='4'/>
<enum name='NSPointerFunctionsMallocMemory' value64='3'/>
<enum name='NSPointerFunctionsObjectPersonality' value64='0'/>
<enum name='NSPointerFunctionsObjectPointerPersonality' value64='512'/>
<enum name='NSPointerFunctionsOpaqueMemory' value64='2'/>
<enum name='NSPointerFunctionsOpaquePersonality' value64='256'/>
<enum name='NSPointerFunctionsStrongMemory' value64='0'/>
<enum name='NSPointerFunctionsStructPersonality' value64='1024'/>
<enum name='NSPointerFunctionsWeakMemory' value64='5'/>
<enum name='NSPointerFunctionsZeroingWeakMemory' value64='1'/>
<enum name='NSPositionAfter' value64='0'/>
<enum name='NSPositionBefore' value64='1'/>
<enum name='NSPositionBeginning' value64='2'/>
<enum name='NSPositionEnd' value64='3'/>
<enum name='NSPositionReplace' value64='4'/>
<enum name='NSPostASAP' value64='2'/>
<enum name='NSPostNow' value64='3'/>
<enum name='NSPostWhenIdle' value64='1'/>
<enum name='NSPreferencePanesDirectory' value64='22'/>
<enum name='NSPresentationIntentKindBlockQuote' value64='6'/>
<enum name='NSPresentationIntentKindCodeBlock' value64='5'/>
<enum name='NSPresentationIntentKindHeader' value64='1'/>
<enum name='NSPresentationIntentKindListItem' value64='4'/>
<enum name='NSPresentationIntentKindOrderedList' value64='2'/>
<enum name='NSPresentationIntentKindParagraph' value64='0'/>
<enum name='NSPresentationIntentKindTable' value64='8'/>
<enum name='NSPresentationIntentKindTableCell' value64='11'/>
<enum name='NSPresentationIntentKindTableHeaderRow' value64='9'/>
<enum name='NSPresentationIntentKindTableRow' value64='10'/>
<enum name='NSPresentationIntentKindThematicBreak' value64='7'/>
<enum name='NSPresentationIntentKindUnorderedList' value64='3'/>
<enum name='NSPresentationIntentTableColumnAlignmentCenter' value64='1'/>
<enum name='NSPresentationIntentTableColumnAlignmentLeft' value64='0'/>
<enum name='NSPresentationIntentTableColumnAlignmentRight' value64='2'/>
<enum name='NSPrinterDescriptionDirectory' value64='20'/>
<enum name='NSProcessInfoThermalStateCritical' value64='3'/>
<enum name='NSProcessInfoThermalStateFair' value64='1'/>
<enum name='NSProcessInfoThermalStateNominal' value64='0'/>
<enum name='NSProcessInfoThermalStateSerious' value64='2'/>
<enum name='NSPropertyListBinaryFormat_v1_0' value64='200'/>
<enum name='NSPropertyListErrorMaximum' value64='4095'/>
<enum name='NSPropertyListErrorMinimum' value64='3840'/>
<enum name='NSPropertyListImmutable' value64='0'/>
<enum name='NSPropertyListMutableContainers' value64='1'/>
<enum name='NSPropertyListMutableContainersAndLeaves' value64='2'/>
<enum name='NSPropertyListOpenStepFormat' value64='1'/>
<enum name='NSPropertyListReadCorruptError' value64='3840'/>
<enum name='NSPropertyListReadStreamError' value64='3842'/>
<enum name='NSPropertyListReadUnknownVersionError' value64='3841'/>
<enum name='NSPropertyListWriteInvalidError' value64='3852'/>
<enum name='NSPropertyListWriteStreamError' value64='3851'/>
<enum name='NSPropertyListXMLFormat_v1_0' value64='100'/>
<enum name='NSProprietaryStringEncoding' value64='65536'/>
<enum name='NSQualityOfServiceBackground' value64='9'/>
<enum name='NSQualityOfServiceDefault' value64='-1'/>
<enum name='NSQualityOfServiceUserInitiated' value64='25'/>
<enum name='NSQualityOfServiceUserInteractive' value64='33'/>
<enum name='NSQualityOfServiceUtility' value64='17'/>
<enum name='NSQuarterCalendarUnit' value64='2048'/>
<enum name='NSRandomSubelement' value64='3'/>
<enum name='NSReceiverEvaluationScriptError' value64='1'/>
<enum name='NSReceiversCantHandleCommandScriptError' value64='4'/>
<enum name='NSRectEdgeMaxX' value64='2'/>
<enum name='NSRectEdgeMaxY' value64='3'/>
<enum name='NSRectEdgeMinX' value64='0'/>
<enum name='NSRectEdgeMinY' value64='1'/>
<enum name='NSRegularExpressionAllowCommentsAndWhitespace' value64='2'/>
<enum name='NSRegularExpressionAnchorsMatchLines' value64='16'/>
<enum name='NSRegularExpressionCaseInsensitive' value64='1'/>
<enum name='NSRegularExpressionDotMatchesLineSeparators' value64='8'/>
<enum name='NSRegularExpressionIgnoreMetacharacters' value64='4'/>
<enum name='NSRegularExpressionSearch' value64='1024'/>
<enum name='NSRegularExpressionUseUnicodeWordBoundaries' value64='64'/>
<enum name='NSRegularExpressionUseUnixLineSeparators' value64='32'/>
<enum name='NSRelativeAfter' value64='0'/>
<enum name='NSRelativeBefore' value64='1'/>
<enum name='NSRelativeDateTimeFormatterStyleNamed' value64='1'/>
<enum name='NSRelativeDateTimeFormatterStyleNumeric' value64='0'/>
<enum name='NSRelativeDateTimeFormatterUnitsStyleAbbreviated' value64='3'/>
<enum name='NSRelativeDateTimeFormatterUnitsStyleFull' value64='0'/>
<enum name='NSRelativeDateTimeFormatterUnitsStyleShort' value64='2'/>
<enum name='NSRelativeDateTimeFormatterUnitsStyleSpellOut' value64='1'/>
<enum name='NSRequiredArgumentsMissingScriptError' value64='5'/>
<enum name='NSRoundBankers' value64='3'/>
<enum name='NSRoundDown' value64='1'/>
<enum name='NSRoundPlain' value64='0'/>
<enum name='NSRoundUp' value64='2'/>
<enum name='NSSaveOptionsAsk' value64='2'/>
<enum name='NSSaveOptionsNo' value64='1'/>
<enum name='NSSaveOptionsYes' value64='0'/>
<enum name='NSScannedOption' value64='1'/>
<enum name='NSSecondCalendarUnit' value64='128'/>
<enum name='NSSharedPublicDirectory' value64='21'/>
<enum name='NSShiftJISStringEncoding' value64='8'/>
<enum name='NSSolarisOperatingSystem' value64='3'/>
<enum name='NSSortConcurrent' value64='1'/>
<enum name='NSSortStable' value64='16'/>
<enum name='NSStreamEventEndEncountered' value64='16'/>
<enum name='NSStreamEventErrorOccurred' value64='8'/>
<enum name='NSStreamEventHasBytesAvailable' value64='2'/>
<enum name='NSStreamEventHasSpaceAvailable' value64='4'/>
<enum name='NSStreamEventNone' value64='0'/>
<enum name='NSStreamEventOpenCompleted' value64='1'/>
<enum name='NSStreamStatusAtEnd' value64='5'/>
<enum name='NSStreamStatusClosed' value64='6'/>
<enum name='NSStreamStatusError' value64='7'/>
<enum name='NSStreamStatusNotOpen' value64='0'/>
<enum name='NSStreamStatusOpen' value64='2'/>
<enum name='NSStreamStatusOpening' value64='1'/>
<enum name='NSStreamStatusReading' value64='3'/>
<enum name='NSStreamStatusWriting' value64='4'/>
<enum name='NSStringEncodingConversionAllowLossy' value64='1'/>
<enum name='NSStringEncodingConversionExternalRepresentation' value64='2'/>
<enum name='NSStringEnumerationByCaretPositions' value64='5'/>
<enum name='NSStringEnumerationByComposedCharacterSequences' value64='2'/>
<enum name='NSStringEnumerationByDeletionClusters' value64='6'/>
<enum name='NSStringEnumerationByLines' value64='0'/>
<enum name='NSStringEnumerationByParagraphs' value64='1'/>
<enum name='NSStringEnumerationBySentences' value64='4'/>
<enum name='NSStringEnumerationByWords' value64='3'/>
<enum name='NSStringEnumerationLocalized' value64='1024'/>
<enum name='NSStringEnumerationReverse' value64='256'/>
<enum name='NSStringEnumerationSubstringNotRequired' value64='512'/>
<enum name='NSSubqueryExpressionType' value64='13'/>
<enum name='NSSunOSOperatingSystem' value64='6'/>
<enum name='NSSymbolStringEncoding' value64='6'/>
<enum name='NSSystemDomainMask' value64='8'/>
<enum name='NSTaskTerminationReasonExit' value64='1'/>
<enum name='NSTaskTerminationReasonUncaughtSignal' value64='2'/>
<enum name='NSTextCheckingAllCustomTypes' value64='-4294967296'/>
<enum name='NSTextCheckingAllSystemTypes' value64='4294967295'/>
<enum name='NSTextCheckingAllTypes' value64='-1'/>
<enum name='NSTextCheckingTypeAddress' value64='16'/>
<enum name='NSTextCheckingTypeCorrection' value64='512'/>
<enum name='NSTextCheckingTypeDash' value64='128'/>
<enum name='NSTextCheckingTypeDate' value64='8'/>
<enum name='NSTextCheckingTypeGrammar' value64='4'/>
<enum name='NSTextCheckingTypeLink' value64='32'/>
<enum name='NSTextCheckingTypeOrthography' value64='1'/>
<enum name='NSTextCheckingTypePhoneNumber' value64='2048'/>
<enum name='NSTextCheckingTypeQuote' value64='64'/>
<enum name='NSTextCheckingTypeRegularExpression' value64='1024'/>
<enum name='NSTextCheckingTypeReplacement' value64='256'/>
<enum name='NSTextCheckingTypeSpelling' value64='2'/>
<enum name='NSTextCheckingTypeTransitInformation' value64='4096'/>
<enum name='NSTimeIntervalSince1970' value64='978307200.000000'/>
<enum name='NSTimeZoneCalendarUnit' value64='2097152'/>
<enum name='NSTimeZoneNameStyleDaylightSaving' value64='2'/>
<enum name='NSTimeZoneNameStyleGeneric' value64='4'/>
<enum name='NSTimeZoneNameStyleShortDaylightSaving' value64='3'/>
<enum name='NSTimeZoneNameStyleShortGeneric' value64='5'/>
<enum name='NSTimeZoneNameStyleShortStandard' value64='1'/>
<enum name='NSTimeZoneNameStyleStandard' value64='0'/>
<enum name='NSTrashDirectory' value64='102'/>
<enum name='NSURLBookmarkCreationMinimalBookmark' value64='512'/>
<enum name='NSURLBookmarkCreationPreferFileIDResolution' value64='256'/>
<enum name='NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess' value64='4096'/>
<enum name='NSURLBookmarkCreationSuitableForBookmarkFile' value64='1024'/>
<enum name='NSURLBookmarkCreationWithSecurityScope' value64='2048'/>
<enum name='NSURLBookmarkCreationWithoutImplicitSecurityScope' value64='536870912'/>
<enum name='NSURLBookmarkResolutionWithSecurityScope' value64='1024'/>
<enum name='NSURLBookmarkResolutionWithoutImplicitStartAccessing' value64='32768'/>
<enum name='NSURLBookmarkResolutionWithoutMounting' value64='512'/>
<enum name='NSURLBookmarkResolutionWithoutUI' value64='256'/>
<enum name='NSURLCacheStorageAllowed' value64='0'/>
<enum name='NSURLCacheStorageAllowedInMemoryOnly' value64='1'/>
<enum name='NSURLCacheStorageNotAllowed' value64='2'/>
<enum name='NSURLCredentialPersistenceForSession' value64='1'/>
<enum name='NSURLCredentialPersistenceNone' value64='0'/>
<enum name='NSURLCredentialPersistencePermanent' value64='2'/>
<enum name='NSURLCredentialPersistenceSynchronizable' value64='3'/>
<enum name='NSURLErrorAppTransportSecurityRequiresSecureConnection' value64='-1022'/>
<enum name='NSURLErrorBackgroundSessionInUseByAnotherProcess' value64='-996'/>
<enum name='NSURLErrorBackgroundSessionRequiresSharedContainer' value64='-995'/>
<enum name='NSURLErrorBackgroundSessionWasDisconnected' value64='-997'/>
<enum name='NSURLErrorBadServerResponse' value64='-1011'/>
<enum name='NSURLErrorBadURL' value64='-1000'/>
<enum name='NSURLErrorCallIsActive' value64='-1019'/>
<enum name='NSURLErrorCancelled' value64='-999'/>
<enum name='NSURLErrorCancelledReasonBackgroundUpdatesDisabled' value64='1'/>
<enum name='NSURLErrorCancelledReasonInsufficientSystemResources' value64='2'/>
<enum name='NSURLErrorCancelledReasonUserForceQuitApplication' value64='0'/>
<enum name='NSURLErrorCannotCloseFile' value64='-3002'/>
<enum name='NSURLErrorCannotConnectToHost' value64='-1004'/>
<enum name='NSURLErrorCannotCreateFile' value64='-3000'/>
<enum name='NSURLErrorCannotDecodeContentData' value64='-1016'/>
<enum name='NSURLErrorCannotDecodeRawData' value64='-1015'/>
<enum name='NSURLErrorCannotFindHost' value64='-1003'/>
<enum name='NSURLErrorCannotLoadFromNetwork' value64='-2000'/>
<enum name='NSURLErrorCannotMoveFile' value64='-3005'/>
<enum name='NSURLErrorCannotOpenFile' value64='-3001'/>
<enum name='NSURLErrorCannotParseResponse' value64='-1017'/>
<enum name='NSURLErrorCannotRemoveFile' value64='-3004'/>
<enum name='NSURLErrorCannotWriteToFile' value64='-3003'/>
<enum name='NSURLErrorClientCertificateRejected' value64='-1205'/>
<enum name='NSURLErrorClientCertificateRequired' value64='-1206'/>
<enum name='NSURLErrorDNSLookupFailed' value64='-1006'/>
<enum name='NSURLErrorDataLengthExceedsMaximum' value64='-1103'/>
<enum name='NSURLErrorDataNotAllowed' value64='-1020'/>
<enum name='NSURLErrorDownloadDecodingFailedMidStream' value64='-3006'/>
<enum name='NSURLErrorDownloadDecodingFailedToComplete' value64='-3007'/>
<enum name='NSURLErrorFileDoesNotExist' value64='-1100'/>
<enum name='NSURLErrorFileIsDirectory' value64='-1101'/>
<enum name='NSURLErrorFileOutsideSafeArea' value64='-1104'/>
<enum name='NSURLErrorHTTPTooManyRedirects' value64='-1007'/>
<enum name='NSURLErrorInternationalRoamingOff' value64='-1018'/>
<enum name='NSURLErrorNetworkConnectionLost' value64='-1005'/>
<enum name='NSURLErrorNetworkUnavailableReasonCellular' value64='0'/>
<enum name='NSURLErrorNetworkUnavailableReasonConstrained' value64='2'/>
<enum name='NSURLErrorNetworkUnavailableReasonExpensive' value64='1'/>
<enum name='NSURLErrorNoPermissionsToReadFile' value64='-1102'/>
<enum name='NSURLErrorNotConnectedToInternet' value64='-1009'/>
<enum name='NSURLErrorRedirectToNonExistentLocation' value64='-1010'/>
<enum name='NSURLErrorRequestBodyStreamExhausted' value64='-1021'/>
<enum name='NSURLErrorResourceUnavailable' value64='-1008'/>
<enum name='NSURLErrorSecureConnectionFailed' value64='-1200'/>
<enum name='NSURLErrorServerCertificateHasBadDate' value64='-1201'/>
<enum name='NSURLErrorServerCertificateHasUnknownRoot' value64='-1203'/>
<enum name='NSURLErrorServerCertificateNotYetValid' value64='-1204'/>
<enum name='NSURLErrorServerCertificateUntrusted' value64='-1202'/>
<enum name='NSURLErrorTimedOut' value64='-1001'/>
<enum name='NSURLErrorUnknown' value64='-1'/>
<enum name='NSURLErrorUnsupportedURL' value64='-1002'/>
<enum name='NSURLErrorUserAuthenticationRequired' value64='-1013'/>
<enum name='NSURLErrorUserCancelledAuthentication' value64='-1012'/>
<enum name='NSURLErrorZeroByteResource' value64='-1014'/>
<enum name='NSURLHandleLoadFailed' value64='3'/>
<enum name='NSURLHandleLoadInProgress' value64='2'/>
<enum name='NSURLHandleLoadSucceeded' value64='1'/>
<enum name='NSURLHandleNotLoaded' value64='0'/>
<enum name='NSURLNetworkServiceTypeAVStreaming' value64='8'/>
<enum name='NSURLNetworkServiceTypeBackground' value64='3'/>
<enum name='NSURLNetworkServiceTypeCallSignaling' value64='11'/>
<enum name='NSURLNetworkServiceTypeDefault' value64='0'/>
<enum name='NSURLNetworkServiceTypeResponsiveAV' value64='9'/>
<enum name='NSURLNetworkServiceTypeResponsiveData' value64='6'/>
<enum name='NSURLNetworkServiceTypeVideo' value64='2'/>
<enum name='NSURLNetworkServiceTypeVoIP' value64='1'/>
<enum name='NSURLNetworkServiceTypeVoice' value64='4'/>
<enum name='NSURLRelationshipContains' value64='0'/>
<enum name='NSURLRelationshipOther' value64='2'/>
<enum name='NSURLRelationshipSame' value64='1'/>
<enum name='NSURLRequestAttributionDeveloper' value64='0'/>
<enum name='NSURLRequestAttributionUser' value64='1'/>
<enum name='NSURLRequestReloadIgnoringCacheData' value64='1'/>
<enum name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData' value64='4'/>
<enum name='NSURLRequestReloadIgnoringLocalCacheData' value64='1'/>
<enum name='NSURLRequestReloadRevalidatingCacheData' value64='5'/>
<enum name='NSURLRequestReturnCacheDataDontLoad' value64='3'/>
<enum name='NSURLRequestReturnCacheDataElseLoad' value64='2'/>
<enum name='NSURLRequestUseProtocolCachePolicy' value64='0'/>
<enum name='NSURLResponseUnknownLength' value64='-1'/>
<enum name='NSURLSessionAuthChallengeCancelAuthenticationChallenge' value64='2'/>
<enum name='NSURLSessionAuthChallengePerformDefaultHandling' value64='1'/>
<enum name='NSURLSessionAuthChallengeRejectProtectionSpace' value64='3'/>
<enum name='NSURLSessionAuthChallengeUseCredential' value64='0'/>
<enum name='NSURLSessionDelayedRequestCancel' value64='2'/>
<enum name='NSURLSessionDelayedRequestContinueLoading' value64='0'/>
<enum name='NSURLSessionDelayedRequestUseNewRequest' value64='1'/>
<enum name='NSURLSessionMultipathServiceTypeAggregate' value64='3'/>
<enum name='NSURLSessionMultipathServiceTypeHandover' value64='1'/>
<enum name='NSURLSessionMultipathServiceTypeInteractive' value64='2'/>
<enum name='NSURLSessionMultipathServiceTypeNone' value64='0'/>
<enum name='NSURLSessionResponseAllow' value64='1'/>
<enum name='NSURLSessionResponseBecomeDownload' value64='2'/>
<enum name='NSURLSessionResponseBecomeStream' value64='3'/>
<enum name='NSURLSessionResponseCancel' value64='0'/>
<enum name='NSURLSessionTaskMetricsDomainResolutionProtocolHTTPS' value64='4'/>
<enum name='NSURLSessionTaskMetricsDomainResolutionProtocolTCP' value64='2'/>
<enum name='NSURLSessionTaskMetricsDomainResolutionProtocolTLS' value64='3'/>
<enum name='NSURLSessionTaskMetricsDomainResolutionProtocolUDP' value64='1'/>
<enum name='NSURLSessionTaskMetricsDomainResolutionProtocolUnknown' value64='0'/>
<enum name='NSURLSessionTaskMetricsResourceFetchTypeLocalCache' value64='3'/>
<enum name='NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad' value64='1'/>
<enum name='NSURLSessionTaskMetricsResourceFetchTypeServerPush' value64='2'/>
<enum name='NSURLSessionTaskMetricsResourceFetchTypeUnknown' value64='0'/>
<enum name='NSURLSessionTaskStateCanceling' value64='2'/>
<enum name='NSURLSessionTaskStateCompleted' value64='3'/>
<enum name='NSURLSessionTaskStateRunning' value64='0'/>
<enum name='NSURLSessionTaskStateSuspended' value64='1'/>
<enum name='NSURLSessionWebSocketCloseCodeAbnormalClosure' value64='1006'/>
<enum name='NSURLSessionWebSocketCloseCodeGoingAway' value64='1001'/>
<enum name='NSURLSessionWebSocketCloseCodeInternalServerError' value64='1011'/>
<enum name='NSURLSessionWebSocketCloseCodeInvalid' value64='0'/>
<enum name='NSURLSessionWebSocketCloseCodeInvalidFramePayloadData' value64='1007'/>
<enum name='NSURLSessionWebSocketCloseCodeMandatoryExtensionMissing' value64='1010'/>
<enum name='NSURLSessionWebSocketCloseCodeMessageTooBig' value64='1009'/>
<enum name='NSURLSessionWebSocketCloseCodeNoStatusReceived' value64='1005'/>
<enum name='NSURLSessionWebSocketCloseCodeNormalClosure' value64='1000'/>
<enum name='NSURLSessionWebSocketCloseCodePolicyViolation' value64='1008'/>
<enum name='NSURLSessionWebSocketCloseCodeProtocolError' value64='1002'/>
<enum name='NSURLSessionWebSocketCloseCodeTLSHandshakeFailure' value64='1015'/>
<enum name='NSURLSessionWebSocketCloseCodeUnsupportedData' value64='1003'/>
<enum name='NSURLSessionWebSocketMessageTypeData' value64='0'/>
<enum name='NSURLSessionWebSocketMessageTypeString' value64='1'/>
<enum name='NSUTF16BigEndianStringEncoding' value64='2415919360'/>
<enum name='NSUTF16LittleEndianStringEncoding' value64='2483028224'/>
<enum name='NSUTF16StringEncoding' value64='10'/>
<enum name='NSUTF32BigEndianStringEncoding' value64='2550137088'/>
<enum name='NSUTF32LittleEndianStringEncoding' value64='2617245952'/>
<enum name='NSUTF32StringEncoding' value64='2348810496'/>
<enum name='NSUTF8StringEncoding' value64='4'/>
<enum name='NSUbiquitousFileErrorMaximum' value64='4607'/>
<enum name='NSUbiquitousFileErrorMinimum' value64='4352'/>
<enum name='NSUbiquitousFileNotUploadedDueToQuotaError' value64='4354'/>
<enum name='NSUbiquitousFileUbiquityServerNotAvailable' value64='4355'/>
<enum name='NSUbiquitousFileUnavailableError' value64='4353'/>
<enum name='NSUbiquitousKeyValueStoreAccountChange' value64='3'/>
<enum name='NSUbiquitousKeyValueStoreInitialSyncChange' value64='1'/>
<enum name='NSUbiquitousKeyValueStoreQuotaViolationChange' value64='2'/>
<enum name='NSUbiquitousKeyValueStoreServerChange' value64='0'/>
<enum name='NSUncachedRead' value64='2'/>
<enum name='NSUndefinedDateComponent' value64='9223372036854775807'/>
<enum name='NSUndoCloseGroupingRunLoopOrdering' value64='350000'/>
<enum name='NSUnicodeStringEncoding' value64='10'/>
<enum name='NSUnionSetExpressionType' value64='5'/>
<enum name='NSUnknownKeyScriptError' value64='7'/>
<enum name='NSUnknownKeySpecifierError' value64='3'/>
<enum name='NSUserActivityConnectionUnavailableError' value64='4609'/>
<enum name='NSUserActivityErrorMaximum' value64='4863'/>
<enum name='NSUserActivityErrorMinimum' value64='4608'/>
<enum name='NSUserActivityHandoffFailedError' value64='4608'/>
<enum name='NSUserActivityHandoffUserInfoTooLargeError' value64='4611'/>
<enum name='NSUserActivityRemoteApplicationTimedOutError' value64='4610'/>
<enum name='NSUserCancelledError' value64='3072'/>
<enum name='NSUserDirectory' value64='7'/>
<enum name='NSUserDomainMask' value64='1'/>
<enum name='NSUserNotificationActivationTypeActionButtonClicked' value64='2'/>
<enum name='NSUserNotificationActivationTypeAdditionalActionClicked' value64='4'/>
<enum name='NSUserNotificationActivationTypeContentsClicked' value64='1'/>
<enum name='NSUserNotificationActivationTypeNone' value64='0'/>
<enum name='NSUserNotificationActivationTypeReplied' value64='3'/>
<enum name='NSValidationErrorMaximum' value64='2047'/>
<enum name='NSValidationErrorMinimum' value64='1024'/>
<enum name='NSVariableExpressionType' value64='2'/>
<enum name='NSVolumeEnumerationProduceFileReferenceURLs' value64='4'/>
<enum name='NSVolumeEnumerationSkipHiddenVolumes' value64='2'/>
<enum name='NSWeekCalendarUnit' value64='256'/>
<enum name='NSWeekOfMonthCalendarUnit' value64='4096'/>
<enum name='NSWeekOfYearCalendarUnit' value64='8192'/>
<enum name='NSWeekdayCalendarUnit' value64='512'/>
<enum name='NSWeekdayOrdinalCalendarUnit' value64='1024'/>
<enum name='NSWidthInsensitiveSearch' value64='256'/>
<enum name='NSWindows95OperatingSystem' value64='2'/>
<enum name='NSWindowsCP1250StringEncoding' value64='15'/>
<enum name='NSWindowsCP1251StringEncoding' value64='11'/>
<enum name='NSWindowsCP1252StringEncoding' value64='12'/>
<enum name='NSWindowsCP1253StringEncoding' value64='13'/>
<enum name='NSWindowsCP1254StringEncoding' value64='14'/>
<enum name='NSWindowsNTOperatingSystem' value64='1'/>
<enum name='NSWrapCalendarComponents' value64='1'/>
<enum name='NSXMLAttributeCDATAKind' value64='6'/>
<enum name='NSXMLAttributeDeclarationKind' value64='10'/>
<enum name='NSXMLAttributeEntitiesKind' value64='11'/>
<enum name='NSXMLAttributeEntityKind' value64='10'/>
<enum name='NSXMLAttributeEnumerationKind' value64='14'/>
<enum name='NSXMLAttributeIDKind' value64='7'/>
<enum name='NSXMLAttributeIDRefKind' value64='8'/>
<enum name='NSXMLAttributeIDRefsKind' value64='9'/>
<enum name='NSXMLAttributeKind' value64='3'/>
<enum name='NSXMLAttributeNMTokenKind' value64='12'/>
<enum name='NSXMLAttributeNMTokensKind' value64='13'/>
<enum name='NSXMLAttributeNotationKind' value64='15'/>
<enum name='NSXMLCommentKind' value64='6'/>
<enum name='NSXMLDTDKind' value64='8'/>
<enum name='NSXMLDocumentHTMLKind' value64='2'/>
<enum name='NSXMLDocumentIncludeContentTypeDeclaration' value64='262144'/>
<enum name='NSXMLDocumentKind' value64='1'/>
<enum name='NSXMLDocumentTextKind' value64='3'/>
<enum name='NSXMLDocumentTidyHTML' value64='512'/>
<enum name='NSXMLDocumentTidyXML' value64='1024'/>
<enum name='NSXMLDocumentValidate' value64='8192'/>
<enum name='NSXMLDocumentXHTMLKind' value64='1'/>
<enum name='NSXMLDocumentXInclude' value64='65536'/>
<enum name='NSXMLDocumentXMLKind' value64='0'/>
<enum name='NSXMLElementDeclarationAnyKind' value64='18'/>
<enum name='NSXMLElementDeclarationElementKind' value64='20'/>
<enum name='NSXMLElementDeclarationEmptyKind' value64='17'/>
<enum name='NSXMLElementDeclarationKind' value64='11'/>
<enum name='NSXMLElementDeclarationMixedKind' value64='19'/>
<enum name='NSXMLElementDeclarationUndefinedKind' value64='16'/>
<enum name='NSXMLElementKind' value64='2'/>
<enum name='NSXMLEntityDeclarationKind' value64='9'/>
<enum name='NSXMLEntityGeneralKind' value64='1'/>
<enum name='NSXMLEntityParameterKind' value64='4'/>
<enum name='NSXMLEntityParsedKind' value64='2'/>
<enum name='NSXMLEntityPredefined' value64='5'/>
<enum name='NSXMLEntityUnparsedKind' value64='3'/>
<enum name='NSXMLInvalidKind' value64='0'/>
<enum name='NSXMLNamespaceKind' value64='4'/>
<enum name='NSXMLNodeCompactEmptyElement' value64='4'/>
<enum name='NSXMLNodeExpandEmptyElement' value64='2'/>
<enum name='NSXMLNodeIsCDATA' value64='1'/>
<enum name='NSXMLNodeLoadExternalEntitiesAlways' value64='16384'/>
<enum name='NSXMLNodeLoadExternalEntitiesNever' value64='524288'/>
<enum name='NSXMLNodeLoadExternalEntitiesSameOriginOnly' value64='32768'/>
<enum name='NSXMLNodeNeverEscapeContents' value64='32'/>
<enum name='NSXMLNodeOptionsNone' value64='0'/>
<enum name='NSXMLNodePreserveAll' value64='4293918750'/>
<enum name='NSXMLNodePreserveAttributeOrder' value64='2097152'/>
<enum name='NSXMLNodePreserveCDATA' value64='16777216'/>
<enum name='NSXMLNodePreserveCharacterReferences' value64='134217728'/>
<enum name='NSXMLNodePreserveDTD' value64='67108864'/>
<enum name='NSXMLNodePreserveEmptyElements' value64='6'/>
<enum name='NSXMLNodePreserveEntities' value64='4194304'/>
<enum name='NSXMLNodePreserveNamespaceOrder' value64='1048576'/>
<enum name='NSXMLNodePreservePrefixes' value64='8388608'/>
<enum name='NSXMLNodePreserveQuotes' value64='24'/>
<enum name='NSXMLNodePreserveWhitespace' value64='33554432'/>
<enum name='NSXMLNodePrettyPrint' value64='131072'/>
<enum name='NSXMLNodePromoteSignificantWhitespace' value64='268435456'/>
<enum name='NSXMLNodeUseDoubleQuotes' value64='16'/>
<enum name='NSXMLNodeUseSingleQuotes' value64='8'/>
<enum name='NSXMLNotationDeclarationKind' value64='12'/>
<enum name='NSXMLParserAttributeHasNoValueError' value64='41'/>
<enum name='NSXMLParserAttributeListNotFinishedError' value64='51'/>
<enum name='NSXMLParserAttributeListNotStartedError' value64='50'/>
<enum name='NSXMLParserAttributeNotFinishedError' value64='40'/>
<enum name='NSXMLParserAttributeNotStartedError' value64='39'/>
<enum name='NSXMLParserAttributeRedefinedError' value64='42'/>
<enum name='NSXMLParserCDATANotFinishedError' value64='63'/>
<enum name='NSXMLParserCharacterRefAtEOFError' value64='10'/>
<enum name='NSXMLParserCharacterRefInDTDError' value64='13'/>
<enum name='NSXMLParserCharacterRefInEpilogError' value64='12'/>
<enum name='NSXMLParserCharacterRefInPrologError' value64='11'/>
<enum name='NSXMLParserCommentContainsDoubleHyphenError' value64='80'/>
<enum name='NSXMLParserCommentNotFinishedError' value64='45'/>
<enum name='NSXMLParserConditionalSectionNotFinishedError' value64='59'/>
<enum name='NSXMLParserConditionalSectionNotStartedError' value64='58'/>
<enum name='NSXMLParserDOCTYPEDeclNotFinishedError' value64='61'/>
<enum name='NSXMLParserDelegateAbortedParseError' value64='512'/>
<enum name='NSXMLParserDocumentStartError' value64='3'/>
<enum name='NSXMLParserElementContentDeclNotFinishedError' value64='55'/>
<enum name='NSXMLParserElementContentDeclNotStartedError' value64='54'/>
<enum name='NSXMLParserEmptyDocumentError' value64='4'/>
<enum name='NSXMLParserEncodingNotSupportedError' value64='32'/>
<enum name='NSXMLParserEntityBoundaryError' value64='90'/>
<enum name='NSXMLParserEntityIsExternalError' value64='29'/>
<enum name='NSXMLParserEntityIsParameterError' value64='30'/>
<enum name='NSXMLParserEntityNotFinishedError' value64='37'/>
<enum name='NSXMLParserEntityNotStartedError' value64='36'/>
<enum name='NSXMLParserEntityRefAtEOFError' value64='14'/>
<enum name='NSXMLParserEntityRefInDTDError' value64='17'/>
<enum name='NSXMLParserEntityRefInEpilogError' value64='16'/>
<enum name='NSXMLParserEntityRefInPrologError' value64='15'/>
<enum name='NSXMLParserEntityRefLoopError' value64='89'/>
<enum name='NSXMLParserEntityReferenceMissingSemiError' value64='23'/>
<enum name='NSXMLParserEntityReferenceWithoutNameError' value64='22'/>
<enum name='NSXMLParserEntityValueRequiredError' value64='84'/>
<enum name='NSXMLParserEqualExpectedError' value64='75'/>
<enum name='NSXMLParserExternalStandaloneEntityError' value64='82'/>
<enum name='NSXMLParserExternalSubsetNotFinishedError' value64='60'/>
<enum name='NSXMLParserExtraContentError' value64='86'/>
<enum name='NSXMLParserGTRequiredError' value64='73'/>
<enum name='NSXMLParserInternalError' value64='1'/>
<enum name='NSXMLParserInvalidCharacterError' value64='9'/>
<enum name='NSXMLParserInvalidCharacterInEntityError' value64='87'/>
<enum name='NSXMLParserInvalidCharacterRefError' value64='8'/>
<enum name='NSXMLParserInvalidConditionalSectionError' value64='83'/>
<enum name='NSXMLParserInvalidDecimalCharacterRefError' value64='7'/>
<enum name='NSXMLParserInvalidEncodingError' value64='81'/>
<enum name='NSXMLParserInvalidEncodingNameError' value64='79'/>
<enum name='NSXMLParserInvalidHexCharacterRefError' value64='6'/>
<enum name='NSXMLParserInvalidURIError' value64='91'/>
<enum name='NSXMLParserLTRequiredError' value64='72'/>
<enum name='NSXMLParserLTSlashRequiredError' value64='74'/>
<enum name='NSXMLParserLessThanSymbolInAttributeError' value64='38'/>
<enum name='NSXMLParserLiteralNotFinishedError' value64='44'/>
<enum name='NSXMLParserLiteralNotStartedError' value64='43'/>
<enum name='NSXMLParserMisplacedCDATAEndStringError' value64='62'/>
<enum name='NSXMLParserMisplacedXMLDeclarationError' value64='64'/>
<enum name='NSXMLParserMixedContentDeclNotFinishedError' value64='53'/>
<enum name='NSXMLParserMixedContentDeclNotStartedError' value64='52'/>
<enum name='NSXMLParserNAMERequiredError' value64='68'/>
<enum name='NSXMLParserNMTOKENRequiredError' value64='67'/>
<enum name='NSXMLParserNamespaceDeclarationError' value64='35'/>
<enum name='NSXMLParserNoDTDError' value64='94'/>
<enum name='NSXMLParserNotWellBalancedError' value64='85'/>
<enum name='NSXMLParserNotationNotFinishedError' value64='49'/>
<enum name='NSXMLParserNotationNotStartedError' value64='48'/>
<enum name='NSXMLParserOutOfMemoryError' value64='2'/>
<enum name='NSXMLParserPCDATARequiredError' value64='69'/>
<enum name='NSXMLParserParsedEntityRefAtEOFError' value64='18'/>
<enum name='NSXMLParserParsedEntityRefInEpilogError' value64='20'/>
<enum name='NSXMLParserParsedEntityRefInInternalError' value64='88'/>
<enum name='NSXMLParserParsedEntityRefInInternalSubsetError' value64='21'/>
<enum name='NSXMLParserParsedEntityRefInPrologError' value64='19'/>
<enum name='NSXMLParserParsedEntityRefMissingSemiError' value64='25'/>
<enum name='NSXMLParserParsedEntityRefNoNameError' value64='24'/>
<enum name='NSXMLParserPrematureDocumentEndError' value64='5'/>
<enum name='NSXMLParserProcessingInstructionNotFinishedError' value64='47'/>
<enum name='NSXMLParserProcessingInstructionNotStartedError' value64='46'/>
<enum name='NSXMLParserPublicIdentifierRequiredError' value64='71'/>
<enum name='NSXMLParserResolveExternalEntitiesAlways' value64='3'/>
<enum name='NSXMLParserResolveExternalEntitiesNever' value64='0'/>
<enum name='NSXMLParserResolveExternalEntitiesNoNetwork' value64='1'/>
<enum name='NSXMLParserResolveExternalEntitiesSameOriginOnly' value64='2'/>
<enum name='NSXMLParserSeparatorRequiredError' value64='66'/>
<enum name='NSXMLParserSpaceRequiredError' value64='65'/>
<enum name='NSXMLParserStandaloneValueError' value64='78'/>
<enum name='NSXMLParserStringNotClosedError' value64='34'/>
<enum name='NSXMLParserStringNotStartedError' value64='33'/>
<enum name='NSXMLParserTagNameMismatchError' value64='76'/>
<enum name='NSXMLParserURIFragmentError' value64='92'/>
<enum name='NSXMLParserURIRequiredError' value64='70'/>
<enum name='NSXMLParserUndeclaredEntityError' value64='26'/>
<enum name='NSXMLParserUnfinishedTagError' value64='77'/>
<enum name='NSXMLParserUnknownEncodingError' value64='31'/>
<enum name='NSXMLParserUnparsedEntityError' value64='28'/>
<enum name='NSXMLParserXMLDeclNotFinishedError' value64='57'/>
<enum name='NSXMLParserXMLDeclNotStartedError' value64='56'/>
<enum name='NSXMLProcessingInstructionKind' value64='5'/>
<enum name='NSXMLTextKind' value64='7'/>
<enum name='NSXPCConnectionErrorMaximum' value64='4224'/>
<enum name='NSXPCConnectionErrorMinimum' value64='4096'/>
<enum name='NSXPCConnectionInterrupted' value64='4097'/>
<enum name='NSXPCConnectionInvalid' value64='4099'/>
<enum name='NSXPCConnectionPrivileged' value64='4096'/>
<enum name='NSXPCConnectionReplyInvalid' value64='4101'/>
<enum name='NSYearCalendarUnit' value64='4'/>
<enum name='NSYearForWeekOfYearCalendarUnit' value64='16384'/>
<enum name='NS_BLOCKS_AVAILABLE' value64='1'/>
<enum name='NS_BigEndian' value64='2'/>
<enum name='NS_LittleEndian' value64='1'/>
<enum name='NS_UNICHAR_IS_EIGHT_BIT' value64='0'/>
<enum name='NS_UnknownByteOrder' value64='0'/>
<function inline='true' name='CFBridgingRelease'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function inline='true' name='CFBridgingRetain'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSAllHashTableObjects'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSAllMapTableKeys'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSAllMapTableValues'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSAllocateCollectable'>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSAllocateObject'>
<arg type64='#'/>
<arg type64='Q'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSClassFromString'>
<arg type64='@'/>
<retval type64='#'/>
</function>
<function name='NSCompareHashTables'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</function>
<function name='NSCompareMapTables'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</function>
<function name='NSContainsRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSConvertHostDoubleToSwapped'>
<arg type64='d'/>
<retval type64='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSConvertHostFloatToSwapped'>
<arg type64='f'/>
<retval type64='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSConvertSwappedDoubleToHost'>
<arg type64='{_NSSwappedDouble=Q}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSConvertSwappedFloatToHost'>
<arg type64='{_NSSwappedFloat=I}'/>
<retval type64='f'/>
</function>
<function name='NSCopyHashTableWithZone'>
<arg type64='@'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSCopyMapTableWithZone'>
<arg type64='@'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSCopyMemoryPages'>
<arg type64='^v' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='NSCopyObject'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSCountFrames'>
<retval type64='Q'/>
</function>
<function name='NSCountHashTable'>
<arg type64='@'/>
<retval type64='Q'/>
</function>
<function name='NSCountMapTable'>
<arg type64='@'/>
<retval type64='Q'/>
</function>
<function name='NSCreateHashTable'>
<arg type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<arg type64='Q'/>
<retval type64='@'/>
</function>
<function name='NSCreateHashTableWithZone'>
<arg type64='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<arg type64='Q'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSCreateMapTable'>
<arg type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<arg type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<arg type64='Q'/>
<retval type64='@'/>
</function>
<function name='NSCreateMapTableWithZone'>
<arg type64='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<arg type64='{_NSMapTableValueCallBacks=^?^?^?}'/>
<arg type64='Q'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSCreateZone'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='B'/>
<retval type64='^{_NSZone=}'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg type64='^v' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='NSDeallocateObject'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSDecimalAdd'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecimalCompact'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSDecimalCompare'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<retval type64='q'/>
</function>
<function name='NSDecimalCopy'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSDecimalDivide'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSDecimalIsNotANumber'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<retval type64='B'/>
</function>
<function name='NSDecimalMultiply'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='s'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecimalNormalize'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecimalPower'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecimalRound'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='q'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='NSDecimalString'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSDecimalSubtract'>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg type64='@'/>
<retval type64='B'/>
</function>
<function name='NSDefaultMallocZone'>
<retval type64='^{_NSZone=}'/>
</function>
<function name='NSDivideRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o'/>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o'/>
<arg type64='d'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='NSEdgeInsetsEqual'>
<arg type64='{NSEdgeInsets=dddd}'/>
<arg type64='{NSEdgeInsets=dddd}'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSEdgeInsetsMake'>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{NSEdgeInsets=dddd}'/>
</function>
<function name='NSEndHashTableEnumeration'>
<arg type64='^{_NSHashEnumerator=QQ^v}' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSEndMapTableEnumeration'>
<arg type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSEnumerateHashTable'>
<arg type64='@'/>
<retval type64='{_NSHashEnumerator=QQ^v}'/>
</function>
<function name='NSEnumerateMapTable'>
<arg type64='@'/>
<retval type64='{_NSMapEnumerator=QQ^v}'/>
</function>
<function name='NSEqualPoints'>
<arg type64='{CGPoint=dd}'/>
<arg type64='{CGPoint=dd}'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSEqualRanges'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<retval type64='B'/>
</function>
<function name='NSEqualRects'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='B'/>
</function>
<function name='NSEqualSizes'>
<arg type64='{CGSize=dd}'/>
<arg type64='{CGSize=dd}'/>
<retval type64='B'/>
</function>
<function name='NSExtraRefCount'>
<arg type64='@'/>
<retval type64='Q'/>
</function>
<function name='NSFileTypeForHFSTypeCode'>
<arg type64='I'/>
<retval type64='@'/>
</function>
<function name='NSFrameAddress'>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSFreeHashTable'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSFreeMapTable'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSFullUserName'>
<retval type64='@'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg type64='*' type_modifier='o'/>
<arg type64='^Q' type_modifier='o'/>
<arg type64='^Q' type_modifier='o'/>
<retval type64='*'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval function_pointer='true' type64='^?'>
<arg type64='@'/>
<retval type64='v'/>
</retval>
</function>
<function name='NSHFSTypeCodeFromFileType'>
<arg type64='@'/>
<retval type64='I'/>
</function>
<function name='NSHFSTypeOfFile'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSHashGet'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='^v'/>
</function>
<function name='NSHashInsert'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSHashInsertIfAbsent'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='^v'/>
</function>
<function name='NSHashInsertKnownAbsent'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSHashRemove'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function inline='true' name='NSHeight'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function name='NSHomeDirectory'>
<retval type64='@'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function inline='true' name='NSHostByteOrder'>
<retval type64='q'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSInsetRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntegralRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntegralRectWithOptions'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='Q'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntersectionRange'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<retval type64='{_NSRange=QQ}'/>
</function>
<function name='NSIntersectionRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntersectsRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='B'/>
</function>
<function name='NSIsEmptyRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='B'/>
</function>
<function name='NSIsFreedObject'>
<arg type64='@'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSLocationInRange'>
<arg type64='Q'/>
<arg type64='{_NSRange=QQ}'/>
<retval type64='B'/>
</function>
<function name='NSLog' variadic='true'>
<arg printf_format='true' type64='@'/>
<retval type64='v'/>
</function>
<function name='NSLogPageSize'>
<retval type64='Q'/>
</function>
<function name='NSLogv'>
<arg type64='@'/>
<arg type64='^{__va_list_tag=II^v^v}'/>
<retval type64='v'/>
</function>
<function inline='true' name='NSMakeCollectable'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function inline='true' name='NSMakePoint'>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{CGPoint=dd}'/>
</function>
<function inline='true' name='NSMakeRange'>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{_NSRange=QQ}'/>
</function>
<function inline='true' name='NSMakeRect'>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function inline='true' name='NSMakeSize'>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{CGSize=dd}'/>
</function>
<function name='NSMapGet'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='^v'/>
</function>
<function name='NSMapInsert'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSMapInsertIfAbsent'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='^v'/>
</function>
<function name='NSMapInsertKnownAbsent'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSMapMember'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='^^v' type_modifier='o'/>
<arg type64='^^v' type_modifier='o'/>
<retval type64='B'/>
</function>
<function name='NSMapRemove'>
<arg type64='@'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function inline='true' name='NSMaxRange'>
<arg type64='{_NSRange=QQ}'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSMaxX'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSMaxY'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSMidX'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSMidY'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSMinX'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSMinY'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function name='NSMouseInRect'>
<arg type64='{CGPoint=dd}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='B'/>
<retval type64='B'/>
</function>
<function name='NSNextHashEnumeratorItem'>
<arg type64='^{_NSHashEnumerator=QQ^v}' type_modifier='n'/>
<retval type64='^v'/>
</function>
<function name='NSNextMapEnumeratorPair'>
<arg type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
<arg type64='^^v' type_modifier='o'/>
<arg type64='^^v' type_modifier='o'/>
<retval type64='B'/>
</function>
<function name='NSOffsetRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval type64='@'/>
</function>
<function name='NSPageSize'>
<retval type64='Q'/>
</function>
<function inline='true' name='NSPointFromCGPoint'>
<arg type64='{CGPoint=dd}'/>
<retval type64='{CGPoint=dd}'/>
</function>
<function name='NSPointFromString'>
<arg type64='@'/>
<retval type64='{CGPoint=dd}'/>
</function>
<function name='NSPointInRect'>
<arg type64='{CGPoint=dd}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSPointToCGPoint'>
<arg type64='{CGPoint=dd}'/>
<retval type64='{CGPoint=dd}'/>
</function>
<function name='NSProtocolFromString'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSRangeFromString'>
<arg type64='@'/>
<retval type64='{_NSRange=QQ}'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval type64='Q'/>
</function>
<function name='NSReallocateCollectable'>
<arg type64='^v' type_modifier='n'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSRecordAllocationEvent'>
<arg type64='i'/>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function inline='true' name='NSRectFromCGRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSRectFromString'>
<arg type64='@'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function inline='true' name='NSRectToCGRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSRecycleZone'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSResetHashTable'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSResetMapTable'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSReturnAddress'>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='B'/>
<retval type64='@'/>
</function>
<function name='NSSelectorFromString'>
<arg type64='@'/>
<retval type64=':'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg function_pointer='true' type64='^?' type_modifier='n'>
<retval type64='v'/>
</arg>
<retval type64='v'/>
</function>
<function name='NSSetZoneName'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg type64='@'/>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='B'/>
</function>
<function inline='true' name='NSSizeFromCGSize'>
<arg type64='{CGSize=dd}'/>
<retval type64='{CGSize=dd}'/>
</function>
<function name='NSSizeFromString'>
<arg type64='@'/>
<retval type64='{CGSize=dd}'/>
</function>
<function inline='true' name='NSSizeToCGSize'>
<arg type64='{CGSize=dd}'/>
<retval type64='{CGSize=dd}'/>
</function>
<function name='NSStringFromClass'>
<arg type64='#'/>
<retval type64='@'/>
</function>
<function name='NSStringFromHashTable'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSStringFromMapTable'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSStringFromPoint'>
<arg type64='{CGPoint=dd}'/>
<retval type64='@'/>
</function>
<function name='NSStringFromProtocol'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<function name='NSStringFromRange'>
<arg type64='{_NSRange=QQ}'/>
<retval type64='@'/>
</function>
<function name='NSStringFromRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='@'/>
</function>
<function name='NSStringFromSelector'>
<arg type64=':'/>
<retval type64='@'/>
</function>
<function name='NSStringFromSize'>
<arg type64='{CGSize=dd}'/>
<retval type64='@'/>
</function>
<function inline='true' name='NSSwapBigDoubleToHost'>
<arg type64='{_NSSwappedDouble=Q}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSSwapBigFloatToHost'>
<arg type64='{_NSSwappedFloat=I}'/>
<retval type64='f'/>
</function>
<function inline='true' name='NSSwapBigIntToHost'>
<arg type64='I'/>
<retval type64='I'/>
</function>
<function inline='true' name='NSSwapBigLongLongToHost'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapBigLongToHost'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapBigShortToHost'>
<arg type64='S'/>
<retval type64='S'/>
</function>
<function inline='true' name='NSSwapDouble'>
<arg type64='{_NSSwappedDouble=Q}'/>
<retval type64='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapFloat'>
<arg type64='{_NSSwappedFloat=I}'/>
<retval type64='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostDoubleToBig'>
<arg type64='d'/>
<retval type64='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapHostDoubleToLittle'>
<arg type64='d'/>
<retval type64='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapHostFloatToBig'>
<arg type64='f'/>
<retval type64='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostFloatToLittle'>
<arg type64='f'/>
<retval type64='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostIntToBig'>
<arg type64='I'/>
<retval type64='I'/>
</function>
<function inline='true' name='NSSwapHostIntToLittle'>
<arg type64='I'/>
<retval type64='I'/>
</function>
<function inline='true' name='NSSwapHostLongLongToBig'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapHostLongLongToLittle'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapHostLongToBig'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapHostLongToLittle'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapHostShortToBig'>
<arg type64='S'/>
<retval type64='S'/>
</function>
<function inline='true' name='NSSwapHostShortToLittle'>
<arg type64='S'/>
<retval type64='S'/>
</function>
<function inline='true' name='NSSwapInt'>
<arg type64='I'/>
<retval type64='I'/>
</function>
<function inline='true' name='NSSwapLittleDoubleToHost'>
<arg type64='{_NSSwappedDouble=Q}'/>
<retval type64='d'/>
</function>
<function inline='true' name='NSSwapLittleFloatToHost'>
<arg type64='{_NSSwappedFloat=I}'/>
<retval type64='f'/>
</function>
<function inline='true' name='NSSwapLittleIntToHost'>
<arg type64='I'/>
<retval type64='I'/>
</function>
<function inline='true' name='NSSwapLittleLongLongToHost'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapLittleLongToHost'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapLittleShortToHost'>
<arg type64='S'/>
<retval type64='S'/>
</function>
<function inline='true' name='NSSwapLong'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapLongLong'>
<arg type64='Q'/>
<retval type64='Q'/>
</function>
<function inline='true' name='NSSwapShort'>
<arg type64='S'/>
<retval type64='S'/>
</function>
<function name='NSTemporaryDirectory'>
<retval type64='@'/>
</function>
<function name='NSUnionRange'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<retval type64='{_NSRange=QQ}'/>
</function>
<function name='NSUnionRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSUserName'>
<retval type64='@'/>
</function>
<function inline='true' name='NSWidth'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type64='d'/>
</function>
<function name='NSZoneCalloc'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSZoneFree'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<retval type64='v'/>
</function>
<function name='NSZoneFromPointer'>
<arg type64='^v' type_modifier='n'/>
<retval type64='^{_NSZone=}'/>
</function>
<function name='NSZoneMalloc'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NSZoneName'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<retval type64='@'/>
</function>
<function name='NSZoneRealloc'>
<arg type64='^{_NSZone=}' type_modifier='n'/>
<arg type64='^v' type_modifier='n'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='NXReadNSObjectFromCoder'>
<arg type64='@'/>
<retval type64='@'/>
</function>
<class name='NSAffineTransform'>
<method selector='setTransformStruct:'>
<arg index='0' type64='{_NSAffineTransformStruct=dddddd}'/>
</method>
<method selector='transformStruct'>
<retval type64='{_NSAffineTransformStruct=dddddd}'/>
</method>
</class>
<class name='NSAppleEventDescriptor'>
<method selector='booleanValue'>
<retval type64='B'/>
</method>
<method class_method='true' selector='descriptorWithBoolean:'>
<arg index='0' type64='B'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:bytes:length:'>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method selector='initWithAEDescNoCopy:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='initWithDescriptorType:bytes:length:'>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method selector='isRecordDescriptor'>
<retval type64='B'/>
</method>
</class>
<class name='NSAppleEventManager'>
<method selector='dispatchRawAppleEvent:withRawReply:handlerRefCon:'>
<arg index='0' type_modifier='n'/>
<arg index='1' type_modifier='o'/>
</method>
<method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
<arg index='1' sel_of_type64='v32@0:8@16@24'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='compileAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='executeAndReturnError:'>
<arg index='0' type_modifier='o'/>
</method>
<method selector='executeAppleEvent:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='isCompiled'>
<retval type64='B'/>
</method>
</class>
<class name='NSArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<retval type64='B'/>
</method>
</class>
<class name='NSArray'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='3' type_modifier='n'/>
</method>
<method class_method='true' selector='arrayWithObjects:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='containsObject:'>
<retval type64='B'/>
</method>
<method selector='differenceFromArray:withOptions:usingEquivalenceTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</arg>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='v'/>
</arg>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B' type_modifier='o'/>
<retval type64='B'/>
</arg>
</method>
<method selector='initWithArray:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithObjects:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='isEqualToArray:'>
<retval type64='B'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' sel_of_type64='v16@0:8'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg function_pointer='true' index='0' type64='^?' type_modifier='n'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^v'/>
<retval type64='q'/>
</arg>
<arg index='1' type_modifier='n'/>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg function_pointer='true' index='0' type64='^?' type_modifier='n'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^v'/>
<retval type64='q'/>
</arg>
<arg index='1' type_modifier='n'/>
</method>
<method selector='sortedArrayUsingSelector:'>
<arg index='0' sel_of_type64='q24@0:8@16'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='writeToFile:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:error:'>
<retval type64='B'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method selector='handleFailureInFunction:file:lineNumber:description:' variadic='true'>
<arg index='3' printf_format='true'/>
</method>
<method selector='handleFailureInMethod:object:file:lineNumber:description:' variadic='true'>
<arg index='4' printf_format='true'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attribute:atIndex:effectiveRange:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='attributesAtIndex:effectiveRange:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='enumerateAttribute:inRange:options:usingBlock:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateAttributesInRange:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='isEqualToAttributedString:'>
<retval type64='B'/>
</method>
</class>
<class name='NSAttributedStringMarkdownParsingOptions'>
<method selector='allowsExtendedAttributes'>
<retval type64='B'/>
</method>
<method selector='setAllowsExtendedAttributes:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSBackgroundActivityScheduler'>
<method selector='repeats'>
<retval type64='B'/>
</method>
<method selector='scheduleWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@?'/>
<retval type64='v'/>
</arg>
</method>
<method selector='setRepeats:'>
<arg index='0' type64='B'/>
</method>
<method selector='shouldDefer'>
<retval type64='B'/>
</method>
</class>
<class name='NSBlockOperation'>
<method selector='addExecutionBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='blockOperationWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSBundle'>
<method selector='isLoaded'>
<retval type64='B'/>
</method>
<method selector='load'>
<retval type64='B'/>
</method>
<method selector='loadAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='preflightAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='unload'>
<retval type64='B'/>
</method>
</class>
<class name='NSBundleResourceRequest'>
<method selector='beginAccessingResourcesWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='conditionallyBeginAccessingResourcesWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='B'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSByteCountFormatter'>
<method selector='allowsNonnumericFormatting'>
<retval type64='B'/>
</method>
<method selector='includesActualByteCount'>
<retval type64='B'/>
</method>
<method selector='includesCount'>
<retval type64='B'/>
</method>
<method selector='includesUnit'>
<retval type64='B'/>
</method>
<method selector='isAdaptive'>
<retval type64='B'/>
</method>
<method selector='setAdaptive:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAllowsNonnumericFormatting:'>
<arg index='0' type64='B'/>
</method>
<method selector='setIncludesActualByteCount:'>
<arg index='0' type64='B'/>
</method>
<method selector='setIncludesCount:'>
<arg index='0' type64='B'/>
</method>
<method selector='setIncludesUnit:'>
<arg index='0' type64='B'/>
</method>
<method selector='setZeroPadsFractionDigits:'>
<arg index='0' type64='B'/>
</method>
<method selector='zeroPadsFractionDigits'>
<retval type64='B'/>
</method>
</class>
<class name='NSCache'>
<method selector='evictsObjectsWithDiscardedContent'>
<retval type64='B'/>
</method>
<method selector='setEvictsObjectsWithDiscardedContent:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSCalendar'>
<method selector='date:matchesComponents:'>
<retval type64='B'/>
</method>
<method selector='enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='B'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getEra:year:month:day:fromDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='getHour:minute:second:nanosecond:fromDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='isDate:equalToDate:toUnitGranularity:'>
<retval type64='B'/>
</method>
<method selector='isDate:inSameDayAsDate:'>
<retval type64='B'/>
</method>
<method selector='isDateInToday:'>
<retval type64='B'/>
</method>
<method selector='isDateInTomorrow:'>
<retval type64='B'/>
</method>
<method selector='isDateInWeekend:'>
<retval type64='B'/>
</method>
<method selector='isDateInYesterday:'>
<retval type64='B'/>
</method>
<method selector='nextWeekendStartDate:interval:options:afterDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='rangeOfWeekendStartDate:interval:containingDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSCalendarDate'>
<method selector='years:months:days:hours:minutes:seconds:sinceDate:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
<arg index='4' type_modifier='o'/>
<arg index='5' type_modifier='o'/>
</method>
</class>
<class name='NSCharacterSet'>
<method selector='characterIsMember:'>
<retval type64='B'/>
</method>
<method selector='hasMemberInPlane:'>
<retval type64='B'/>
</method>
<method selector='isSupersetOfSet:'>
<retval type64='B'/>
</method>
<method selector='longCharacterIsMember:'>
<retval type64='B'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowsKeyedCoding'>
<retval type64='B'/>
</method>
<method selector='containsValueForKey:'>
<retval type64='B'/>
</method>
<method selector='decodeArrayOfObjCType:count:at:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='decodeBoolForKey:'>
<retval type64='B'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='decodeBytesWithReturnedLength:'>
<arg index='0' type_modifier='o'/>
</method>
<method selector='decodeValueOfObjCType:at:'>
<arg index='1' type_modifier='n'/>
</method>
<method selector='encodeArrayOfObjCType:count:at:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
<arg index='2' type_modifier='n'/>
</method>
<method selector='encodeBool:forKey:'>
<arg index='0' type64='B'/>
</method>
<method selector='encodeBytes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='encodeValueOfObjCType:at:'>
<arg index='1' type_modifier='n'/>
</method>
<method selector='requiresSecureCoding'>
<retval type64='B'/>
</method>
</class>
<class name='NSComparisonPredicate'>
<method selector='initWithLeftExpression:rightExpression:customSelector:'>
<arg index='2' sel_of_type64='B24@0:8@16'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:customSelector:'>
<arg index='2' sel_of_type64='B24@0:8@16'/>
</method>
</class>
<class name='NSCondition'>
<method selector='waitUntilDate:'>
<retval type64='B'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='lockBeforeDate:'>
<retval type64='B'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<retval type64='B'/>
</method>
<method selector='tryLock'>
<retval type64='B'/>
</method>
<method selector='tryLockWhenCondition:'>
<retval type64='B'/>
</method>
</class>
<class name='NSConnection'>
<method selector='independentConversationQueueing'>
<retval type64='B'/>
</method>
<method selector='isValid'>
<retval type64='B'/>
</method>
<method selector='multipleThreadsEnabled'>
<retval type64='B'/>
</method>
<method selector='registerName:'>
<retval type64='B'/>
</method>
<method selector='registerName:withNameServer:'>
<retval type64='B'/>
</method>
<method selector='setIndependentConversationQueueing:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSData'>
<method class_method='true' selector='dataWithBytes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='enumerateByteRangesUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='^v'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getBytes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
</method>
<method selector='initWithBytes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithBytesNoCopy:length:deallocator:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='^v'/>
<arg type64='Q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithContentsOfFile:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='isEqualToData:'>
<retval type64='B'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToFile:options:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:options:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSDate'>
<method selector='isEqualToDate:'>
<retval type64='B'/>
</method>
</class>
<class name='NSDateComponents'>
<method selector='isLeapMonth'>
<retval type64='B'/>
</method>
<method selector='isValidDate'>
<retval type64='B'/>
</method>
<method selector='isValidDateInCalendar:'>
<retval type64='B'/>
</method>
<method selector='setLeapMonth:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSDateComponentsFormatter'>
<method selector='allowsFractionalUnits'>
<retval type64='B'/>
</method>
<method selector='collapsesLargestUnit'>
<retval type64='B'/>
</method>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='includesApproximationPhrase'>
<retval type64='B'/>
</method>
<method selector='includesTimeRemainingPhrase'>
<retval type64='B'/>
</method>
<method selector='setAllowsFractionalUnits:'>
<arg index='0' type64='B'/>
</method>
<method selector='setCollapsesLargestUnit:'>
<arg index='0' type64='B'/>
</method>
<method selector='setIncludesApproximationPhrase:'>
<arg index='0' type64='B'/>
</method>
<method selector='setIncludesTimeRemainingPhrase:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='allowsNaturalLanguage'>
<retval type64='B'/>
</method>
<method selector='doesRelativeDateFormatting'>
<retval type64='B'/>
</method>
<method selector='generatesCalendarDates'>
<retval type64='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='N'/>
<arg index='3' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='initWithDateFormat:allowNaturalLanguage:'>
<arg index='1' type64='B'/>
</method>
<method selector='isLenient'>
<retval type64='B'/>
</method>
<method selector='setDoesRelativeDateFormatting:'>
<arg index='0' type64='B'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg index='0' type64='B'/>
</method>
<method selector='setLenient:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSDateInterval'>
<method selector='containsDate:'>
<retval type64='B'/>
</method>
<method selector='intersectsDateInterval:'>
<retval type64='B'/>
</method>
<method selector='isEqualToDateInterval:'>
<retval type64='B'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method class_method='true' selector='decimalNumberWithDecimal:'>
<arg index='0' type64='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
<arg index='2' type64='B'/>
</method>
<method selector='decimalValue'>
<retval type64='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='initWithDecimal:'>
<arg index='0' type64='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg index='2' type64='B'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg index='2' type64='B'/>
<arg index='3' type64='B'/>
<arg index='4' type64='B'/>
<arg index='5' type64='B'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg index='2' type64='B'/>
<arg index='3' type64='B'/>
<arg index='4' type64='B'/>
<arg index='5' type64='B'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg index='0' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:count:'>
<arg c_array_length_in_arg='2' index='0' type_modifier='n'/>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method selector='enumerateKeysAndObjectsUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateKeysAndObjectsWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='fileExtensionHidden'>
<retval type64='B'/>
</method>
<method selector='fileIsAppendOnly'>
<retval type64='B'/>
</method>
<method selector='fileIsImmutable'>
<retval type64='B'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithObjects:forKeys:count:'>
<arg c_array_length_in_arg='2' index='0' type_modifier='n'/>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method selector='isEqualToDictionary:'>
<retval type64='B'/>
</method>
<method selector='keysOfEntriesPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='keysOfEntriesWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='keysSortedByValueUsingComparator:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='keysSortedByValueUsingSelector:'>
<arg index='0' sel_of_type64='q24@0:8@16'/>
</method>
<method selector='keysSortedByValueWithOptions:usingComparator:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='writeToFile:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:error:'>
<retval type64='B'/>
</method>
</class>
<class name='NSDirectoryEnumerator'>
<method selector='isEnumeratingDirectoryPostOrder'>
<retval type64='B'/>
</method>
</class>
<class name='NSDistantObject'>
<method selector='setProtocolForProxy:'>
<arg index='0' type_modifier='n'/>
</method>
</class>
<class name='NSDistributedLock'>
<method selector='tryLock'>
<retval type64='B'/>
</method>
</class>
<class name='NSDistributedNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='addObserver:selector:name:object:suspensionBehavior:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='postNotificationName:object:userInfo:deliverImmediately:'>
<arg index='3' type64='B'/>
</method>
<method selector='setSuspended:'>
<arg index='0' type64='B'/>
</method>
<method selector='suspended'>
<retval type64='B'/>
</method>
</class>
<class name='NSEnergyFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isForFoodEnergyUse'>
<retval type64='B'/>
</method>
<method selector='setForFoodEnergyUse:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSError'>
<method class_method='true' selector='setUserInfoValueProviderForDomain:provider:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='@'/>
</arg>
</method>
</class>
<class name='NSException'>
<method class_method='true' selector='raise:format:' variadic='true'>
<arg index='1' printf_format='true'/>
</method>
</class>
<class name='NSExpression'>
<method class_method='true' selector='expressionForBlock:arguments:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='@'/>
</arg>
</method>
</class>
<class name='NSExtensionContext'>
<method selector='completeRequestReturningItems:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='openURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='B'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSFileCoordinator'>
<method selector='coordinateAccessWithIntents:queue:byAccessor:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='coordinateReadingItemAtURL:options:error:byAccessor:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg function_pointer='true' index='5' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='coordinateWritingItemAtURL:options:error:byAccessor:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg function_pointer='true' index='5' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'>
<arg function_pointer='true' index='5' type64='@?'>
<arg type64='@?'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSFileHandle'>
<method selector='closeAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='getOffset:error:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg index='1' type64='B'/>
</method>
<method selector='readDataToEndOfFileAndReturnError:'>
<arg index='0' type_modifier='o'/>
</method>
<method selector='readDataUpToLength:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='seekToEndReturningOffset:error:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='seekToOffset:error:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='synchronizeAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='truncateAtOffset:error:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='writeData:error:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSFileManager'>
<method selector='URLForDirectory:inDomain:appropriateForURL:create:error:'>
<arg index='3' type64='B'/>
</method>
<method selector='attributesOfFileSystemForPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='attributesOfItemAtPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<retval type64='B'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<retval type64='B'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<retval type64='B'/>
</method>
<method selector='contentsOfDirectoryAtPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='copyItemAtURL:toURL:error:'>
<retval type64='B'/>
</method>
<method selector='copyPath:toPath:handler:'>
<retval type64='B'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<retval type64='B'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg index='1' type64='B'/>
<arg index='3' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='createDirectoryAtURL:withIntermediateDirectories:attributes:error:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<retval type64='B'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<retval type64='B'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='createSymbolicLinkAtURL:withDestinationURL:error:'>
<retval type64='B'/>
</method>
<method selector='destinationOfSymbolicLinkAtPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</arg>
</method>
<method selector='evictUbiquitousItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg index='1' type64='B'/>
</method>
<method selector='fileExistsAtPath:'>
<retval type64='B'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg index='1' type64='^B' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='getFileProviderServicesForItemAtURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getRelationship:ofDirectory:inDomain:toItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='getRelationship:ofDirectoryAtURL:toItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='isDeletableFileAtPath:'>
<retval type64='B'/>
</method>
<method selector='isExecutableFileAtPath:'>
<retval type64='B'/>
</method>
<method selector='isReadableFileAtPath:'>
<retval type64='B'/>
</method>
<method selector='isUbiquitousItemAtURL:'>
<retval type64='B'/>
</method>
<method selector='isWritableFileAtPath:'>
<retval type64='B'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='linkItemAtURL:toURL:error:'>
<retval type64='B'/>
</method>
<method selector='linkPath:toPath:handler:'>
<retval type64='B'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='moveItemAtURL:toURL:error:'>
<retval type64='B'/>
</method>
<method selector='movePath:toPath:handler:'>
<retval type64='B'/>
</method>
<method selector='removeFileAtPath:handler:'>
<retval type64='B'/>
</method>
<method selector='removeItemAtPath:error:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='removeItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'>
<retval type64='B'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='setUbiquitous:itemAtURL:destinationURL:error:'>
<arg index='0' type64='B'/>
<retval type64='B'/>
</method>
<method selector='startDownloadingUbiquitousItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='stringWithFileSystemRepresentation:length:'>
<arg c_array_of_fixed_length='1' index='0' type_modifier='n'/>
</method>
<method selector='subpathsOfDirectoryAtPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='trashItemAtURL:resultingItemURL:error:'>
<retval type64='B'/>
</method>
<method selector='unmountVolumeAtURL:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSFileProviderService'>
<method selector='getFileProviderConnectionWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSFileVersion'>
<method class_method='true' selector='getNonlocalVersionsOfItemAtURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='hasLocalContents'>
<retval type64='B'/>
</method>
<method selector='hasThumbnail'>
<retval type64='B'/>
</method>
<method selector='isConflict'>
<retval type64='B'/>
</method>
<method selector='isDiscardable'>
<retval type64='B'/>
</method>
<method selector='isResolved'>
<retval type64='B'/>
</method>
<method selector='removeAndReturnError:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='removeOtherVersionsOfItemAtURL:error:'>
<retval type64='B'/>
</method>
<method selector='setDiscardable:'>
<arg index='0' type64='B'/>
</method>
<method selector='setResolved:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='isDirectory'>
<retval type64='B'/>
</method>
<method selector='isRegularFile'>
<retval type64='B'/>
</method>
<method selector='isSymbolicLink'>
<retval type64='B'/>
</method>
<method selector='matchesContentsOfURL:'>
<retval type64='B'/>
</method>
<method selector='needsToBeUpdatedFromPath:'>
<retval type64='B'/>
</method>
<method selector='readFromURL:options:error:'>
<retval type64='B'/>
</method>
<method selector='updateFromPath:'>
<retval type64='B'/>
</method>
<method selector='writeToFile:atomically:updateFilenames:'>
<arg index='1' type64='B'/>
<arg index='2' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:options:originalContentsURL:error:'>
<retval type64='B'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='4' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSGarbageCollector'>
<method selector='disableCollectorForPointer:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='enableCollectorForPointer:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='isCollecting'>
<retval type64='B'/>
</method>
<method selector='isEnabled'>
<retval type64='B'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='isHTTPOnly'>
<retval type64='B'/>
</method>
<method selector='isSecure'>
<retval type64='B'/>
</method>
<method selector='isSessionOnly'>
<retval type64='B'/>
</method>
</class>
<class name='NSHTTPCookieStorage'>
<method selector='getCookiesForTask:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSHashTable'>
<method selector='containsObject:'>
<retval type64='B'/>
</method>
<method selector='intersectsHashTable:'>
<retval type64='B'/>
</method>
<method selector='isEqualToHashTable:'>
<retval type64='B'/>
</method>
<method selector='isSubsetOfHashTable:'>
<retval type64='B'/>
</method>
</class>
<class name='NSHost'>
<method selector='isEqualToHost:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='isHostCacheEnabled'>
<retval type64='B'/>
</method>
<method class_method='true' selector='setHostCacheEnabled:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathWithIndexes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithIndexes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<retval type64='B'/>
</method>
<method selector='containsIndexes:'>
<retval type64='B'/>
</method>
<method selector='containsIndexesInRange:'>
<retval type64='B'/>
</method>
<method selector='enumerateIndexesInRange:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateIndexesUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateIndexesWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateRangesInRange:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateRangesUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateRangesWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getIndexes:maxCount:inIndexRange:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
<arg index='2' type_modifier='N'/>
</method>
<method selector='indexInRange:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesInRange:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='intersectsIndexesInRange:'>
<retval type64='B'/>
</method>
<method selector='isEqualToIndexSet:'>
<retval type64='B'/>
</method>
</class>
<class name='NSInflectionRule'>
<method class_method='true' selector='canInflectLanguage:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='canInflectPreferredLocalization'>
<retval type64='B'/>
</method>
<method selector='canInflectPreferredLocalization'>
<retval type64='B'/>
</method>
</class>
<class name='NSInputStream'>
<method selector='hasBytesAvailable'>
<retval type64='B'/>
</method>
<method selector='read:maxLength:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval type64='B'/>
</method>
<method selector='setArgument:atIndex:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='setReturnValue:'>
<arg index='0' type_modifier='n'/>
</method>
</class>
<class name='NSInvocationOperation'>
<method selector='initWithTarget:selector:object:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
</class>
<class name='NSItemProvider'>
<method selector='canLoadObjectOfClass:'>
<retval type64='B'/>
</method>
<method selector='hasItemConformingToTypeIdentifier:'>
<retval type64='B'/>
</method>
<method selector='hasRepresentationConformingToTypeIdentifier:fileOptions:'>
<retval type64='B'/>
</method>
<method selector='loadDataRepresentationForTypeIdentifier:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='loadFileRepresentationForTypeIdentifier:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='B'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='loadItemForTypeIdentifier:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='loadObjectOfClass:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='loadPreviewImageWithOptions:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='registerDataRepresentationForTypeIdentifier:visibility:loadHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@?'/>
<retval type64='@'/>
</arg>
</method>
<method selector='registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@?'/>
<retval type64='@'/>
</arg>
</method>
<method selector='registerItemForTypeIdentifier:loadHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@?'/>
<arg type64='#'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='registerObjectOfClass:visibility:loadHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@?'/>
<retval type64='@'/>
</arg>
</method>
</class>
<class name='NSJSONSerialization'>
<method class_method='true' selector='isValidJSONObject:'>
<retval type64='B'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:requiringSecureCoding:error:'>
<arg index='1' type64='B'/>
</method>
<method selector='encodeBool:forKey:'>
<arg index='0' type64='B'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initRequiringSecureCoding:'>
<arg index='0' type64='B'/>
</method>
<method selector='requiresSecureCoding'>
<retval type64='B'/>
</method>
<method selector='setRequiresSecureCoding:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method selector='containsValueForKey:'>
<retval type64='B'/>
</method>
<method selector='decodeBoolForKey:'>
<retval type64='B'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='requiresSecureCoding'>
<retval type64='B'/>
</method>
<method selector='setRequiresSecureCoding:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSLengthFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isForPersonHeightUse'>
<retval type64='B'/>
</method>
<method selector='setForPersonHeightUse:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSLinguisticTagger'>
<method class_method='true' selector='enumerateTagsForString:range:unit:scheme:options:orthography:usingBlock:'>
<arg function_pointer='true' index='6' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateTagsInRange:scheme:options:usingBlock:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateTagsInRange:unit:scheme:options:usingBlock:'>
<arg function_pointer='true' index='4' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSLocale'>
<method selector='usesMetricSystem'>
<retval type64='B'/>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<retval type64='B'/>
</method>
<method selector='tryLock'>
<retval type64='B'/>
</method>
</class>
<class name='NSMachBootstrapServer'>
<method selector='registerPort:name:'>
<retval type64='B'/>
</method>
</class>
<class name='NSMassFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isForPersonMassUse'>
<retval type64='B'/>
</method>
<method selector='setForPersonMassUse:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSMeasurement'>
<method selector='canBeConvertedToUnit:'>
<retval type64='B'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='enumerateResultsUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateResultsWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='isGathering'>
<retval type64='B'/>
</method>
<method selector='isStarted'>
<retval type64='B'/>
</method>
<method selector='isStopped'>
<retval type64='B'/>
</method>
<method selector='startQuery'>
<retval type64='B'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='isOneway'>
<retval type64='B'/>
</method>
</class>
<class name='NSMorphology'>
<method selector='isUnspecified'>
<retval type64='B'/>
</method>
<method selector='setCustomPronoun:forLanguage:error:'>
<retval type64='B'/>
</method>
</class>
<class name='NSMorphologyCustomPronoun'>
<method class_method='true' selector='isSupportedForLanguage:'>
<retval type64='B'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='removeObjectsFromIndices:numIndices:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='sortUsingComparator:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='sortUsingFunction:context:'>
<arg function_pointer='true' index='0' type64='^?' type_modifier='n'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='^v'/>
<retval type64='q'/>
</arg>
<arg index='1' type_modifier='n'/>
</method>
<method selector='sortUsingSelector:'>
<arg index='0' sel_of_type64='q24@0:8@16'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
</class>
<class name='NSMutableData'>
<method selector='appendBytes:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='compressUsingAlgorithm:error:'>
<retval type64='B'/>
</method>
<method selector='decompressUsingAlgorithm:error:'>
<retval type64='B'/>
</method>
<method selector='replaceBytesInRange:withBytes:length:'>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='sortRange:options:usingComparator:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='sortUsingComparator:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
</class>
<class name='NSMutableString'>
<method selector='appendFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='applyTransform:reverse:range:updatedRange:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='HTTPShouldHandleCookies'>
<retval type64='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type64='B'/>
</method>
<method selector='allowsCellularAccess'>
<retval type64='B'/>
</method>
<method selector='allowsConstrainedNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='allowsExpensiveNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='assumesHTTP3Capable'>
<retval type64='B'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAllowsConstrainedNetworkAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAllowsExpensiveNetworkAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAssumesHTTP3Capable:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSNetService'>
<method selector='getInputStream:outputStream:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='includesPeerToPeer'>
<retval type64='B'/>
</method>
<method selector='setIncludesPeerToPeer:'>
<arg index='0' type64='B'/>
</method>
<method selector='setTXTRecordData:'>
<retval type64='B'/>
</method>
</class>
<class name='NSNetServiceBrowser'>
<method selector='includesPeerToPeer'>
<retval type64='B'/>
</method>
<method selector='setIncludesPeerToPeer:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='addObserverForName:object:queue:usingBlock:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval type64='B'/>
</method>
<method selector='decimalValue'>
<retval type64='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='initWithBool:'>
<arg index='0' type64='B'/>
</method>
<method selector='isEqualToNumber:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='numberWithBool:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval type64='B'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval type64='B'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval type64='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='N'/>
<arg index='3' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='hasThousandSeparators'>
<retval type64='B'/>
</method>
<method selector='isLenient'>
<retval type64='B'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval type64='B'/>
</method>
<method selector='localizesFormat'>
<retval type64='B'/>
</method>
<method selector='setAllowsFloats:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg index='0' type64='B'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHasThousandSeparators:'>
<arg index='0' type64='B'/>
</method>
<method selector='setLenient:'>
<arg index='0' type64='B'/>
</method>
<method selector='setLocalizesFormat:'>
<arg index='0' type64='B'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg index='0' type64='B'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg index='0' type64='B'/>
</method>
<method selector='usesGroupingSeparator'>
<retval type64='B'/>
</method>
<method selector='usesSignificantDigits'>
<retval type64='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='URLSession:dataTask:didReceiveResponse:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:dataTask:willCacheResponse:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:didReceiveChallenge:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='q'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:task:didReceiveChallenge:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='q'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:task:needNewBodyStream:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:task:willBeginDelayedRequest:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='q'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:'>
<arg function_pointer='true' index='4' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='accessInstanceVariablesDirectly'>
<retval type64='B'/>
</method>
<method selector='accessInstanceVariablesDirectly'>
<retval type64='B'/>
</method>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='3' type_modifier='n'/>
</method>
<method selector='allowsWeakReference'>
<retval type64='B'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<retval type64='B'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg index='3' sel_of_type64='v28@0:8B16^v20'/>
<arg index='4' type_modifier='n'/>
</method>
<method selector='authenticateComponents:withData:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
<retval type64='B'/>
</method>
<method selector='beginContentAccess'>
<retval type64='B'/>
</method>
<method class_method='true' selector='conformsToProtocol:'>
<retval type64='B'/>
</method>
<method selector='conformsToProtocol:'>
<retval type64='B'/>
</method>
<method selector='connection:canAuthenticateAgainstProtectionSpace:'>
<retval type64='B'/>
</method>
<method selector='connection:handleRequest:'>
<retval type64='B'/>
</method>
<method selector='connection:shouldMakeNewConnection:'>
<retval type64='B'/>
</method>
<method selector='connectionShouldUseCredentialStorage:'>
<retval type64='B'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg index='0' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' type_modifier='n'/>
<arg c_array_length_in_arg='2' index='1' type_modifier='n'/>
</method>
<method selector='doesContain:'>
<retval type64='B'/>
</method>
<method selector='download:canAuthenticateAgainstProtectionSpace:'>
<retval type64='B'/>
</method>
<method selector='download:shouldDecodeSourceDataOfMIMEType:'>
<retval type64='B'/>
</method>
<method selector='downloadShouldUseCredentialStorage:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<retval type64='B'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:'>
<retval type64='B'/>
</method>
<method selector='handleMachMessage:'>
<arg index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='instancesRespondToSelector:'>
<retval type64='B'/>
</method>
<method selector='isCaseInsensitiveLike:'>
<retval type64='B'/>
</method>
<method selector='isContentDiscarded'>
<retval type64='B'/>
</method>
<method selector='isEqual:'>
<retval type64='B'/>
</method>
<method selector='isEqualTo:'>
<retval type64='B'/>
</method>
<method selector='isGreaterThan:'>
<retval type64='B'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<retval type64='B'/>
</method>
<method selector='isKindOfClass:'>
<retval type64='B'/>
</method>
<method selector='isLessThan:'>
<retval type64='B'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<retval type64='B'/>
</method>
<method selector='isLike:'>
<retval type64='B'/>
</method>
<method selector='isMemberOfClass:'>
<retval type64='B'/>
</method>
<method selector='isNotEqualTo:'>
<retval type64='B'/>
</method>
<method selector='isProxy'>
<retval type64='B'/>
</method>
<method class_method='true' selector='isSubclassOfClass:'>
<retval type64='B'/>
</method>
<method selector='listener:shouldAcceptNewConnection:'>
<retval type64='B'/>
</method>
<method selector='loadDataWithTypeIdentifier:forItemProviderCompletionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='makeNewConnection:sender:'>
<retval type64='B'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg index='2' type64='B'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg index='2' type64='B'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg index='2' type64='B'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg index='2' type64='B'/>
</method>
<method selector='observeValueForKeyPath:ofObject:change:context:'>
<arg index='3' type_modifier='n'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg index='3' type64='B'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg index='3' type64='B'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg index='2' type64='B'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg index='2' type64='B'/>
</method>
<method selector='relinquishPresentedItemToReader:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@?'/>
<retval type64='v'/>
</arg>
</method>
<method selector='relinquishPresentedItemToWriter:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@?'/>
<retval type64='v'/>
</arg>
</method>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='resolveClassMethod:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='resolveInstanceMethod:'>
<retval type64='B'/>
</method>
<method selector='respondsToSelector:'>
<retval type64='B'/>
</method>
<method selector='retainWeakReference'>
<retval type64='B'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='scriptingBeginsWith:'>
<retval type64='B'/>
</method>
<method selector='scriptingContains:'>
<retval type64='B'/>
</method>
<method selector='scriptingEndsWith:'>
<retval type64='B'/>
</method>
<method selector='scriptingIsEqualTo:'>
<retval type64='B'/>
</method>
<method selector='scriptingIsGreaterThan:'>
<retval type64='B'/>
</method>
<method selector='scriptingIsGreaterThanOrEqualTo:'>
<retval type64='B'/>
</method>
<method selector='scriptingIsLessThan:'>
<retval type64='B'/>
</method>
<method selector='scriptingIsLessThanOrEqualTo:'>
<retval type64='B'/>
</method>
<method selector='setObservationInfo:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='spellServer:checkGrammarInString:language:details:'>
<arg index='3' type_modifier='o'/>
</method>
<method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg index='3' type_modifier='o'/>
<arg index='4' type64='B'/>
</method>
<method class_method='true' selector='supportsSecureCoding'>
<retval type64='B'/>
</method>
<method selector='supportsSecureCoding'>
<retval type64='B'/>
</method>
<method selector='synchronousRemoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='useStoredAccessor'>
<retval type64='B'/>
</method>
<method selector='userNotificationCenter:shouldPresentNotification:'>
<retval type64='B'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSOperation'>
<method selector='isAsynchronous'>
<retval type64='B'/>
</method>
<method selector='isCancelled'>
<retval type64='B'/>
</method>
<method selector='isConcurrent'>
<retval type64='B'/>
</method>
<method selector='isExecuting'>
<retval type64='B'/>
</method>
<method selector='isFinished'>
<retval type64='B'/>
</method>
<method selector='isReady'>
<retval type64='B'/>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addBarrierBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='addOperationWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='addOperations:waitUntilFinished:'>
<arg index='1' type64='B'/>
</method>
<method selector='isSuspended'>
<retval type64='B'/>
</method>
<method selector='setSuspended:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSOrderedCollectionDifference'>
<method selector='differenceByTransformingChangesWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='@'/>
</arg>
</method>
<method selector='hasChanges'>
<retval type64='B'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='containsObject:'>
<retval type64='B'/>
</method>
<method selector='differenceFromOrderedSet:withOptions:usingEquivalenceTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</arg>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='initWithArray:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithArray:range:copyItems:'>
<arg index='2' type64='B'/>
</method>
<method selector='initWithOrderedSet:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithOrderedSet:range:copyItems:'>
<arg index='2' type64='B'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='intersectsOrderedSet:'>
<retval type64='B'/>
</method>
<method selector='intersectsSet:'>
<retval type64='B'/>
</method>
<method selector='isEqualToOrderedSet:'>
<retval type64='B'/>
</method>
<method selector='isSubsetOfOrderedSet:'>
<retval type64='B'/>
</method>
<method selector='isSubsetOfSet:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='orderedSetWithArray:range:copyItems:'>
<arg index='2' type64='B'/>
</method>
<method class_method='true' selector='orderedSetWithOrderedSet:range:copyItems:'>
<arg index='2' type64='B'/>
</method>
<method class_method='true' selector='orderedSetWithSet:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval type64='B'/>
</method>
<method selector='initToBuffer:capacity:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithURL:append:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='outputStreamToBuffer:capacity:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
</method>
<method class_method='true' selector='outputStreamToFileAtPath:append:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='outputStreamWithURL:append:'>
<arg index='1' type64='B'/>
</method>
<method selector='write:maxLength:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
</class>
<class name='NSPersonNameComponentsFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='isPhonetic'>
<retval type64='B'/>
</method>
<method selector='setPhonetic:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSPointerArray'>
<method selector='addPointer:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='insertPointer:atIndex:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='replacePointerAtIndex:withPointer:'>
<arg index='1' type_modifier='n'/>
</method>
</class>
<class name='NSPointerFunctions'>
<method selector='setAcquireFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='^v'/>
</arg>
</method>
<method selector='setDescriptionFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='@'/>
</arg>
</method>
<method selector='setHashFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='Q'/>
</arg>
</method>
<method selector='setIsEqualFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='B'/>
</arg>
</method>
<method selector='setRelinquishFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='v'/>
</arg>
</method>
<method selector='setSizeFunction:'>
<arg function_pointer='true' index='0' type64='^?'>
<retval type64='Q'/>
</arg>
</method>
<method selector='setUsesStrongWriteBarrier:'>
<arg index='0' type64='B'/>
</method>
<method selector='setUsesWeakReadAndWriteBarriers:'>
<arg index='0' type64='B'/>
</method>
<method selector='usesStrongWriteBarrier'>
<retval type64='B'/>
</method>
<method selector='usesWeakReadAndWriteBarriers'>
<retval type64='B'/>
</method>
</class>
<class name='NSPort'>
<method selector='isValid'>
<retval type64='B'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<retval type64='B'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<retval type64='B'/>
</method>
</class>
<class name='NSPortCoder'>
<method selector='isBycopy'>
<retval type64='B'/>
</method>
<method selector='isByref'>
<retval type64='B'/>
</method>
</class>
<class name='NSPortMessage'>
<method selector='sendBeforeDate:'>
<retval type64='B'/>
</method>
</class>
<class name='NSPortNameServer'>
<method selector='registerPort:name:'>
<retval type64='B'/>
</method>
<method selector='removePortForName:'>
<retval type64='B'/>
</method>
</class>
<class name='NSPositionalSpecifier'>
<method selector='insertionReplaces'>
<retval type64='B'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<retval type64='B'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='predicateWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='B'/>
</arg>
</method>
<method class_method='true' selector='predicateWithFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method class_method='true' selector='predicateWithValue:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSPresentationIntent'>
<method selector='isEquivalentToPresentationIntent:'>
<retval type64='B'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='automaticTerminationSupportEnabled'>
<retval type64='B'/>
</method>
<method selector='isLowPowerModeEnabled'>
<retval type64='B'/>
</method>
<method selector='isMacCatalystApp'>
<retval type64='B'/>
</method>
<method selector='isOperatingSystemAtLeastVersion:'>
<arg index='0' type64='{_NSOperatingSystemVersion=qqq}'/>
<retval type64='B'/>
</method>
<method selector='isiOSAppOnMac'>
<retval type64='B'/>
</method>
<method selector='operatingSystemVersion'>
<retval type64='{_NSOperatingSystemVersion=qqq}'/>
</method>
<method selector='performActivityWithOptions:reason:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='performExpiringActivityWithReason:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='setAutomaticTerminationSupportEnabled:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSProgress'>
<method selector='isCancellable'>
<retval type64='B'/>
</method>
<method selector='isCancelled'>
<retval type64='B'/>
</method>
<method selector='isFinished'>
<retval type64='B'/>
</method>
<method selector='isIndeterminate'>
<retval type64='B'/>
</method>
<method selector='isOld'>
<retval type64='B'/>
</method>
<method selector='isPausable'>
<retval type64='B'/>
</method>
<method selector='isPaused'>
<retval type64='B'/>
</method>
<method selector='performAsCurrentWithPendingUnitCount:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='setCancellable:'>
<arg index='0' type64='B'/>
</method>
<method selector='setPausable:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='dataWithPropertyList:format:options:error:'>
<arg index='3' type_modifier='o'/>
</method>
<method class_method='true' selector='propertyList:isValidForFormat:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method class_method='true' selector='propertyListWithData:options:format:error:'>
<arg index='3' type_modifier='o'/>
</method>
<method class_method='true' selector='propertyListWithStream:options:format:error:'>
<arg index='3' type_modifier='o'/>
</method>
<method class_method='true' selector='writePropertyList:toStream:format:options:error:'>
<arg index='4' type_modifier='o'/>
</method>
</class>
<class name='NSProtocolChecker'>
<method selector='initWithTarget:protocol:'>
<arg index='1' type_modifier='n'/>
</method>
<method class_method='true' selector='protocolCheckerWithTarget:protocol:'>
<arg index='1' type_modifier='n'/>
</method>
</class>
<class name='NSProxy'>
<method class_method='true' selector='allocWithZone:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='allowsWeakReference'>
<retval type64='B'/>
</method>
<method class_method='true' selector='respondsToSelector:'>
<retval type64='B'/>
</method>
<method selector='retainWeakReference'>
<retval type64='B'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<retval type64='B'/>
</method>
<method selector='tryLock'>
<retval type64='B'/>
</method>
</class>
<class name='NSRegularExpression'>
<method selector='enumerateMatchesInString:options:range:usingBlock:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSRunLoop'>
<method selector='performBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='performInModes:block:'>
<arg function_pointer='true' index='1' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='performSelector:target:argument:order:modes:'>
<arg index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='runMode:beforeDate:'>
<retval type64='B'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval type64='B'/>
</method>
<method selector='isAtEnd'>
<retval type64='B'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanDecimal:'>
<arg index='0' type64='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanDouble:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanFloat:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanHexDouble:'>
<retval type64='B'/>
</method>
<method selector='scanHexFloat:'>
<retval type64='B'/>
</method>
<method selector='scanHexInt:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanHexLongLong:'>
<retval type64='B'/>
</method>
<method selector='scanInt:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanInteger:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanLongLong:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanString:intoString:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanUnsignedLongLong:'>
<retval type64='B'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='scanUpToString:intoString:'>
<arg index='1' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='setCaseSensitive:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSScriptClassDescription'>
<method selector='hasOrderedToManyRelationshipForKey:'>
<retval type64='B'/>
</method>
<method selector='hasPropertyForKey:'>
<retval type64='B'/>
</method>
<method selector='hasReadablePropertyForKey:'>
<retval type64='B'/>
</method>
<method selector='hasWritablePropertyForKey:'>
<retval type64='B'/>
</method>
<method selector='isLocationRequiredToCreateForKey:'>
<retval type64='B'/>
</method>
<method selector='isReadOnlyKey:'>
<retval type64='B'/>
</method>
<method selector='matchesAppleEventCode:'>
<retval type64='B'/>
</method>
<method selector='supportsCommand:'>
<retval type64='B'/>
</method>
</class>
<class name='NSScriptCoercionHandler'>
<method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
<arg index='1' sel_of_type64='@32@0:8@16#24'/>
</method>
</class>
<class name='NSScriptCommand'>
<method selector='isWellFormed'>
<retval type64='B'/>
</method>
</class>
<class name='NSScriptCommandDescription'>
<method selector='createCommandInstanceWithZone:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='isOptionalArgumentWithName:'>
<retval type64='B'/>
</method>
</class>
<class name='NSScriptObjectSpecifier'>
<method selector='containerIsObjectBeingTested'>
<retval type64='B'/>
</method>
<method selector='containerIsRangeContainerObject'>
<retval type64='B'/>
</method>
<method selector='indicesOfObjectsByEvaluatingWithContainer:count:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='setContainerIsObjectBeingTested:'>
<arg index='0' type64='B'/>
</method>
<method selector='setContainerIsRangeContainerObject:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSScriptWhoseTest'>
<method selector='isTrue'>
<retval type64='B'/>
</method>
</class>
<class name='NSSet'>
<method selector='containsObject:'>
<retval type64='B'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithObjects:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg index='1' type64='B'/>
</method>
<method selector='intersectsSet:'>
<retval type64='B'/>
</method>
<method selector='isEqualToSet:'>
<retval type64='B'/>
</method>
<method selector='isSubsetOfSet:'>
<retval type64='B'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' sel_of_type64='v16@0:8'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='objectsPassingTest:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method selector='objectsWithOptions:passingTest:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='B'/>
</arg>
</method>
<method class_method='true' selector='setWithObjects:count:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
</class>
<class name='NSSocketPortNameServer'>
<method selector='registerPort:name:'>
<retval type64='B'/>
</method>
<method selector='registerPort:name:nameServerPortNumber:'>
<retval type64='B'/>
</method>
<method selector='removePortForName:'>
<retval type64='B'/>
</method>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval type64='B'/>
</method>
<method selector='initWithKey:ascending:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithKey:ascending:comparator:'>
<arg index='1' type64='B'/>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg index='1' type64='B'/>
<arg index='2' sel_of_type64='q24@0:8@16'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:comparator:'>
<arg index='1' type64='B'/>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='q'/>
</arg>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:selector:'>
<arg index='1' type64='B'/>
</method>
</class>
<class name='NSSpellServer'>
<method selector='isWordInUserDictionaries:caseSensitive:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='registerLanguage:byVendor:'>
<retval type64='B'/>
</method>
</class>
<class name='NSStream'>
<method class_method='true' selector='getStreamsToHost:port:inputStream:outputStream:'>
<arg index='2' type_modifier='o'/>
<arg index='3' type_modifier='o'/>
</method>
<method selector='setProperty:forKey:'>
<retval type64='B'/>
</method>
</class>
<class name='NSString'>
<method selector='boolValue'>
<retval type64='B'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<retval type64='B'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type64='B'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='containsString:'>
<retval type64='B'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg index='1' type64='B'/>
</method>
<method selector='enumerateLinesUsingBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'>
<arg function_pointer='true' index='4' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='enumerateSubstringsInRange:options:usingBlock:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='{_NSRange=QQ}'/>
<arg type64='^B'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<arg index='6' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='getLineStart:end:contentsEnd:forRange:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='getParagraphStart:end:contentsEnd:forRange:'>
<arg index='0' type_modifier='o'/>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='hasPrefix:'>
<retval type64='B'/>
</method>
<method selector='hasSuffix:'>
<retval type64='B'/>
</method>
<method selector='initWithBytes:length:encoding:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithBytesNoCopy:length:encoding:deallocator:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='^v'/>
<arg type64='Q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithCString:length:'>
<arg c_array_of_fixed_length='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg index='2' type64='B'/>
</method>
<method selector='initWithCharacters:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method selector='initWithCharactersNoCopy:length:deallocator:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='^S'/>
<arg type64='Q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithContentsOfFile:encoding:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithContentsOfFile:usedEncoding:error:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithContentsOfURL:encoding:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithContentsOfURL:usedEncoding:error:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='initWithFormat:locale:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='isAbsolutePath'>
<retval type64='B'/>
</method>
<method selector='isEqualToString:'>
<retval type64='B'/>
</method>
<method selector='localizedCaseInsensitiveContainsString:'>
<retval type64='B'/>
</method>
<method selector='localizedStandardContainsString:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='localizedStringWithFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='stringByAppendingFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='stringByApplyingTransform:reverse:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:'>
<arg index='3' type64='^B'/>
</method>
<method class_method='true' selector='stringWithCString:length:'>
<arg c_array_of_fixed_length='1' index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='stringWithCharacters:length:'>
<arg c_array_length_in_arg='1' index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:encoding:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:usedEncoding:error:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:encoding:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:usedEncoding:error:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
<method class_method='true' selector='stringWithFormat:' variadic='true'>
<arg index='0' printf_format='true'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg index='1' type64='B'/>
<arg index='3' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='1' type64='B'/>
<retval type64='B'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg index='1' type64='B'/>
<arg index='3' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSTask'>
<method selector='isRunning'>
<retval type64='B'/>
</method>
<method selector='launchAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
<method class_method='true' selector='launchedTaskWithExecutableURL:arguments:error:terminationHandler:'>
<arg index='2' type_modifier='o'/>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='resume'>
<retval type64='B'/>
</method>
<method selector='suspend'>
<retval type64='B'/>
</method>
</class>
<class name='NSThread'>
<method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
<arg index='0' sel_of_type64='v24@0:8@16'/>
</method>
<method class_method='true' selector='detachNewThreadWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='isCancelled'>
<retval type64='B'/>
</method>
<method selector='isExecuting'>
<retval type64='B'/>
</method>
<method selector='isFinished'>
<retval type64='B'/>
</method>
<method class_method='true' selector='isMainThread'>
<retval type64='B'/>
</method>
<method selector='isMainThread'>
<retval type64='B'/>
</method>
<method class_method='true' selector='isMultiThreaded'>
<retval type64='B'/>
</method>
<method class_method='true' selector='setThreadPriority:'>
<retval type64='B'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='isDaylightSavingTime'>
<retval type64='B'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<retval type64='B'/>
</method>
<method selector='isEqualToTimeZone:'>
<retval type64='B'/>
</method>
</class>
<class name='NSTimer'>
<method selector='initWithFireDate:interval:repeats:block:'>
<arg index='2' type64='B'/>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg index='3' sel_of_type64='v24@0:8@16'/>
<arg index='5' type64='B'/>
</method>
<method selector='isValid'>
<retval type64='B'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
<arg index='2' type64='B'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:repeats:block:'>
<arg index='1' type64='B'/>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg index='2' sel_of_type64='v24@0:8@16'/>
<arg index='4' type64='B'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
<arg index='2' type64='B'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:repeats:block:'>
<arg index='1' type64='B'/>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg index='2' sel_of_type64='v24@0:8@16'/>
<arg index='4' type64='B'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLByAppendingPathComponent:isDirectory:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg index='3' type64='^B'/>
</method>
<method selector='URLHandleUsingCache:'>
<arg index='0' type64='B'/>
</method>
<method selector='checkPromisedItemIsReachableAndReturnError:'>
<retval type64='B'/>
</method>
<method selector='checkResourceIsReachableAndReturnError:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:'>
<arg index='1' type64='B'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:relativeToURL:'>
<arg index='1' type64='B'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<retval type64='B'/>
</method>
<method selector='getPromisedItemResourceValue:forKey:error:'>
<retval type64='B'/>
</method>
<method selector='getResourceValue:forKey:error:'>
<arg index='0' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
<retval type64='B'/>
</method>
<method selector='hasDirectoryPath'>
<retval type64='B'/>
</method>
<method selector='initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg index='3' type64='^B'/>
</method>
<method selector='initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:'>
<arg index='1' type64='B'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg index='1' type64='B'/>
</method>
<method selector='initFileURLWithPath:isDirectory:relativeToURL:'>
<arg index='1' type64='B'/>
</method>
<method selector='isFileReferenceURL'>
<retval type64='B'/>
</method>
<method selector='isFileURL'>
<retval type64='B'/>
</method>
<method selector='loadResourceDataNotifyingClient:usingCache:'>
<arg index='1' type64='B'/>
</method>
<method selector='resourceDataUsingCache:'>
<arg index='0' type64='B'/>
</method>
<method selector='setProperty:forKey:'>
<retval type64='B'/>
</method>
<method selector='setResourceData:'>
<retval type64='B'/>
</method>
<method selector='setResourceValue:forKey:error:'>
<retval type64='B'/>
</method>
<method selector='setResourceValues:error:'>
<retval type64='B'/>
</method>
<method selector='startAccessingSecurityScopedResource'>
<retval type64='B'/>
</method>
<method class_method='true' selector='writeBookmarkData:toURL:options:error:'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLCache'>
<method selector='getCachedResponseForDataTask:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSURLComponents'>
<method class_method='true' selector='componentsWithURL:resolvingAgainstBaseURL:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithURL:resolvingAgainstBaseURL:'>
<arg index='1' type64='B'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='canHandleRequest:'>
<retval type64='B'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg index='2' type64='B'/>
</method>
<method class_method='true' selector='sendAsynchronousRequest:queue:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='sendSynchronousRequest:returningResponse:error:'>
<arg index='1' type_modifier='o'/>
<arg index='2' type_modifier='o'/>
</method>
</class>
<class name='NSURLCredential'>
<method selector='hasPassword'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLCredentialStorage'>
<method selector='getCredentialsForProtectionSpace:task:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getDefaultCredentialForProtectionSpace:task:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSURLDownload'>
<method class_method='true' selector='canResumeDownloadDecodedWithEncodingMIMEType:'>
<retval type64='B'/>
</method>
<method selector='deletesFileUponFailure'>
<retval type64='B'/>
</method>
<method selector='setDeletesFileUponFailure:'>
<arg index='0' type64='B'/>
</method>
<method selector='setDestination:allowOverwrite:'>
<arg index='1' type64='B'/>
</method>
</class>
<class name='NSURLHandle'>
<method class_method='true' selector='canInitWithURL:'>
<retval type64='B'/>
</method>
<method selector='didLoadBytes:loadComplete:'>
<arg index='1' type64='B'/>
</method>
<method selector='initWithURL:cached:'>
<arg index='1' type64='B'/>
</method>
<method selector='writeData:'>
<retval type64='B'/>
</method>
<method selector='writeProperty:forKey:'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='isProxy'>
<retval type64='B'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLProtocol'>
<method class_method='true' selector='canInitWithRequest:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='canInitWithTask:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='registerClass:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPShouldHandleCookies'>
<retval type64='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type64='B'/>
</method>
<method selector='allowsCellularAccess'>
<retval type64='B'/>
</method>
<method selector='allowsConstrainedNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='allowsExpensiveNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='assumesHTTP3Capable'>
<retval type64='B'/>
</method>
<method class_method='true' selector='supportsSecureCoding'>
<retval type64='B'/>
</method>
<method selector='supportsSecureCoding'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLSession'>
<method selector='dataTaskWithRequest:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='dataTaskWithURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='downloadTaskWithRequest:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='downloadTaskWithResumeData:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='downloadTaskWithURL:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='flushWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='getAllTasksWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='getTasksWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='resetWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='uploadTaskWithRequest:fromData:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='uploadTaskWithRequest:fromFile:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSURLSessionConfiguration'>
<method selector='HTTPShouldSetCookies'>
<retval type64='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type64='B'/>
</method>
<method selector='allowsCellularAccess'>
<retval type64='B'/>
</method>
<method selector='allowsConstrainedNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='allowsExpensiveNetworkAccess'>
<retval type64='B'/>
</method>
<method selector='isDiscretionary'>
<retval type64='B'/>
</method>
<method selector='sessionSendsLaunchEvents'>
<retval type64='B'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAllowsConstrainedNetworkAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAllowsExpensiveNetworkAccess:'>
<arg index='0' type64='B'/>
</method>
<method selector='setDiscretionary:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHTTPShouldSetCookies:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSessionSendsLaunchEvents:'>
<arg index='0' type64='B'/>
</method>
<method selector='setShouldUseExtendedBackgroundIdleMode:'>
<arg index='0' type64='B'/>
</method>
<method selector='setWaitsForConnectivity:'>
<arg index='0' type64='B'/>
</method>
<method selector='shouldUseExtendedBackgroundIdleMode'>
<retval type64='B'/>
</method>
<method selector='waitsForConnectivity'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLSessionDownloadTask'>
<method selector='cancelByProducingResumeData:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSURLSessionStreamTask'>
<method selector='readDataOfMinLength:maxLength:timeout:completionHandler:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='@'/>
<arg type64='B'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='writeData:timeout:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSURLSessionTask'>
<method selector='prefersIncrementalDelivery'>
<retval type64='B'/>
</method>
<method selector='setPrefersIncrementalDelivery:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSURLSessionTaskTransactionMetrics'>
<method selector='isCellular'>
<retval type64='B'/>
</method>
<method selector='isConstrained'>
<retval type64='B'/>
</method>
<method selector='isExpensive'>
<retval type64='B'/>
</method>
<method selector='isMultipath'>
<retval type64='B'/>
</method>
<method selector='isProxyConnection'>
<retval type64='B'/>
</method>
<method selector='isReusedConnection'>
<retval type64='B'/>
</method>
</class>
<class name='NSURLSessionWebSocketTask'>
<method selector='receiveMessageWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='sendMessage:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='sendPingWithPongReceiveHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSUbiquitousKeyValueStore'>
<method selector='boolForKey:'>
<retval type64='B'/>
</method>
<method selector='setBool:forKey:'>
<arg index='0' type64='B'/>
</method>
<method selector='synchronize'>
<retval type64='B'/>
</method>
</class>
<class name='NSUnarchiver'>
<method selector='isAtEnd'>
<retval type64='B'/>
</method>
<method selector='setObjectZone:'>
<arg index='0' type_modifier='n'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='canRedo'>
<retval type64='B'/>
</method>
<method selector='canUndo'>
<retval type64='B'/>
</method>
<method selector='groupsByEvent'>
<retval type64='B'/>
</method>
<method selector='isRedoing'>
<retval type64='B'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval type64='B'/>
</method>
<method selector='isUndoing'>
<retval type64='B'/>
</method>
<method selector='redoActionIsDiscardable'>
<retval type64='B'/>
</method>
<method selector='registerUndoWithTarget:handler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='registerUndoWithTarget:selector:object:'>
<arg index='1' sel_of_type64='v24@0:8@16'/>
</method>
<method selector='setActionIsDiscardable:'>
<arg index='0' type64='B'/>
</method>
<method selector='setGroupsByEvent:'>
<arg index='0' type64='B'/>
</method>
<method selector='undoActionIsDiscardable'>
<retval type64='B'/>
</method>
</class>
<class name='NSUserActivity'>
<method class_method='true' selector='deleteAllSavedUserActivitiesWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method class_method='true' selector='deleteSavedUserActivitiesWithPersistentIdentifiers:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='getContinuationStreamsWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='isEligibleForHandoff'>
<retval type64='B'/>
</method>
<method selector='isEligibleForPrediction'>
<retval type64='B'/>
</method>
<method selector='isEligibleForPublicIndexing'>
<retval type64='B'/>
</method>
<method selector='isEligibleForSearch'>
<retval type64='B'/>
</method>
<method selector='needsSave'>
<retval type64='B'/>
</method>
<method selector='setEligibleForHandoff:'>
<arg index='0' type64='B'/>
</method>
<method selector='setEligibleForPrediction:'>
<arg index='0' type64='B'/>
</method>
<method selector='setEligibleForPublicIndexing:'>
<arg index='0' type64='B'/>
</method>
<method selector='setEligibleForSearch:'>
<arg index='0' type64='B'/>
</method>
<method selector='setNeedsSave:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportsContinuationStreams:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportsContinuationStreams'>
<retval type64='B'/>
</method>
</class>
<class name='NSUserAppleScriptTask'>
<method selector='executeWithAppleEvent:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSUserAutomatorTask'>
<method selector='executeWithInput:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='boolForKey:'>
<retval type64='B'/>
</method>
<method selector='objectIsForcedForKey:'>
<retval type64='B'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<retval type64='B'/>
</method>
<method selector='setBool:forKey:'>
<arg index='0' type64='B'/>
</method>
<method selector='synchronize'>
<retval type64='B'/>
</method>
</class>
<class name='NSUserNotification'>
<method selector='hasActionButton'>
<retval type64='B'/>
</method>
<method selector='hasReplyButton'>
<retval type64='B'/>
</method>
<method selector='isPresented'>
<retval type64='B'/>
</method>
<method selector='isRemote'>
<retval type64='B'/>
</method>
<method selector='setHasActionButton:'>
<arg index='0' type64='B'/>
</method>
<method selector='setHasReplyButton:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSUserScriptTask'>
<method selector='executeWithCompletionHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSUserUnixTask'>
<method selector='executeWithArguments:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSValue'>
<method selector='initWithBytes:objCType:'>
<arg index='0' type_modifier='n'/>
</method>
<method selector='isEqualToValue:'>
<retval type64='B'/>
</method>
<method class_method='true' selector='value:withObjCType:'>
<arg index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='valueWithBytes:objCType:'>
<arg index='0' type_modifier='n'/>
</method>
<method class_method='true' selector='valueWithPointer:'>
<arg index='0' type_modifier='n'/>
</method>
</class>
<class name='NSValueTransformer'>
<method class_method='true' selector='allowsReverseTransformation'>
<retval type64='B'/>
</method>
</class>
<class name='NSXMLDTD'>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithData:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
</class>
<class name='NSXMLDTDNode'>
<method selector='isExternal'>
<retval type64='B'/>
</method>
</class>
<class name='NSXMLDocument'>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithData:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='initWithXMLString:options:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='isStandalone'>
<retval type64='B'/>
</method>
<method selector='objectByApplyingXSLT:arguments:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='objectByApplyingXSLTAtURL:arguments:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='objectByApplyingXSLTString:arguments:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='setStandalone:'>
<arg index='0' type64='B'/>
</method>
<method selector='validateAndReturnError:'>
<arg index='0' type_modifier='o'/>
<retval type64='B'/>
</method>
</class>
<class name='NSXMLElement'>
<method selector='initWithXMLString:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='normalizeAdjacentTextNodesPreservingCDATA:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='NSXMLNode'>
<method selector='canonicalXMLStringPreservingComments:'>
<arg index='0' type64='B'/>
</method>
<method selector='nodesForXPath:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='objectsForXQuery:constants:error:'>
<arg index='2' type_modifier='o'/>
</method>
<method selector='objectsForXQuery:error:'>
<arg index='1' type_modifier='o'/>
</method>
<method selector='setStringValue:resolvingEntities:'>
<arg index='1' type64='B'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='parse'>
<retval type64='B'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg index='0' type64='B'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg index='0' type64='B'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg index='0' type64='B'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval type64='B'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval type64='B'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval type64='B'/>
</method>
</class>
<class name='NSXPCConnection'>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='scheduleSendBarrierBlock:'>
<arg function_pointer='true' index='0' type64='@?'>
<retval type64='v'/>
</arg>
</method>
<method selector='synchronousRemoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
</class>
<class name='NSXPCInterface'>
<method selector='XPCTypeForSelector:argumentIndex:ofReply:'>
<arg index='2' type64='B'/>
</method>
<method selector='classesForSelector:argumentIndex:ofReply:'>
<arg index='2' type64='B'/>
</method>
<method selector='interfaceForSelector:argumentIndex:ofReply:'>
<arg index='2' type64='B'/>
</method>
<method selector='setClasses:forSelector:argumentIndex:ofReply:'>
<arg index='3' type64='B'/>
</method>
<method selector='setInterface:forSelector:argumentIndex:ofReply:'>
<arg index='3' type64='B'/>
</method>
<method selector='setXPCType:forSelector:argumentIndex:ofReply:'>
<arg index='3' type64='B'/>
</method>
</class>
<informal_protocol name='NSComparisonMethods'>
<method selector='doesContain:' type64='B24@0:8@16'/>
<method selector='isCaseInsensitiveLike:' type64='B24@0:8@16'/>
<method selector='isEqualTo:' type64='B24@0:8@16'/>
<method selector='isGreaterThan:' type64='B24@0:8@16'/>
<method selector='isGreaterThanOrEqualTo:' type64='B24@0:8@16'/>
<method selector='isLessThan:' type64='B24@0:8@16'/>
<method selector='isLessThanOrEqualTo:' type64='B24@0:8@16'/>
<method selector='isLike:' type64='B24@0:8@16'/>
<method selector='isNotEqualTo:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='NSConnectionDelegate'>
<method selector='authenticateComponents:withData:' type64='B32@0:8@16@24'/>
<method selector='connection:handleRequest:' type64='B32@0:8@16@24'/>
<method selector='connection:shouldMakeNewConnection:' type64='B32@0:8@16@24'/>
<method selector='makeNewConnection:sender:' type64='B32@0:8@16@24'/>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method selector='fileManager:shouldProceedAfterError:' type64='B32@0:8@16@24'/>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueCoding'>
<method class_method='true' selector='useStoredAccessor' type64='B16@0:8'/>
</informal_protocol>
<informal_protocol name='NSDiscardableContent'>
<method selector='beginContentAccess' type64='B16@0:8'/>
<method selector='isContentDiscarded' type64='B16@0:8'/>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method selector='attemptRecoveryFromError:optionIndex:' type64='B32@0:8@16Q24'/>
</informal_protocol>
<informal_protocol name='NSFileManagerDelegate'>
<method selector='fileManager:shouldCopyItemAtPath:toPath:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldCopyItemAtURL:toURL:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldLinkItemAtPath:toPath:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldLinkItemAtURL:toURL:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldMoveItemAtPath:toPath:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldMoveItemAtURL:toURL:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:' type64='B48@0:8@16@24@32@40'/>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:' type64='B40@0:8@16@24@32'/>
<method selector='fileManager:shouldRemoveItemAtPath:' type64='B32@0:8@16@24'/>
<method selector='fileManager:shouldRemoveItemAtURL:' type64='B32@0:8@16@24'/>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method class_method='true' selector='accessInstanceVariablesDirectly' type64='B16@0:8'/>
<method selector='accessInstanceVariablesDirectly' type64='TB,R'/>
<method selector='validateValue:forKey:error:' type64='B40@0:8N^@16@24o^@32'/>
<method selector='validateValue:forKeyPath:error:' type64='B40@0:8N^@16@24o^@32'/>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='NSObject'>
<method selector='conformsToProtocol:' type64='B24@0:8@16'/>
<method selector='isEqual:' type64='B24@0:8@16'/>
<method selector='isKindOfClass:' type64='B24@0:8#16'/>
<method selector='isMemberOfClass:' type64='B24@0:8#16'/>
<method selector='isProxy' type64='B16@0:8'/>
<method selector='respondsToSelector:' type64='B24@0:8:16'/>
</informal_protocol>
<informal_protocol name='NSScriptingComparisonMethods'>
<method selector='scriptingBeginsWith:' type64='B24@0:8@16'/>
<method selector='scriptingContains:' type64='B24@0:8@16'/>
<method selector='scriptingEndsWith:' type64='B24@0:8@16'/>
<method selector='scriptingIsEqualTo:' type64='B24@0:8@16'/>
<method selector='scriptingIsGreaterThan:' type64='B24@0:8@16'/>
<method selector='scriptingIsGreaterThanOrEqualTo:' type64='B24@0:8@16'/>
<method selector='scriptingIsLessThan:' type64='B24@0:8@16'/>
<method selector='scriptingIsLessThanOrEqualTo:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='NSSecureCoding'>
<method class_method='true' selector='supportsSecureCoding' type64='B16@0:8'/>
<method selector='supportsSecureCoding' type64='TB,R'/>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method selector='connection:canAuthenticateAgainstProtectionSpace:' type64='B32@0:8@16@24'/>
<method selector='connectionShouldUseCredentialStorage:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='NSURLDownloadDelegate'>
<method selector='download:canAuthenticateAgainstProtectionSpace:' type64='B32@0:8@16@24'/>
<method selector='download:shouldDecodeSourceDataOfMIMEType:' type64='B32@0:8@16@24'/>
<method selector='downloadShouldUseCredentialStorage:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='NSUserNotificationCenterDelegate'>
<method selector='userNotificationCenter:shouldPresentNotification:' type64='B32@0:8@16@24'/>
</informal_protocol>
<informal_protocol name='NSXPCListenerDelegate'>
<method selector='listener:shouldAcceptNewConnection:' type64='B32@0:8@16@24'/>
</informal_protocol>
</signatures>
